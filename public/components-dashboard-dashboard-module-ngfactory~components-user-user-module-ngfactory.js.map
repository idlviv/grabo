{"version":3,"sources":["webpack:///./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatProgressSpinner.html","webpack:///./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatSpinner.html","webpack:///./src/app/components/user/user-create/user-create.component.html","webpack:///./src/app/components/user/user-create/user-create.component.ts","webpack:///./src/app/components/user/user-dialog/user-dialog.component.html","webpack:///./src/app/components/user/user-dialog/user-dialog.component.ts","webpack:///./src/app/components/user/user-login/user-login.component.html","webpack:///./src/app/components/user/user-login/user-login.component.ts","webpack:///./src/app/components/user/user-password-reset/user-password-reset.component.html","webpack:///./src/app/components/user/user-password-reset/user-password-reset.component.ts","webpack:///./src/app/components/user/user-profile/user-profile.component.html","webpack:///./src/app/components/user/user-profile/user-profile.component.ts","webpack:///./src/app/components/user/user-routing.module.ts","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/components/user/user.module.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module-ngfactory~components-user-user-module-ngfactory.js","sourcesContent":["<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><circle cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><circle cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n  <div fxFlex.gt-xs=\"20\" fxFlex.gt-md=\"30\"></div>\r\n\r\n  <div class=\"cell\" fxFlex.gt-xs=\"60\" fxFlex.gt-md=\"40\">\r\n  <!--<div class=\"cell\" fxFlex.gt-xs=\"60\" fxFlex.gt-md=\"40\" fxFlexOffset.gt-xs=\"20\" fxFlexOffset.gt-md=\"30\">-->\r\n\r\n  <div class=\"centered-container\">\r\n    <mat-card class=\"form-block\">\r\n      <mat-card-content>\r\n        <div class=\"padding-bottom\" fxLayout fxLayoutAlign=\"center center\">\r\n          <img class=\"responsive-image\" src=\"./assets/images/graboplast_logo.svg\" width=\"367px\">\r\n        </div>\r\n\r\n        <form [formGroup]=\"userCreateForm\" (submit)=\"onUserCreateSubmit()\">\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n              <mat-icon color=\"primary\">account_circle</mat-icon>\r\n            </div>\r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Логін\" formControlName=\"login\" required>\r\n              <mat-error\r\n                *ngIf=\"(userCreateForm.get('login').errors?.minlength ||\r\n                      userCreateForm.get('login').errors?.maxlength ||\r\n                      userCreateForm.get('login').errors?.required) &&\r\n                      userCreateForm.get('login').touched\">\r\n                Довжина повинна бути від 4 до 15 символів\r\n              </mat-error>\r\n              <mat-error\r\n                *ngIf=\"userCreateForm.get('login').errors?.pattern &&\r\n                     userCreateForm.get('login').touched\">\r\n                Використовуйте тільки латинські символи і цифри\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n              <mat-icon color=\"primary\">lock_outline</mat-icon>\r\n            </div>\r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Пароль\" formControlName=\"password\"\r\n                     required [type]=\"hidePassword ? 'password' : 'text'\">\r\n              <mat-icon class=\"muted\" matSuffix (click)=\"hidePassword = !hidePassword\">\r\n                {{hidePassword ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n              <mat-error\r\n                *ngIf=\"(userCreateForm.get('password').errors?.minlength ||\r\n                          userCreateForm.get('password').errors?.maxlength ||\r\n                          userCreateForm.get('password').errors?.required) &&\r\n                          userCreateForm.get('password').touched\">\r\n                Довжина повинна бути від 6 до 15 символів\r\n              </mat-error>\r\n              <mat-error\r\n                *ngIf=\"userCreateForm.get('password').errors?.pattern &&\r\n                         userCreateForm.get('password').touched\">\r\n                Використовуйте тільки латинські символи та цифри\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n              <!--<mat-icon color=\"primary\">lock</mat-icon>-->\r\n            </div>\r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Підтвердіть пароль\" formControlName=\"passwordConfirm\"\r\n                     required [type]=\"hidePassword ? 'password' : 'text'\">\r\n              <mat-error\r\n                *ngIf=\"userCreateForm.get('passwordConfirm').errors?.mismatch &&\r\n                      userCreateForm.get('passwordConfirm').touched\">\r\n                Пароль не збігається\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n              <mat-icon color=\"primary\">mail_outline</mat-icon>\r\n            </div>\r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" required>\r\n              <mat-error\r\n                *ngIf=\"(userCreateForm.get('email').errors?.minlength ||\r\n                        userCreateForm.get('email').errors?.maxlength ||\r\n                        userCreateForm.get('email').errors?.required) &&\r\n                        userCreateForm.get('email').touched\">\r\n                Довжина повинна бути від 5 до 30 символів\r\n              </mat-error>\r\n              <mat-error\r\n                *ngIf=\"userCreateForm.get('email').errors?.pattern &&\r\n                       userCreateForm.get('email').touched\">\r\n                Введіть правільну адресу\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <re-captcha [ngClass]=\"{'display-none':\r\n          !userCreateForm.get('email').valid || !userCreateForm.get('login').valid ||\r\n          !userCreateForm.get('password').valid || !userCreateForm.get('passwordConfirm').valid}\"\r\n                      [formControlName]=\"'recaptcha'\" #recaptchaRef\r\n                      siteKey=\"6Lc0uE8UAAAAAKyekxrsdhSdrgV9zhPW-lMY-srm\">\r\n          </re-captcha>\r\n\r\n          <div class=\"submit-button-wrapper\">\r\n            <!--<button type=\"reset\" mat-button color=\"primary\" (click)=\"onUserCreateReset()\">Повернутись</button>-->\r\n            <span fxFlex></span>\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!userCreateForm.valid\">Зареєструватись</button>\r\n          </div>\r\n\r\n        </form>\r\n      </mat-card-content>\r\n      <!--<img mat-card-image class=\"mat-card-image-bottom\" src=\"./assets/images/logo400x140-2.jpg\" alt=\"\">-->\r\n    </mat-card>\r\n  </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { ValidateService } from '../../../services/validate.service';\r\nimport { IUser } from '../../../interfaces/user-interface';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-user-create',\r\n  templateUrl: './user-create.component.html',\r\n  styleUrls: ['./user-create.component.scss']\r\n})\r\n\r\nexport class UserCreateComponent implements OnInit {\r\n  config = config;\r\n  userCreateForm: FormGroup;\r\n  hidePassword = true;\r\n  user: IUser;\r\n\r\n  /**\r\n   * directive for reset form (invalid status)\r\n   */\r\n  @ViewChild(FormGroupDirective) userCreateFormDirective: FormGroupDirective;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private userService: UserService,\r\n    private matSnackBar: MatSnackBar,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const emailPattern = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\r\n    this.userCreateForm = new FormGroup({\r\n        login: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(4),\r\n          Validators.maxLength(15),\r\n          Validators.pattern('[a-zA-Z0-9]+'),\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(15),\r\n          Validators.pattern('[a-zA-Z0-9]+'),\r\n        ]),\r\n        passwordConfirm: new FormControl('', [\r\n          Validators.required,\r\n        ]),\r\n        email: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          Validators.maxLength(30),\r\n          Validators.pattern(emailPattern),\r\n        ]),\r\n        name: new FormControl('', [\r\n          Validators.minLength(2),\r\n          Validators.maxLength(20),\r\n          Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ\\' ]+'),\r\n        ]),\r\n        surname: new FormControl('', [\r\n          Validators.minLength(2),\r\n          Validators.maxLength(20),\r\n          Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ\\' ]+'),\r\n        ]),\r\n        recaptcha: new FormControl('', [\r\n          Validators.required\r\n        ])\r\n      },\r\n      this.validateService.matchPassword\r\n    );\r\n\r\n    // this.onUserCreateFake();\r\n\r\n  }\r\n\r\n  onUserCreateSubmit() {\r\n    this.user = <IUser>{\r\n      login: this.userCreateForm.get('login').value,\r\n      password: this.userCreateForm.get('password').value,\r\n      email: this.userCreateForm.get('email').value,\r\n      // name: this.userCreateForm.get('name').value,\r\n      // surname: this.userCreateForm.get('surname').value\r\n    };\r\n    // create user\r\n    this.userService.userCreate(this.user)\r\n      .subscribe(\r\n        result => {\r\n          const token = result.data;\r\n          this.resetForm();\r\n          this.matSnackBar.open(result.message, '', {duration: 3000});\r\n          // login new user\r\n          this.userService.userLocalLogin(token);\r\n          this.router.navigate(['/user', 'profile']);\r\n        },\r\n        err => {\r\n          // 422 or 400\r\n          this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        }\r\n      );\r\n  }\r\n\r\n  onUserCreateFake() {\r\n    this.user = <IUser>{\r\n      login: 'tlogjygtr',\r\n      password: 'password',\r\n      email: 'email1h2rt2gj@email.com',\r\n\r\n    };\r\n\r\n    this.userService.userCreate(this.user)\r\n      .subscribe(\r\n        result => {\r\n          console.log('res', result);\r\n          this.resetForm();\r\n          this.matSnackBar.open(result.message, '', {duration: 3000});\r\n        },\r\n        err => {\r\n          // 422 or 400\r\n          this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n          console.log('err', err);\r\n        }\r\n      );\r\n  }\r\n\r\n  onUserCreateReset() {\r\n    this.resetForm();\r\n    // MAKE redirect\r\n  }\r\n\r\n  resetForm() {\r\n    if (this.userCreateFormDirective) {\r\n      this.userCreateFormDirective.resetForm();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<h1 mat-dialog-title>Внести зміни</h1>\n<div class=\"form-block\">\n    <form [formGroup]=\"userEditForm\" (submit)=\"onSubmit()\">\n\n      <div fxLayout=\"row\" *ngFor=\"let dataPayload of data.payload\">\n        <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\n          <mat-icon color=\"primary\">{{dataPayload.icon}}</mat-icon>\n        </div>\n        <mat-form-field>\n            <input matInput placeholder=\"{{dataPayload.label}}\" formControlName=\"{{dataPayload.name}}\"\n                   autocomplete=\"false\" type=\"{{dataPayload.type}}\" required>\n            <mat-error *ngFor=\"let validator of dataPayload.validators\">\n              <div\n                *ngIf=\"(validator.name === 'length' &&\n                (userEditForm.get(dataPayload.name).errors?.minlength ||\n                userEditForm.get(dataPayload.name).errors?.maxlength ||\n                userEditForm.get(dataPayload.name).errors?.required) &&\n                userEditForm.get(dataPayload.name).touched)\">\n                {{validator.message}}\n              </div>\n              <div\n                *ngIf=\"(validator.name === 'pattern' &&\n                userEditForm.get(dataPayload.name).errors?.pattern &&\n                userEditForm.get(dataPayload.name).touched)\">\n                {{validator.message}}\n              </div>\n              <div\n                *ngIf=\"(validator.name === 'require' &&\n                userEditForm.get(dataPayload.name).errors?.required &&\n                userEditForm.get(dataPayload.name).touched)\">\n                {{validator.message}}\n              </div>\n              <div\n                *ngIf=\"(validator.name === 'match' &&\n                userEditForm.get(dataPayload.name).errors?.mismatch &&\n                userEditForm.get(dataPayload.name).touched)\">\n                {{validator.message}}\n              </div>\n            </mat-error>\n          </mat-form-field>\n\n      </div>\n      <div class=\"submit-button-wrapper\">\n        <button type=\"reset\" mat-button color=\"primary\" (click)=\"onNoClick()\">Повернутись</button>\n        <span fxFlex></span>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!userEditForm.valid\">Ok</button>\n      </div>\n\n    </form>\n<p *ngIf=\"data.oldValue\" class=\"mat-body-1\">поточне значення: <span class=\"mat-body-2\">{{data.oldValue}}</span></p>\n\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user-dialog',\r\n  templateUrl: './user-dialog.component.html',\r\n  styleUrls: ['./user-dialog.component.scss']\r\n})\r\nexport class UserDialogComponent implements OnInit {\r\n  userEditForm: FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.userEditForm = this.data.initForm();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.dialogRef.close({\r\n      // request: [\r\n      //   {\r\n      //     [this.data.payload[0].name]: this.userEditForm.get(this.data.payload[0].name).value\r\n      //   }\r\n      // ],\r\n      name: this.data.payload[0].name,\r\n      value: this.userEditForm.get(this.data.payload[0].name).value,\r\n      password: this.data.payload[0].name === 'password' ?\r\n        this.userEditForm.get(this.data.payload[2].name).value :\r\n        this.userEditForm.get(this.data.payload[1].name).value\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n  <div fxFlex.gt-xs=\"20\" fxFlex.gt-md=\"30\"></div>\r\n\r\n  <div class=\"cell\" fxFlex.gt-xs=\"60\" fxFlex.gt-md=\"40\">\r\n    <!--<div class=\"cell\" fxFlex.gt-xs=\"60\" fxFlex.gt-md=\"40\" fxFlexOffset.gt-xs=\"20\" fxFlexOffset.gt-md=\"30\">-->\r\n\r\n  <div class=\"centered-container\">\r\n    <mat-card  class=\"form-block\">\r\n      <mat-card-content>\r\n        <div class=\"padding-bottom\" fxLayout fxLayoutAlign=\"center center\">\r\n          <img class=\"responsive-image\" src=\"./assets/images/graboplast_logo.svg\" width=\"367px\">\r\n        </div>\r\n        <form [formGroup]=\"userLoginForm\" (submit)=\"onUserLoginSubmit()\">\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n              <mat-icon color=\"primary\">account_circle</mat-icon>\r\n            </div>\r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Логін\" formControlName=\"login\" required>\r\n              <mat-error\r\n                *ngIf=\"userLoginForm.get('login').errors?.required &&\r\n                      userLoginForm.get('login').touched\">\r\n                      Введіть логін\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n              <mat-icon color=\"primary\">lock_outline</mat-icon>\r\n            </div>\r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Пароль\" formControlName=\"password\"\r\n                     required [type]=\"hidePassword ? 'password' : 'text'\">\r\n              <mat-icon class=\"muted\" matSuffix (click)=\"hidePassword = !hidePassword\">\r\n                {{hidePassword ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n              <mat-error\r\n                *ngIf=\"userLoginForm.get('password').errors?.required &&\r\n                          userLoginForm.get('password').touched\">\r\n                Введіть пароль\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"submit-button-wrapper\">\r\n            <!--<span fxFlex></span>-->\r\n            <button mat-raised-button class=\"full-width\" color=\"primary\" [disabled]=\"!userLoginForm.valid\">Увійти</button>\r\n          </div>\r\n          <div fxLayout=\"row\" class=\"links-wrapper\">\r\n            <a [routerLink]=\"['/user/create']\">Зареєструватись</a>\r\n            <span fxFlex></span>\r\n            <a [routerLink]=\"['/user/password-reset']\">Забули пароль</a>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <!--<img mat-card-image class=\"mat-card-image-bottom\" src=\"./assets/images/logo400x140-2.jpg\" alt=\"\">-->\r\n    </mat-card>\r\n  </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { IUser } from '../../../interfaces/user-interface';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.scss']\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n  config = config;\r\n  userLoginForm: FormGroup;\r\n  user: IUser;\r\n  hidePassword = true;\r\n\r\n  /**\r\n   * directive for reset form (invalid status)\r\n   */\r\n  @ViewChild(FormGroupDirective) userCreateFormDirective: FormGroupDirective;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private matSnackBar: MatSnackBar,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userLoginForm = new FormGroup({\r\n        login: new FormControl('', [\r\n          Validators.required,\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n        ]),\r\n      },\r\n    );\r\n  }\r\n\r\n  onUserLoginSubmit() {\r\n    this.user = <IUser>{\r\n      login: this.userLoginForm.get('login').value,\r\n      password: this.userLoginForm.get('password').value,\r\n    };\r\n\r\n    this.userService.userLogin(this.user)\r\n      .subscribe(\r\n        result => {\r\n          this.resetForm();\r\n          const token = result.data;\r\n\r\n          this.userService.userLocalLogin(token);\r\n          this.matSnackBar.open(result.message, '', {duration: 3000});\r\n          this.router.navigate(['/user', 'profile']);\r\n\r\n        },\r\n        err => {\r\n          let message;\r\n          if (err.error === 'maxTries') {\r\n            message = 'Досягнуто максимальну кількість спроб, вхід тимчасово заблоковано';\r\n          }\r\n          this.matSnackBar.open(message || err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        }\r\n      );\r\n  }\r\n\r\n  resetForm() {\r\n    if (this.userCreateFormDirective) {\r\n      this.userCreateFormDirective.resetForm();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n  <div class=\"cell\" fxFlex.gt-xs=\"20\" fxFlex.gt-md=\"30\"></div>\r\n\r\n  <div class=\"cell\" fxFlex.gt-xs=\"60\" fxFlex.gt-md=\"40\">\r\n\r\n    <div class=\"item centered-container\">\r\n      <mat-card class=\"form-block\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            <h2 class=\"mat-h2 accent\">Відновлення паролю</h2>\r\n            <mat-spinner *ngIf=\"processing\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n\r\n\r\n        <mat-card-content>\r\n\r\n          <mat-vertical-stepper #stepper linear>\r\n            <mat-step [stepControl]=\"emailForm\" editable=\"false\" >\r\n              <form [formGroup]=\"emailForm\" validate (submit)=\"onEmailSubmit(stepper)\">\r\n                <ng-template matStepLabel>Введіть свій email</ng-template>\r\n                <div fxLayout=\"row\">\r\n                  <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n                    <mat-icon color=\"primary\">mail_outline</mat-icon>\r\n                  </div>\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" required>\r\n\r\n                    <mat-error\r\n                      *ngIf=\"(emailForm.get('email').errors?.minlength ||\r\n                        emailForm.get('email').errors?.maxlength ||\r\n                        emailForm.get('email').errors?.required) &&\r\n                        emailForm.get('email').touched\">\r\n                      Довжина повинна бути від 5 до 30 символів\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"emailForm.get('email').errors?.pattern &&\r\n                        emailForm.get('email').touched\">\r\n                      Введіть правільну адресу\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"emailForm.get('email').errors?.invalidEmail &&\r\n                        emailForm.get('email').touched\">\r\n                      Користувач з такою поштою не зареєстрований\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"emailForm.get('email').errors?.unrecognizedError &&\r\n                        emailForm.get('email').touched\">\r\n                      Сталася помилка\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <re-captcha [ngClass]=\"{'display-none': !emailForm.get('email').valid}\"\r\n                  [formControlName]=\"'recaptcha'\" #recaptchaRef\r\n                            siteKey=\"6Lc0uE8UAAAAAKyekxrsdhSdrgV9zhPW-lMY-srm\">\r\n                </re-captcha>\r\n                <div>\r\n                  <button mat-button [disabled]=\"!emailForm.valid || processing\">Далі</button>\r\n                </div>\r\n              </form>\r\n            </mat-step>\r\n\r\n            <mat-step [stepControl]=\"codeForm\" editable=\"false\">\r\n\r\n              <form [formGroup]=\"codeForm\" (submit)=\"onCodeSubmit()\">\r\n                <!--<div *ngIf=\"codeForm.get('code').errors\">field {{codeForm.get('code').errors | json}}</div>-->\r\n                <!--<div *ngIf=\"codeForm.errors\">form {{codeForm.errors | json}}</div>-->\r\n\r\n                <ng-template matStepLabel>Введіть код, що надійшов на email</ng-template>\r\n                <div fxLayout=\"row\">\r\n                  <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n                    <mat-icon color=\"primary\">settings_ethernet</mat-icon>\r\n                  </div>\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Код підтвердження\" formControlName=\"code\" required>\r\n                    <mat-error\r\n                      *ngIf=\"codeForm.get('code').errors?.required &&\r\n                    codeForm.get('code').touched\">\r\n                      Введіть код\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"codeForm.get('code').errors?.invalidCode &&\r\n                        codeForm.get('code').touched\">\r\n                      Код введено не вірно\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"codeForm.get('code').errors?.maxTries\">\r\n                      Ви зробили максимальну кількість спроб\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"codeForm.get('code').errors?.unrecognizedError &&\r\n                        codeForm.get('code').touched\">\r\n                      Сталася помилка\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div>\r\n                  <button mat-button [disabled]=\"!codeForm.valid || processing\">Далі</button>\r\n                  <button *ngIf=\"codeForm.get('code').errors?.maxTries\"\r\n                          mat-button (click)=\"refresh()\">Оновити сторінку</button>\r\n                </div>\r\n              </form>\r\n            </mat-step>\r\n            <mat-step [stepControl]=\"passwordForm\" editable=\"false\">\r\n              <form [formGroup]=\"passwordForm\" (submit)=\"onPasswordSubmit()\">\r\n                <ng-template matStepLabel>Введіть новий пароль</ng-template>\r\n                <div fxLayout=\"row\">\r\n                  <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n                    <mat-icon color=\"primary\">lock_outline</mat-icon>\r\n                  </div>\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Пароль\" formControlName=\"password\"\r\n                           required [type]=\"hidePassword ? 'password' : 'text'\">\r\n                    <mat-icon class=\"muted\" matSuffix (click)=\"hidePassword = !hidePassword\">\r\n                      {{hidePassword ? 'visibility' : 'visibility_off'}}\r\n                    </mat-icon>\r\n                    <mat-error\r\n                      *ngIf=\"(passwordForm.get('password').errors?.minlength ||\r\n                          passwordForm.get('password').errors?.maxlength ||\r\n                          passwordForm.get('password').errors?.required) &&\r\n                          passwordForm.get('password').touched\">\r\n                      Довжина повинна бути від 6 до 15 символів\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"passwordForm.get('password').errors?.pattern &&\r\n                         passwordForm.get('password').touched\">\r\n                      Використовуйте тільки латинські символи та цифри\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div fxLayout=\"row\">\r\n                  <div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">\r\n                    <!--<mat-icon color=\"primary\">lock</mat-icon>-->\r\n                  </div>\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Підтвердіть пароль\" formControlName=\"passwordConfirm\"\r\n                           required [type]=\"hidePassword ? 'password' : 'text'\">\r\n                    <mat-error\r\n                      *ngIf=\"passwordForm.get('passwordConfirm').errors?.mismatch &&\r\n                      passwordForm.get('passwordConfirm').touched\">\r\n                      Пароль не збігається\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div>\r\n                  <button mat-button [disabled]=\"!passwordForm.valid || processing\">Завершити</button>\r\n                </div>\r\n              </form>\r\n            </mat-step>\r\n\r\n            <!--<mat-step *ngIf=\"result\">-->\r\n              <!--<ng-template matStepLabel>Пароль успішно змінено</ng-template>-->\r\n              <!--&lt;!&ndash;<p class=\"mat-body-2\">Пароль успішно змінено</p>&ndash;&gt;-->\r\n              <!--<div>-->\r\n                <!--<button mat-button [routerLink]=\"['/user', 'profile']\">Перейти в профіль</button>-->\r\n              <!--</div>-->\r\n            <!--</mat-step>-->\r\n          </mat-vertical-stepper>\r\n\r\n\r\n          <!--<form [formGroup]=\"userPasswordResetForm\" (submit)=\"onUserPasswordResetSubmit()\">-->\r\n\r\n          <!--<div fxLayout=\"row\">-->\r\n          <!--<div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">-->\r\n          <!--<mat-icon [ngClass]=\"color1\">looks_one</mat-icon>-->\r\n          <!--</div>-->\r\n          <!--<mat-form-field>-->\r\n          <!--<input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" required>-->\r\n          <!--<mat-error-->\r\n          <!--*ngIf=\"(userPasswordResetForm.get('email').errors?.minlength ||-->\r\n          <!--userPasswordResetForm.get('email').errors?.maxlength ||-->\r\n          <!--userPasswordResetForm.get('email').errors?.required) &&-->\r\n          <!--userPasswordResetForm.get('email').touched\">-->\r\n          <!--Довжина повинна бути від 5 до 30 символів-->\r\n          <!--</mat-error>-->\r\n          <!--<mat-error-->\r\n          <!--*ngIf=\"userPasswordResetForm.get('email').errors?.pattern &&-->\r\n          <!--userPasswordResetForm.get('email').touched\">-->\r\n          <!--Введіть правільну адресу-->\r\n          <!--</mat-error>-->\r\n          <!--</mat-form-field>-->\r\n          <!--<div fxFlexAlign=\"center\" class=\"mat-icon-wrapper-right\">-->\r\n          <!--<mat-spinner *ngIf=\"userPasswordResetForm.valid && processing === 'one' && !done1\"-->\r\n          <!--fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>-->\r\n          <!--<mat-icon *ngIf=\"userPasswordResetForm.valid && processing !== 'one' && !done1\"-->\r\n          <!--[ngClass]=\"color1\" class=\"clickable\" (click)=\"onUserPasswordResetSubmit()\">send</mat-icon>-->\r\n          <!--<mat-icon *ngIf=\"done1\" [ngClass]=\"color1\">done</mat-icon>-->\r\n          <!--</div>-->\r\n          <!--&lt;!&ndash;<div class=\"submit-button-wrapper\">&ndash;&gt;-->\r\n          <!--&lt;!&ndash;&lt;!&ndash;<span fxFlex></span>&ndash;&gt;&ndash;&gt;-->\r\n          <!--&lt;!&ndash;<button mat-raised-button class=\"full-width\" color=\"primary\" [disabled]=\"!userPasswordResetForm.valid\">Відправити</button>&ndash;&gt;-->\r\n          <!--&lt;!&ndash;</div>&ndash;&gt;-->\r\n          <!--</div>-->\r\n\r\n          <!--</form>-->\r\n\r\n          <!--<div fxLayout=\"row\">-->\r\n          <!--<div fxFlexAlign=\"center\" class=\"mat-icon-wrapper\">-->\r\n          <!--<mat-icon [ngClass]=\"color2\">looks_two</mat-icon>-->\r\n          <!--</div>-->\r\n          <!--<div>Перевірте пошту і перейдіть за посиланням</div>-->\r\n          <!--<div fxFlexAlign=\"center\" class=\"mat-icon-wrapper-right\">-->\r\n          <!--<mat-icon *ngIf=\"done2\" color=\"primary\">done</mat-icon>-->\r\n          <!--</div>-->\r\n          <!--&lt;!&ndash;<div class=\"submit-button-wrapper\">&ndash;&gt;-->\r\n          <!--&lt;!&ndash;&lt;!&ndash;<span fxFlex></span>&ndash;&gt;&ndash;&gt;-->\r\n          <!--&lt;!&ndash;<button mat-raised-button class=\"full-width\" color=\"primary\" [disabled]=\"!userPasswordResetForm.valid\">Відправити</button>&ndash;&gt;-->\r\n          <!--&lt;!&ndash;</div>&ndash;&gt;-->\r\n          <!--</div>-->\r\n\r\n        </mat-card-content>\r\n        <!--<img mat-card-image class=\"mat-card-image-bottom\" src=\"./assets/images/logo400x140-2.jpg\" alt=\"\">-->\r\n      </mat-card>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n","import { Component,  OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { ValidateService } from '../../../services/validate.service';\r\nimport { MatSnackBar, MatStepper, MatVerticalStepper } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { config } from '../../../app.config';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-password-reset',\r\n  templateUrl: './user-password-reset.component.html',\r\n  styleUrls: ['./user-password-reset.component.scss']\r\n})\r\nexport class UserPasswordResetComponent implements OnInit {\r\n  config = config;\r\n  emailForm: FormGroup;\r\n  codeForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  hidePassword = true;\r\n  processing = false;\r\n  result = false;\r\n\r\n  @ViewChild('stepper') matStepper: MatStepper;\r\n  @ViewChild('recaptchaRef') recaptchaRef;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private validateService: ValidateService,\r\n    private matSnackBar: MatSnackBar,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const emailPattern = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\r\n    this.emailForm = new FormGroup({\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.maxLength(30),\r\n        Validators.pattern(emailPattern),\r\n      ]),\r\n      recaptcha: new FormControl('', [\r\n        Validators.required\r\n      ])\r\n      },\r\n    );\r\n\r\n    this.codeForm = new FormGroup({\r\n        code: new FormControl('', [\r\n          Validators.required,\r\n        ]),\r\n      },\r\n    );\r\n\r\n    this.passwordForm = new FormGroup({\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(15),\r\n          Validators.pattern('[a-zA-Z0-9]+'),\r\n        ]),\r\n        passwordConfirm: new FormControl('', [\r\n          Validators.required,\r\n        ]),\r\n      },\r\n      this.validateService.matchPassword\r\n    );\r\n\r\n  }\r\n\r\n  onEmailSubmit(stepper) {\r\n    this.processing = true;\r\n    this.userService.userLocalRemoveToken('token');\r\n    this.userService.userLocalRemoveToken('codeToken');\r\n    this.userService.userLocalRemoveToken('passwordResetToken');\r\n\r\n    const email = this.emailForm.get('email').value;\r\n    const recaptcha = this.emailForm.get('recaptcha').value;\r\n    this.userService.userPasswordResetEmail(email, recaptcha)\r\n      .subscribe(\r\n        result => {\r\n          this.processing = false;\r\n          this.emailForm.get('email').setErrors(null);\r\n          this.matStepper.next();\r\n          const codeToken = result.data;\r\n          this.userService.userLocalSetToken('codeToken', codeToken);\r\n          console.log(result);\r\n        },\r\n        err => {\r\n          this.recaptchaRef.reset();\r\n          this.processing = false;\r\n          if (err.error === 'noSuchUser') {\r\n            this.emailForm.get('email').setErrors({invalidEmail: true});\r\n          } else {\r\n            this.emailForm.get('email').setErrors({unrecognizedError: true});\r\n          }\r\n        }\r\n      );\r\n    // console.log('this.matStepper', this.matStepper);\r\n  }\r\n\r\n  onCodeSubmit() {\r\n    this.processing = true;\r\n    console.log('onCodeSubmit');\r\n    const code = this.codeForm.get('code').value;\r\n\r\n    const codeToken = this.userService.userLocalGetToken('codeToken');\r\n    this.userService.userPasswordResetCode(code, codeToken)\r\n      .subscribe(\r\n        result => {\r\n          this.processing = false;\r\n          this.codeForm.get('code').setErrors(null);\r\n          this.matStepper.next();\r\n          console.log('check code', result);\r\n          this.userService.userLocalRemoveToken('codeToken');\r\n          const passwordResetToken = result.data;\r\n          this.userService.userLocalSetToken('passwordResetToken', passwordResetToken);\r\n        },\r\n        err => {\r\n          this.processing = false;\r\n          if (err.error === 'wrongCredentials') {\r\n            this.codeForm.get('code').setErrors({invalidCode: true});\r\n          } else if (err.error === 'maxTries') {\r\n            this.codeForm.get('code').setErrors({maxTries: true});\r\n            this.codeForm.setValidators(this.validateService.maxTries);\r\n            setTimeout(() => {\r\n              this.router.navigate(['/'])}, 3000);\r\n              this.matSnackBar.open('Код невірний, спрпобуйте пізніше', '',\r\n              {duration: 4000, panelClass: 'snack-bar-danger'});\r\n\r\n          } else {\r\n            this.codeForm.get('code').setErrors({unrecognizedError: true});\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  onPasswordSubmit() {\r\n    this.processing = true;\r\n    console.log('onPasswordSubmit');\r\n    const password = this.passwordForm.get('password').value;\r\n\r\n    const passwordResetToken = this.userService.userLocalGetToken('passwordResetToken');\r\n    this.userService.userPasswordReset(password, passwordResetToken)\r\n      .subscribe(result => {\r\n          const token = result.data;\r\n          this.processing = false;\r\n          this.result = true;\r\n          // this.matStepper.next();\r\n          this.userService.userLocalRemoveToken('passwordResetToken');\r\n          this.userService.userLocalLogin(token);\r\n          this.router.navigate(['/user', 'profile']);\r\n          this.matSnackBar.open(result.message, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        },\r\n        err => {\r\n          this.processing = false;\r\n          this.matSnackBar.open('Пароль не змінено', '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        }\r\n      );\r\n  }\r\n\r\n  goHomePage() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","<div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n  <div class=\"cell\" fxFlex.gt-xs=\"20\" fxFlex.gt-md=\"30\"></div>\r\n\r\n  <div class=\"cell\" fxFlex.gt-xs=\"60\" fxFlex.gt-md=\"40\">\r\n\r\n    <div class=\"item centered-container\" *ngIf=\"user\">\r\n      <div class=\"info-block mat-elevation-z4\">\r\n\r\n        <div class=\"avatar-block\">\r\n          <form [formGroup]=\"changeAvatarForm\" (submit)=\"onSubmitChangeAvatarForm()\">\r\n\r\n          <div class=\"avatar-img-wrapper\">\r\n            <img *ngIf=\"!previewAvatarUrl\" src=\"{{user.avatar}}\" alt=\"avatar\">\r\n            <img *ngIf=\"previewAvatarUrl\"  src=\"{{previewAvatarUrl}}\" alt=\"avatar\">\r\n\r\n            <div *ngIf=\"processingChangeAvatar\" class=\"avatar-div-processing\">\r\n              <div class=\"spinner-wrapper\">\r\n                <mat-spinner [diameter]=\"24\"></mat-spinner>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"!editAvatar && !processingChangeAvatar\" class=\"avatar-div-change\"></div>\r\n            <div *ngIf=\"!editAvatar && !processingChangeAvatar\" class=\"avatar-button-change\">\r\n              <input type=\"file\" accept=\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif\" (change)=\"changeAvatar($event)\" id=\"input-file\">\r\n              <label for=\"input-file\">Змінити\r\n              </label>\r\n            </div>\r\n\r\n\r\n            <div *ngIf=\"editAvatar && !processingChangeAvatar\">\r\n              <div class=\"avatar-div-ok\" >\r\n              </div>\r\n              <div class=\"avatar-div-cancel\">\r\n              </div>\r\n              <button class=\"avatar-button-ok\" [disabled]=\"!changeAvatarForm.valid\">\r\n                <mat-icon>done</mat-icon>\r\n              </button>\r\n              <button type=\"button\" class=\"avatar-button-cancel\" (click)=\"cancelChangeAvatar()\">\r\n                <mat-icon>cancel</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          </form>\r\n\r\n        </div>\r\n\r\n        <div class=\"info-block-row-wrapper\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row\">\r\n            <div class=\"info-block-row-title mat-title\">{{user.login}}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"info-block-row-wrapper\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row\">\r\n              <!--<div fxFlex=\"100%\">-->\r\n                <div class=\"info-block-row-title mat-subheading-1\" fxFlex=\"40%\">Email</div>\r\n                <div class=\"mat-body-1 muted\" fxFlex=\"60%\">{{user.email}}</div>\r\n                <mat-icon *ngIf=\"processing !== 'email'\" fxFlex=\"30px\"\r\n                          (click)=\"openDialog(makeEmailObject())\" class=\"muted\">edit</mat-icon>\r\n                <mat-spinner *ngIf=\"processing === 'email'\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>\r\n              <!--</div>-->\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"user.role === 'guest' && !verificationSent\" class=\"info-block-row-wrapper border-0\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row mail-verification\">\r\n            <div class=\"mat-body-1\" fxFlex=\"100%\">Пошту не верифіковано, надіслати код</div>\r\n            <mat-icon *ngIf=\"processing !== 'verification'\" fxFlex=\"30px\" (click)=\"onVerificationSend()\">mail</mat-icon>\r\n            <mat-spinner *ngIf=\"processing === 'verification'\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"user.role === 'guest' && verificationSent\" class=\"info-block-row-wrapper border-0\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row mail-verification\">\r\n            <div class=\"mat-body-1 muted\" fxFlex=\"100%\">На пошту надіслано посилання</div>\r\n            <mat-icon *ngIf=\"processing !== 'verification'\" fxFlex=\"30px\" class=\"muted\" (click)=\"onVerificationSend()\">refresh</mat-icon>\r\n            <mat-spinner *ngIf=\"processing === 'verification'\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"info-block-row-wrapper\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row\">\r\n            <div class=\"info-block-row-title mat-subheading-1\" fxFlex=\"40%\">Ім'я</div>\r\n            <!--<div fxFlex></div>-->\r\n            <div class=\"mat-subheading-2 muted\" fxFlex=\"60%\">{{user.name}}</div>\r\n            <mat-icon *ngIf=\"processing !== 'name'\" fxFlex=\"30px\"\r\n                      (click)=\"openDialog(makeNameObject())\" class=\"muted\">edit</mat-icon>\r\n            <mat-spinner *ngIf=\"processing === 'name'\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"info-block-row-wrapper\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row\">\r\n            <div class=\"info-block-row-title mat-subheading-1\" fxFlex=\"40%\">Прізвище</div>\r\n            <!--<div fxFlex></div>-->\r\n            <div class=\"mat-subheading-2 muted\" fxFlex=\"60%\">{{user.surname}}</div>\r\n            <mat-icon *ngIf=\"processing !== 'surname'\" fxFlex=\"30px\"\r\n                      (click)=\"openDialog(makeSurnameObject())\" class=\"muted\">edit</mat-icon>\r\n            <mat-spinner *ngIf=\"processing === 'surname'\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"info-block-row-wrapper\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row\">\r\n            <div fxFlex=\"60%\"></div>\r\n            <div fxFlex=\"40%\">\r\n              <button mat-button (click)=\"openDialog(makePasswordObject())\">\r\n                <span *ngIf=\"processing !== 'password'\">Змінити пароль</span>\r\n                <mat-spinner *ngIf=\"processing === 'password'\" [diameter]=\"24\"></mat-spinner>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { IUser } from '../../../interfaces/user-interface';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { UserDialogComponent } from '../user-dialog/user-dialog.component';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { IResponse } from '../../../interfaces/server-response-interface';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.scss']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  user: IUser;\r\n  processing: string;\r\n  changeAvatarForm: FormGroup;\r\n  editAvatar = false;\r\n  previewAvatarUrl;\r\n  processingChangeAvatar = false;\r\n  verificationSent = false;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private matSnackBar: MatSnackBar,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getProfile();\r\n\r\n    this.changeAvatarForm = new FormGroup({\r\n      file : new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  onVerificationSend() {\r\n    this.verificationSent = true;\r\n    this.processing = 'verification';\r\n    this.userService.userEmailVerification()\r\n      .subscribe(result => {\r\n          this.processing = '';\r\n        this.matSnackBar.open(result.message, '',\r\n          {duration: 3000});\r\n      },\r\n\r\n        err => {\r\n          this.processing = '';\r\n          // this.matSnackBar.open(err.error || 'Помилка', '',\r\n          //   {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        }\r\n\r\n      );\r\n  }\r\n\r\n  onSubmitChangeAvatarForm() {\r\n    this.processingChangeAvatar = true;\r\n    this.userService.userEditAvatar(this.changeAvatarForm.get('file').value)\r\n      .subscribe(result => {\r\n        this.matSnackBar.open(result.message, '',\r\n            {duration: 3000});\r\n        this.getProfile();\r\n        this.previewAvatarUrl = null;\r\n        this.processingChangeAvatar = false;\r\n        this.editAvatar = false;\r\n      },\r\n        err =>\r\n          this.matSnackBar.open(err.error || 'Помилка', '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  changeAvatar(event) {\r\n    this.editAvatar = true;\r\n    const checkFile = this.userService.checkFile(event.target);\r\n\r\n    if (!checkFile.success) {\r\n      this.cancelChangeAvatar();\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n    } else {\r\n      this.changeAvatarForm.get('file').setValue(event.target.files[0]);\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.addEventListener('load', (readerEvent: any) => {\r\n        // .jpg, .jpe, .jpeg, .bmp, .webp, .png\r\n        this.previewAvatarUrl = readerEvent.target.result;\r\n      });\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  cancelChangeAvatar() {\r\n    this.changeAvatarForm.get('file').setValue(null);\r\n    this.editAvatar = false;\r\n    this.previewAvatarUrl = null;\r\n  }\r\n\r\n  getProfile(): void {\r\n    this.userService.userGetProfile()\r\n      .subscribe(\r\n        result => {\r\n          this.user = result.data;\r\n          console.log('user', this.user);\r\n        },\r\n        err => {\r\n          this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n          this.router.navigate(['/user', 'login']);\r\n        }\r\n      );\r\n  }\r\n\r\n  openDialog(object): void {\r\n\r\n    const dialogRef = this.dialog.open(UserDialogComponent, {\r\n      width: '400px',\r\n      data: object,\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      mergeMap(result => {\r\n\r\n        if (result) {\r\n          return this.userService.userEdit(result);\r\n        }\r\n        return of(<IResponse>{\r\n          success: false,\r\n          message: 'dialog wasn\\'t submitted',\r\n          data: 'doNothing'\r\n        });\r\n      })\r\n    )\r\n      .subscribe(result => {\r\n          this.processing = null;\r\n\r\n          if (!result.success) {\r\n            // didn't get data from dialog\r\n            if (result.data === 'doNothing') {\r\n              return;\r\n            }\r\n            return;\r\n          } else {\r\n            this.matSnackBar.open('Дані успішно збережено', '',\r\n              {duration: 3000});\r\n            this.getProfile();\r\n          }\r\n        },\r\n        err => {\r\n          this.processing = null;\r\n          this.matSnackBar.open(err.error || 'Помилка', '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        }\r\n      );\r\n  }\r\n\r\n  makePasswordObject() {\r\n    this.processing = 'password';\r\n    return {\r\n      payload: [{\r\n        name: 'password',\r\n        label: 'Новий пароль',\r\n        type: 'password',\r\n        icon: 'lock_outline',\r\n        validators: [\r\n          {\r\n            name: 'length',\r\n            message: 'Довжина повинна бути від 6 до 15 символів'\r\n          },\r\n          {\r\n            name: 'pattern',\r\n            message : 'Використовуйте тільки латинські символи та цифри'\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'passwordConfirm',\r\n        label: 'Підтвердіть пароль',\r\n        type: 'password',\r\n        icon: '',\r\n        validators: [\r\n          {\r\n            name: 'require',\r\n            message : 'Це поле не може бути пустим'\r\n          },\r\n          {\r\n            name: 'match',\r\n            message : 'Пароль не збігається'\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: 'passwordCurrent',\r\n        label: 'Діючий пароль',\r\n        type: 'password',\r\n        icon: '',\r\n        validators: [\r\n          {\r\n            name: 'require',\r\n            message : 'Це поле не може бути пустим'\r\n          }\r\n        ],\r\n      }],\r\n\r\n      initForm: function(): FormGroup {\r\n        return new FormGroup({\r\n          password: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(6),\r\n            Validators.maxLength(15),\r\n            Validators.pattern('[a-zA-Z0-9]+'),\r\n          ]),\r\n          passwordConfirm: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n          passwordCurrent: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n        },\r\n          function matchPassword(abstractControl: AbstractControl) {\r\n          const password = abstractControl.get('password').value;\r\n          const passwordConfirm = abstractControl.get('passwordConfirm').value;\r\n            if (password === passwordConfirm) {\r\n            abstractControl.get('passwordConfirm').setErrors(null);\r\n            return null;\r\n          } else {\r\n            abstractControl.get('passwordConfirm').setErrors({mismatch: true});\r\n            return null;\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  makeEmailObject() {\r\n    this.processing = 'email';\r\n    const emailPattern = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    return {\r\n      payload: [{\r\n        name: 'email',\r\n        label: 'Email',\r\n        type: 'email',\r\n        icon: 'mail_outline',\r\n        oldValue: this.user.email,\r\n        validators: [\r\n          {\r\n            name: 'length',\r\n            message: 'Довжина повинна бути від 5 до 30 символів'\r\n          },\r\n          {\r\n            name: 'pattern',\r\n            message: 'Введіть правільну адресу'\r\n          }\r\n        ],\r\n        },\r\n        {\r\n        name: 'passwordCurrent',\r\n        label: 'Введіть пароль',\r\n        type: 'password',\r\n        icon: '',\r\n        validators: [\r\n          {\r\n            name: 'require',\r\n            message : 'Це поле не може бути пустим'\r\n          }\r\n        ],\r\n      }],\r\n      initForm: function () {\r\n        return new FormGroup({\r\n          email: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(5),\r\n            Validators.maxLength(30),\r\n            Validators.pattern(emailPattern),\r\n          ]),\r\n          passwordCurrent: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n        });\r\n      },\r\n    };\r\n  }\r\n\r\n  makeNameObject() {\r\n    this.processing = 'name';\r\n    return {\r\n      payload: [{\r\n        name: 'name',\r\n        label: 'Ім\\'я',\r\n        type: '',\r\n        icon: 'perm_identity',\r\n        oldValue: this.user.name,\r\n        validators: [\r\n          {\r\n            name: 'length',\r\n            message: 'Довжина повинна бути від 2 до 20 символів'\r\n          },\r\n          {\r\n            name: 'pattern',\r\n            message: 'Використовуйте букви і цифри'\r\n          }\r\n        ],\r\n      },\r\n        {\r\n          name: 'passwordCurrent',\r\n          label: 'Введіть пароль',\r\n          type: 'password',\r\n          icon: '',\r\n          validators: [\r\n            {\r\n              name: 'require',\r\n              message : 'Це поле не може бути пустим'\r\n            }\r\n          ],\r\n        }],\r\n      initForm: function () {\r\n        return new FormGroup({\r\n          name: new FormControl('', [\r\n            Validators.minLength(2),\r\n            Validators.maxLength(20),\r\n            Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ\\' ]+'),\r\n          ]),\r\n          passwordCurrent: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n        });\r\n      },\r\n    };\r\n  }\r\n\r\n  makeSurnameObject() {\r\n    this.processing = 'surname';\r\n    return {\r\n      payload: [{\r\n        name: 'surname',\r\n        label: 'Прізвище',\r\n        type: '',\r\n        icon: 'perm_identity',\r\n        oldValue: this.user.surname,\r\n        validators: [\r\n          {\r\n            name: 'length',\r\n            message: 'Довжина повинна бути від 2 до 20 символів'\r\n          },\r\n          {\r\n            name: 'pattern',\r\n            message: 'Використовуйте букви і цифри'\r\n          }\r\n        ],\r\n      },\r\n        {\r\n          name: 'passwordCurrent',\r\n          label: 'Введіть пароль',\r\n          type: 'password',\r\n          icon: '',\r\n          validators: [\r\n            {\r\n              name: 'require',\r\n              message : 'Це поле не може бути пустим'\r\n            }\r\n          ],\r\n        }],\r\n      initForm: function () {\r\n        return new FormGroup({\r\n          surname: new FormControl('', [\r\n            Validators.minLength(2),\r\n            Validators.maxLength(20),\r\n            Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ\\' ]+'),\r\n          ]),\r\n          passwordCurrent: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n        });\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { UserPasswordResetComponent } from './user-password-reset/user-password-reset.component';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { Page404Component } from '../shared/page-404/page-404.component';\r\n\r\nconst userRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserComponent,\r\n    children: [\r\n      {\r\n        path: 'create',\r\n        component: UserCreateComponent,\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: UserLoginComponent,\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: UserProfileComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'guest' },\r\n      },\r\n      {\r\n        path: 'password-reset',\r\n        component: UserPasswordResetComponent,\r\n      },\r\n      { path: '', component: Page404Component },\r\n\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(\r\n      userRoutes\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class UserRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserComponent } from './user.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { UserDialogComponent } from './user-dialog/user-dialog.component';\r\nimport { UserPasswordResetComponent } from './user-password-reset/user-password-reset.component';\r\nimport { RecaptchaModule } from 'ng-recaptcha';\r\nimport { RecaptchaFormsModule } from 'ng-recaptcha/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent,\r\n    UserCreateComponent,\r\n    UserLoginComponent,\r\n    UserProfileComponent,\r\n    UserDialogComponent,\r\n    UserPasswordResetComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RecaptchaModule,\r\n    RecaptchaFormsModule\r\n  ],\r\n  exports: [\r\n  ],\r\n  entryComponents: [\r\n    UserDialogComponent,\r\n  ]\r\n})\r\n\r\nexport class UserModule { }\r\n"],"sourceRoot":""}