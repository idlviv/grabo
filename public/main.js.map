{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/shared/confirm-popup/confirm-popup.component.html","webpack:///./src/app/components/shared/confirm-popup/confirm-popup.component.scss","webpack:///./src/app/components/shared/confirm-popup/confirm-popup.component.ts","webpack:///./src/app/components/shared/footer/footer.component.html","webpack:///./src/app/components/shared/footer/footer.component.scss","webpack:///./src/app/components/shared/footer/footer.component.ts","webpack:///./src/app/components/shared/home/home.component.html","webpack:///./src/app/components/shared/home/home.component.scss","webpack:///./src/app/components/shared/home/home.component.ts","webpack:///./src/app/components/shared/message/message.component.html","webpack:///./src/app/components/shared/message/message.component.scss","webpack:///./src/app/components/shared/message/message.component.ts","webpack:///./src/app/components/shared/navbar/navbar.component.html","webpack:///./src/app/components/shared/navbar/navbar.component.scss","webpack:///./src/app/components/shared/navbar/navbar.component.ts","webpack:///./src/app/components/shared/page-404/page-404.component.html","webpack:///./src/app/components/shared/page-404/page-404.component.scss","webpack:///./src/app/components/shared/page-404/page-404.component.ts","webpack:///./src/app/components/shared/product-item/product-item.component.html","webpack:///./src/app/components/shared/product-item/product-item.component.scss","webpack:///./src/app/components/shared/product-item/product-item.component.ts","webpack:///./src/app/components/shared/shared.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/catalog.service.ts","webpack:///./src/app/services/message.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/shared.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./components/dashboard/dashboard.module\": [\n\t\t\"./src/app/components/dashboard/dashboard.module.ts\",\n\t\t\"components-dashboard-dashboard-module~components-user-user-module\",\n\t\t\"components-dashboard-dashboard-module\"\n\t],\n\t\"./components/products/products.module\": [\n\t\t\"./src/app/components/products/products.module.ts\",\n\t\t\"components-products-products-module\"\n\t],\n\t\"./components/user/user.module\": [\n\t\t\"./src/app/components/user/user.module.ts\",\n\t\t\"components-dashboard-dashboard-module~components-user-user-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { Page404Component } from './components/shared/page-404/page-404.component';\r\nimport { HomeComponent } from './components/shared/home/home.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst appRoutes: Routes = [\r\n  // {\r\n  //   path: 'products',\r\n  //   loadChildren: './components/product/product.module#ProductModule',\r\n  //   // pathMatch: 'full'\r\n  // },\r\n  {\r\n    path: 'products',\r\n    loadChildren: './components/products/products.module#ProductsModule',\r\n    // pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'blogs',\r\n    component: Page404Component\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: './components/dashboard/dashboard.module#DashboardModule',\r\n    canActivate: [AuthGuard],\r\n    data: { auth: 'user' },\r\n  },\r\n  {\r\n    path: 'user',\r\n    loadChildren: './components/user/user.module#UserModule'\r\n  },\r\n\r\n  { path: 'page-404', component: Page404Component },\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  // { path: '', loadChildren: './components/home/home.module#HomeModule', pathMatch: 'full' },\r\n  { path: '**', component: Page404Component }, // MAKE redirect\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<div class=\\\"container\\\" fxHide.lt-md=\\\"true\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"cell\\\">\\r\\n      <img src=\\\"./assets/images/graboplast_logo373x90.png\\\" alt=\\\"graboplast logo\\\">\\r\\n    </div>\\r\\n    <div fxFlex></div>\\r\\n\\r\\n    <div class=\\\"cell\\\">\\r\\n      Контакти\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n  <mat-toolbar class=\\\"mat-elevation-z4 header\\\" color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n    <!--<div fxLayoutAlign=\\\"flex\\\"></div>-->\\r\\n    <a fxHide.gt-sm=\\\"true\\\" mat-button [routerLink]=\\\"['']\\\">\\r\\n      <img src=\\\"./assets/images/graboplast_logo207x50.png\\\" alt=\\\"graboplast logo\\\">\\r\\n\\r\\n\\r\\n      <!--<span class=\\\"mat-title toolbar-branding\\\">-->\\r\\n        <!--G<span class=\\\"mat-subheading-2 toolbar-branding\\\">rabo</span>-->\\r\\n      <!--</span>-->\\r\\n    </a>\\r\\n\\r\\n    <!--['/products/ch', {outlets: {primary: 'category/' + category0 + '/' + submenuItem.name,-->\\r\\n    <!--productsSubmenu:  'category/' + category0 + '/' + submenuItem.name}}]-->\\r\\n    <!--,productSidenav: mainMenuCommonItem._id}}]\\\"-->\\r\\n\\r\\n    <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">\\r\\n      <!--<a *ngFor=\\\"let mainMenuCommonItem\\r\\n of mainMenuCommonItems\\r\\n\\\" mat-button-->\\r\\n         <!--[routerLink]=\\\"['/products', 'cat', {outlets: {primary: [mainMenuCommonItem\\r\\n._id],-->\\r\\n          <!--productSidenav:  [mainMenuCommonItem\\r\\n._id]}}]\\\"-->\\r\\n         <!--[routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">-->\\r\\n        <!--{{mainMenuCommonItem\\r\\n.name}}-->\\r\\n      <!--</a>-->\\r\\n      <a *ngFor=\\\"let mainMenuCommonItem of mainMenuCommonItems\\\" mat-button\\r\\n         [routerLink]=\\\"['/', mainMenuCommonItem._id, 'ch']\\\"\\r\\n         [routerLinkActive]=\\\"['accent']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n         {{mainMenuCommonItem.name}}\\r\\n      </a>\\r\\n\\r\\n      <!--Blog-->\\r\\n\\r\\n      <!--<a *ngFor=\\\"let mainMenuBlogsItem of mainMenuBlogsItems\\\" mat-button-->\\r\\n         <!--[routerLink]=\\\"['/blogs']\\\"-->\\r\\n         <!--[routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">-->\\r\\n        <!--{{mainMenuBlogsItem.name}}-->\\r\\n      <!--</a>-->\\r\\n\\r\\n    </div>\\r\\n    <div fxFlex></div>\\r\\n\\r\\n\\r\\n    <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">\\r\\n      <!--<a *ngIf=\\\"user && user?.role === 'guest' || user?.role === 'user'\\\" mat-button [routerLink]=\\\"['/user/profile']\\\"-->\\r\\n         <!--[routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">-->\\r\\n        <!--<mat-icon>account_circle</mat-icon><span> {{user.login}}</span></a>-->\\r\\n\\r\\n      <button *ngIf=\\\"user\\\"\\r\\n              mat-button [matMenuTriggerFor]=\\\"settingsMenu\\\" #settingsMenuTrigger=\\\"matMenuTrigger\\\"\\r\\n              (mouseover)=\\\"onSettingsMenuMouseover()\\\">\\r\\n        <mat-icon>settings</mat-icon><span> {{user.login}}</span>\\r\\n      </button>\\r\\n\\r\\n      <mat-menu #settingsMenu=\\\"matMenu\\\" xPosition=\\\"after\\\" yPosition=\\\"above\\\" [overlapTrigger]=\\\"false\\\">\\r\\n        <span (mouseleave)=\\\"onSettingsMenuMouseleave()\\\">\\r\\n\\r\\n        <a *ngIf=\\\"user\\\"\\r\\n           mat-menu-item [routerLink]=\\\"['/user/profile']\\\"\\r\\n           [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n          <mat-icon>account_circle</mat-icon><span>Профіль</span></a>\\r\\n        <a *ngIf=\\\"user && user?.role === 'manager' || user?.role === 'admin'\\\"\\r\\n           mat-menu-item [routerLink]=\\\"['/dashboard']\\\"\\r\\n           [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n          <mat-icon>settings</mat-icon><span>Dashboard</span></a>\\r\\n          <!--<button mat-menu-item >Cards</button>-->\\r\\n          <!--<button mat-menu-item >About</button>-->\\r\\n        </span>\\r\\n\\r\\n      </mat-menu>\\r\\n\\r\\n      <a *ngIf='!user'\\r\\n         [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n         mat-button [routerLink]=\\\"['/user/login']\\\">Вхід</a>\\r\\n\\r\\n      <a *ngIf='user'\\r\\n         mat-button (click)=\\\"userLocalLogout()\\\"><mat-icon>exit_to_app</mat-icon> Вихід</a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">\\r\\n      <button mat-button (click)=\\\"sidenav.toggle()\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    </mat-toolbar-row>\\r\\n\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-sidenav-container fxFlexFill>\\r\\n    <mat-sidenav #sidenav fxLayout=\\\"column\\\"\\r\\n                 position=\\\"end\\\" class=\\\"sidenav\\\" role=\\\"navigation\\\" mode=\\\"side\\\">\\r\\n\\r\\n      <!--<mat-toolbar class=\\\"mat-elevation-z2\\\">-->\\r\\n        <!--<mat-toolbar-row *ngFor=\\\"let dashboardSidenavItem of dashboardSidenavItems\\\" class=\\\"sidenav-mat-toolbar-row\\\">-->\\r\\n          <!--<a [routerLinkActive]=\\\"['accent-background']\\\" fxLayout=\\\"\\\"-->\\r\\n             <!--[routerLinkActiveOptions]=\\\"{exact: true}\\\" mat-button-->\\r\\n             <!--[routerLink]=\\\"['/dashboard', dashboardSidenavItem._id]\\\">{{dashboardSidenavItem.name}}</a>-->\\r\\n        <!--</mat-toolbar-row>-->\\r\\n      <!--</mat-toolbar>-->\\r\\n\\r\\n      <div fxLayout=\\\"column\\\">\\r\\n        <mat-nav-list>\\r\\n          <mat-list-item *ngFor=\\\"let mainMenuCommonItem\\r\\n of mainMenuCommonItems\\r\\n\\\">\\r\\n            <!--<mat-icon mat-list-icon>swap_horiz</mat-icon>-->\\r\\n\\r\\n            <a matLine\\r\\n               [routerLinkActive]=\\\"['muted']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n               [routerLink]=\\\"['/products', 'cat', mainMenuCommonItem\\r\\n._id]\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n              {{mainMenuCommonItem\\r\\n.name}}\\r\\n            </a>\\r\\n            <!--<button mat-icon-button>-->\\r\\n              <!--<mat-icon>info</mat-icon>-->\\r\\n            <!--</button>-->\\r\\n          </mat-list-item>\\r\\n\\r\\n          <!--Blog-->\\r\\n\\r\\n          <!--<mat-list-item *ngFor=\\\"let mainMenuBlogsItem of mainMenuBlogsItems\\\">-->\\r\\n            <!--<a  matLine-->\\r\\n             <!--[routerLinkActive]=\\\"['muted']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"-->\\r\\n             <!--[routerLink]=\\\"['/blogs']\\\" (click)=\\\"sidenav.toggle()\\\">-->\\r\\n             <!--{{mainMenuBlogsItem.name}}-->\\r\\n            <!--</a>-->\\r\\n          <!--</mat-list-item>-->\\r\\n\\r\\n          <mat-expansion-panel *ngIf=\\\"user\\\" class=\\\"mat-elevation-z0\\\">\\r\\n            <mat-expansion-panel-header class=\\\"sidenav-expansion-panel\\\">\\r\\n              <mat-panel-title>\\r\\n                <mat-list-item>\\r\\n                  <mat-icon matListIcon>settings</mat-icon>\\r\\n                  <span matLine>{{user.login}}</span>\\r\\n                </mat-list-item>\\r\\n              </mat-panel-title>\\r\\n              <!--&lt;!&ndash;<mat-panel-description>&ndash;&gt;-->\\r\\n              <!--&lt;!&ndash;This is a summary of the content&ndash;&gt;-->\\r\\n              <!--&lt;!&ndash;</mat-panel-description>&ndash;&gt;-->\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-list-item *ngIf=\\\"user\\\">\\r\\n            <mat-icon matListIcon>account_circle</mat-icon>\\r\\n            <a matLine [routerLink]=\\\"['/user/profile']\\\"\\r\\n               [routerLinkActive]=\\\"['muted']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n              Профіль</a>\\r\\n              </mat-list-item>\\r\\n            <mat-list-item *ngIf=\\\"user && user?.role === 'manager' || user?.role === 'admin'\\\">\\r\\n            <mat-icon matListIcon>settings</mat-icon>\\r\\n            <a matLine [routerLink]=\\\"['/dashboard']\\\"\\r\\n               [routerLinkActive]=\\\"['muted']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n              Dashboard</a>\\r\\n                </mat-list-item>\\r\\n          </mat-expansion-panel>\\r\\n\\r\\n\\r\\n          <mat-list-item *ngIf='!user'>\\r\\n            <a matLine\\r\\n               [routerLinkActive]=\\\"['muted']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n               [routerLink]=\\\"['/user/login']\\\" (click)=\\\"sidenav.toggle()\\\">Вхід</a>\\r\\n          </mat-list-item>\\r\\n          <mat-list-item *ngIf='user'>\\r\\n            <a matLine\\r\\n               (click)=\\\"userLocalLogout()\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n              Вихід\\r\\n            </a>\\r\\n            <mat-icon matListIcon>exit_to_app</mat-icon>\\r\\n          </mat-list-item>\\r\\n        </mat-nav-list>\\r\\n      </div>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n\\r\\n      <!--Example of grid-->\\r\\n\\r\\n    <!--<div class=\\\"container\\\">-->\\r\\n      <!--<div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">-->\\r\\n        <!--<div class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\" *ngFor=\\\"let i of count\\\" >-->\\r\\n          <!--<div class=\\\"item\\\">{{i.text}}</div>-->\\r\\n        <!--</div>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n      <!--<div class=\\\"container\\\">-->\\r\\n       <router-outlet></router-outlet>\\r\\n      <!--</div>-->\\r\\n\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n\\r\\n  </mat-sidenav-container>\\r\\n  <mat-toolbar class=\\\"mat-elevation-z16 footer\\\" color=\\\"primary\\\">\\r\\n      <span class=\\\"mat-title toolbar-branding\\\">\\r\\n        G<span class=\\\"mat-subheading-2 toolbar-branding\\\">rabo</span>\\r\\n      </span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from './services/user.service';\r\nimport { IUser } from './interfaces/user-interface';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CatalogService } from './services/catalog.service';\r\nimport { ICatalog } from './interfaces/catalog-interface';\r\nimport { Cloudinary } from '@cloudinary/angular-5.x';\r\nimport { MatMenuTrigger } from '@angular/material';\r\nimport { SharedService } from './services/shared.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  user: IUser;\r\n  mainMenuCommonItems: ICatalog[];\r\n  // mainMenuBlogsItems: ICatalog[];\r\n  mainMenuSystemItems: ICatalog[];\r\n  // @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\r\n  @ViewChild('settingsMenuTrigger') settingsMenuTrigger: MatMenuTrigger;\r\n  @ViewChild('settingsSideMenuTrigger') settingsSideMenuTrigger: MatMenuTrigger;\r\n\r\n  subCategoryItems: ICatalog;\r\n  category: any;\r\n\r\n  category_id: string;\r\n\r\n  currentCategory: any;\r\n  hierarchyCategory = [];\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private catalogService: CatalogService,\r\n    private sharedService: SharedService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    // this.sharedService.getSharingEvent().pipe(\r\n    //   mergeMap(data => {\r\n    //     if (data[0] = 'category_id') {\r\n    //       this.category_id = data[1];\r\n    //       return this.catalogService.getAllParents(this.category_id);\r\n    //     }\r\n    //\r\n    //     // if (data[0] === 'subCategoryItems') {\r\n    //     //   this.subCategoryItems = data[1];\r\n    //     //   this.category = data[3];\r\n    //     // }\r\n    //   })\r\n    // ).subscribe(result => {\r\n    //   console.log('result bread', result.data);\r\n    //   // result.data[0].hierarchy to splice home => common => mainCategory\r\n    //   this.currentCategory =  result.data[0];\r\n    //   this.hierarchyCategory = result.data[0].hierarchy;\r\n    //   // this.hierarchyCategory.splice(0, 3);\r\n    //   // console.log('hierarchyCategory', this.hierarchyCategory);\r\n    //\r\n    // });\r\n\r\n    // initial subscribe on user\r\n    this.userService.getUserLocal()\r\n      .subscribe(\r\n        user => this.user = user\r\n      );\r\n    // initial login user, token will be taken from localStorage\r\n    this.userService.userLocalLogin(null);\r\n\r\n    // get main menu items\r\n    this.catalogService.getMainMenu()\r\n      .subscribe(menuItems => {\r\n          this.mainMenuCommonItems = menuItems.data.common;\r\n          // this.mainMenuBlogsItems = menuItems.data.blogs;\r\n          this.mainMenuSystemItems = menuItems.data.system;\r\n        },\r\n        err => {\r\n          console.log(err.error);\r\n        });\r\n\r\n    // this.catalogService.getDescendants('common')\r\n    //   .subscribe(menuItems => {\r\n    //     this.mainCommonMenuItems = menuItems.data;\r\n    // },\r\n    //   err => {\r\n    //     console.log(err.error);\r\n    //   });\r\n\r\n  }\r\n\r\n  userLocalLogout() {\r\n    this.userService.userLocalLogout();\r\n    this.router.navigate(['/user', 'login']);\r\n  }\r\n\r\n  onSettingsMenuMouseover() {\r\n    this.settingsMenuTrigger.openMenu();\r\n  }\r\n\r\n  onSettingsMenuMouseleave() {\r\n    this.settingsMenuTrigger.closeMenu();\r\n  }\r\n\r\n  onSettingsSideMenuMouseover() {\r\n    this.settingsSideMenuTrigger.openMenu();\r\n  }\r\n\r\n  onSettingsSideMenuMouseleave() {\r\n    this.settingsSideMenuTrigger.closeMenu();\r\n  }\r\n\r\n}\r\n","export const config = {\r\n  serverUrl: '/',\r\n  defaultAvatarPath: 'https://res.cloudinary.com/hmm6pjfgk/default-avatar180x180.png',\r\n  defaultProductImgPath: 'https://res.cloudinary.com/hmm6pjfgk/default-product180x180.png',\r\n  blogOptions: {\r\n    showViews: true,\r\n    showComments: true,\r\n    commentsLength: 10,\r\n  },\r\n  imgPath: 'https://res.cloudinary.com/',\r\n  cloudinary: {\r\n    cloud_name: 'hmm6pjfgk'\r\n  }\r\n};\r\n","import {config} from './app.config';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RecaptchaModule } from 'ng-recaptcha';\r\nimport { RecaptchaFormsModule } from 'ng-recaptcha/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './components/shared/shared.module';\r\n\r\nimport { ValidateService } from './services/validate.service';\r\nimport { UserService } from './services/user.service';\r\nimport { MessageService } from './services/message.service';\r\nimport { CatalogService } from './services/catalog.service';\r\nimport { ProductService } from './services/product.service';\r\nimport { SharedService } from './services/shared.service';\r\n\r\nimport { CloudinaryModule } from '@cloudinary/angular-5.x';\r\nimport { Cloudinary } from 'cloudinary-core/cloudinary-core-shrinkwrap';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { ConfirmPopupComponent } from './components/shared/confirm-popup/confirm-popup.component';\r\n\r\nconst cloudinaryLib = {\r\n  Cloudinary: Cloudinary\r\n};\r\nconst cloudinaryCloudName = config.cloudinary.cloud_name;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    RecaptchaModule.forRoot(),\r\n    RecaptchaFormsModule,\r\n    CloudinaryModule.forRoot(cloudinaryLib, {cloud_name: cloudinaryCloudName}),\r\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\r\n  ],\r\n  providers: [\r\n    ValidateService,\r\n    UserService,\r\n    MessageService,\r\n    RecaptchaModule,\r\n    RecaptchaFormsModule,\r\n    CatalogService,\r\n    ProductService,\r\n    SharedService,\r\n    AuthGuard,\r\n  ],\r\n  exports: [\r\n  ],\r\n  entryComponents: [\r\n    ConfirmPopupComponent,\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<p>\\r\\n  confirm-popup works!\\r\\n  {{data.message}}\\r\\n</p>\\r\\n<button mat-button color=\\\"primary\\\" (click)=\\\"onClose(true, data.data)\\\">Так</button>\\r\\n<button mat-button color=\\\"danger\\\" (click)=\\\"onClose(false, null)\\\">Ні</button>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { IConfirmPopupData } from '../../../interfaces/interface';\r\n\r\n@Component({\r\n  selector: 'app-confirm-popup',\r\n  templateUrl: './confirm-popup.component.html',\r\n  styleUrls: ['./confirm-popup.component.scss']\r\n})\r\nexport class ConfirmPopupComponent implements OnInit {\r\n  confirmPopupData: IConfirmPopupData;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n  onClose(choice, _id) {\r\n    this.confirmPopupData = {data: {choice, _id}};\r\n    this.dialogRef.close(this.confirmPopupData);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"cell\\\"\\r\\n         fxFlex.sm=\\\"60\\\" fxFlex.md=\\\"70\\\" fxFlex.gt-md=\\\"80\\\">\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\"\\r\\n             fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.gt-md=\\\"25\\\"\\r\\n          *ngFor=\\\"let product of products\\\">\\r\\n          <!--<p>Показати: {{itemsToShow}}</p>-->\\r\\n          <app-product-item [product]=\\\"product\\\"></app-product-item>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"cell\\\" fxFlex.sm=\\\"40\\\" fxFlex.md=\\\"30\\\" fxFlex.gt-md=\\\"20\\\">\\r\\n      <div class=\\\"item\\\">\\r\\n        <mat-card>\\r\\n          <div class=\\\"avatar-big-block\\\">\\r\\n            <img class=\\\"avatar-big\\\" src=\\\"./assets/images/default-avatar180x180.png\\\" alt=\\\"my photo\\\">\\r\\n          </div>\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Про себе</mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <p class=\\\"text-justify muted\\\">text</p>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  products: IProduct[];\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.productService.getMainPageProducts()\r\n      .subscribe(\r\n        result => this.products = result.data,\r\n        err => console.log('mainPageProducts load error', err)\r\n      );\r\n  }\r\n}\r\n","module.exports = \"\\r\\n  <span *ngIf=\\\"show\\\">\\r\\n    {{message.text}}\\r\\n  </span>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { IMessage } from '../../../interfaces/message-interface';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.scss']\r\n})\r\nexport class MessageComponent implements OnInit {\r\n  message: IMessage;\r\n  show = false;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.message = <IMessage>{};\r\n    this.messageService.getMessage()\r\n      .subscribe(message => {\r\n        this.message = message;\r\n        this.show = true;\r\n\r\n        setTimeout(() => this.show = false, message.timeout);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\n\r\nexport class NavbarComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  page-404 works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-404',\r\n  templateUrl: './page-404.component.html',\r\n  styleUrls: ['./page-404.component.scss']\r\n})\r\nexport class Page404Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n  <!--<div class=\\\"cell\\\" fxFlex.gt-xs=\\\"33\\\" fxFlex.gt-md=\\\"25\\\">-->\\r\\n\\r\\n    <!--<div class=\\\"item centered-container\\\">-->\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title class=\\\"product-title bold\\\">{{product.name}}</mat-card-title>\\r\\n          <!--<mat-card-subtitle></mat-card-subtitle>-->\\r\\n        </mat-card-header>\\r\\n        <div class=\\\"product-cl-image-wrapper-outer\\\">\\r\\n          <div class=\\\"product-cl-image-wrapper-inner\\\">\\r\\n            <img src=\\\"{{config.imgPath + config.cloudinary.cloud_name + '/' + product.files[0]}}\\\"\\r\\n                 alt=\\\"product picture\\\" class=\\\"product-cl-image\\\">\\r\\n          </div>\\r\\n          <!--<cl-image class=\\\"product-cl-image\\\"-->\\r\\n                    <!--public-id=\\\"{{product.files[0] || defaultProductImgPath}}\\\"-->\\r\\n                    <!--secure=\\\"true\\\">-->\\r\\n            <!--<cl-transformation-->\\r\\n              <!--quality=\\\"auto\\\" fetch_format=\\\"auto\\\" crop=\\\"thumb\\\">-->\\r\\n              <!--&lt;!&ndash;radius=\\\"20\\\">&ndash;&gt;-->\\r\\n            <!--</cl-transformation>-->\\r\\n            <!--&lt;!&ndash;<cl-transformation overlay=\\\"cloudinary_icon\\\" gravity=\\\"south_east\\\" x=\\\"5\\\" y=\\\"5\\\" width=\\\"50\\\" opacity=\\\"60\\\" effect=\\\"brightness:200\\\">&ndash;&gt;-->\\r\\n            <!--&lt;!&ndash;</cl-transformation>&ndash;&gt;-->\\r\\n            <!--&lt;!&ndash;<cl-transformation angle=\\\"10\\\">&ndash;&gt;-->\\r\\n            <!--&lt;!&ndash;</cl-transformation>&ndash;&gt;-->\\r\\n          <!--</cl-image>-->\\r\\n        </div>\\r\\n\\r\\n        <!--<img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">-->\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container product-content\\\">\\r\\n            <div class=\\\"row product-description\\\">\\r\\n              <div class=\\\"item muted\\\" fxFlexAlign=\\\"center\\\">\\r\\n                {{product.description}}\\r\\n              </div>\\r\\n              </div>\\r\\n            <div class=\\\"row muted\\\" fxLayout=\\\"row\\\">\\r\\n              <p class=\\\"product-info-title text-align-left item muted\\\" fxFlex=\\\"50\\\">Ширина\\r\\n                <span class=\\\"product-info-value\\\">{{product.dimensions.width}}</span> см\\r\\n              </p>\\r\\n              <p class=\\\"product-info-title text-align-right item muted\\\" fxFlex=\\\"50\\\">Висота\\r\\n                <span class=\\\"product-info-value\\\">{{product.dimensions.height}}</span> см\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"row muted\\\" fxLayout=\\\"row\\\">\\r\\n              <p fxFlex=\\\"25\\\"></p>\\r\\n              <p class=\\\"product-info-title text-align-right item muted\\\" fxFlex=\\\"75\\\">Артикул\\r\\n                <span class=\\\"product-info-value\\\">{{product.sku}}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row muted\\\" fxLayout=\\\"row\\\">\\r\\n              <p class=\\\"product-icon-title text-align-left item muted\\\" fxFlex=\\\"26\\\"><mat-icon>remove_red_eye</mat-icon>\\r\\n                <span class=\\\"product-icon-value\\\">{{product.views}}</span>\\r\\n              </p>\\r\\n              <p class=\\\"product-icon-title text-align-center item muted\\\" fxFlex=\\\"48\\\"><mat-icon>today</mat-icon>\\r\\n                <span class=\\\"product-icon-value\\\">{{product.createdAt | date: 'dd.MM.yy'}}</span>\\r\\n              </p>\\r\\n              <p class=\\\"product-icon-title text-align-right item muted\\\" fxFlex=\\\"26\\\"><mat-icon>comment</mat-icon>\\r\\n                <span class=\\\"product-icon-value\\\">{{product.comments.length}}</span>\\r\\n              </p>\\r\\n\\r\\n              <!--<p class=\\\"product-info-title text-align-right item muted\\\" fxFlex=\\\"20\\\"><mat-icon>thumb_up</mat-icon>-->\\r\\n                <!--<span class=\\\"product-info-value\\\">{{product.likes}}</span>-->\\r\\n              <!--</p>-->\\r\\n              <!--<p class=\\\"product-info-title text-align-right item muted\\\" fxFlex=\\\"20\\\"><mat-icon>thumb_down</mat-icon>-->\\r\\n                <!--<span class=\\\"product-info-value\\\">{{product.dislikes}}</span>-->\\r\\n              <!--</p>-->\\r\\n            </div>\\r\\n            <!--<div class=\\\"row product-info-wrap\\\">-->\\r\\n              <!--<div class=\\\"item product-info-1 muted\\\">-->\\r\\n              <!--</div>-->\\r\\n              <!--<div class=\\\"item product-info-2 muted\\\">-->\\r\\n                <!--<p class=\\\"product-info-title\\\">Ширина-->\\r\\n                  <!--<span class=\\\"product-info-value\\\">{{product.dimensions.width}}</span> см-->\\r\\n                <!--</p>-->\\r\\n                <!--<p class=\\\"product-info-title\\\">Висота-->\\r\\n                  <!--<span class=\\\"product-info-value\\\">{{product.dimensions.height}}</span> см-->\\r\\n                <!--</p>-->\\r\\n                <!--<p class=\\\"product-info-title\\\">Артикул-->\\r\\n                  <!--<span class=\\\"product-info-value\\\">{{product.sku}}</span>-->\\r\\n                <!--</p>-->\\r\\n              <!--</div>-->\\r\\n            <!--</div>-->\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n          <div fxFlex></div>\\r\\n          <div fxFlex *ngIf=\\\"user && user?.role === 'manager' || user?.role === 'admin'\\\">\\r\\n            <a mat-icon-button color=\\\"primary\\\"\\r\\n               (click)=\\\"openDialog({message: 'Видалити продукт ' + product.name, data: product._id})\\\">\\r\\n            <mat-icon>delete_forever</mat-icon>\\r\\n          </a>\\r\\n            <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/dashboard', 'product-edit', product._id]\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    <!--</div>-->\\r\\n\\r\\n<!--</div>-->\\r\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { config } from '../../../app.config';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { IUser } from '../../../interfaces/user-interface';\r\nimport { ProductService } from '../../../services/product.service';\r\n// import { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmPopupComponent } from '../confirm-popup/confirm-popup.component';\r\nimport { IConfirmPopupData } from '../../../interfaces/interface';\r\n\r\n@Component({\r\n  selector: 'app-product-item',\r\n  templateUrl: './product-item.component.html',\r\n  styleUrls: ['./product-item.component.scss']\r\n})\r\nexport class ProductItemComponent implements OnInit {\r\n  defaultProductImgPath = config.defaultProductImgPath;\r\n  @Input() product: IProduct;\r\n  config = config;\r\n  user: IUser;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private productService: ProductService,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUserLocal()\r\n      .subscribe(\r\n        user => this.user = user\r\n      );\r\n  }\r\n\r\n  onDelete(_id: string) {\r\n\r\n\r\n    // console.log('delete _id', _id);\r\n\r\n  }\r\n\r\n  openDialog(confirmPopupData): void {\r\n\r\n    const dialogRef = this.dialog.open(ConfirmPopupComponent, {\r\n      width: '400px',\r\n      data: confirmPopupData,\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n      .subscribe(result => {\r\n        // if (result.data) {\r\n          if (result && result.data.choice) {\r\n            this.productService.productDelete(result.data._id)\r\n              .subscribe(result => console.log('result delete', result),\r\n                err => console.log('err delete', err)\r\n              );\r\n          }\r\n        // }\r\n        }\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { Page404Component } from './page-404/page-404.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProductItemComponent } from './product-item/product-item.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { CloudinaryModule } from '@cloudinary/angular-5.x';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ConfirmPopupComponent } from './confirm-popup/confirm-popup.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    CloudinaryModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    Page404Component,\r\n    HomeComponent,\r\n    MessageComponent,\r\n    ProductItemComponent,\r\n  ],\r\n  declarations: [\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    Page404Component,\r\n    HomeComponent,\r\n    MessageComponent,\r\n    ProductItemComponent,\r\n    ConfirmPopupComponent,\r\n  ],\r\n  // entryComponents: [\r\n  //   ConfirmPopupComponent,\r\n  // ]\r\n})\r\nexport class SharedModule { }\r\n","\nimport {of as observableOf,  Observable } from 'rxjs';\n\nimport {catchError, map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private userService: UserService,\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n\n    const requiredRole = next.data.auth; // from routing.module\n    return this.userService.userCheckRole(requiredRole).pipe(\n      map(permission => permission.data),\n      catchError(err => observableOf(false)),);\n\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule,\r\n  MatGridListModule, MatSidenavModule, MatSnackBarModule, MatTabsModule,\r\n  MatDialogModule, MatTableModule, MatProgressSpinnerModule, MatStepperModule,\r\n  MatRadioModule, MatSelectModule, MatIconModule, MatCheckboxModule, MatMenuModule,\r\n  MatExpansionModule, MatListModule,\r\n} from '@angular/material';\r\n// import { MatIconModule } from '@angular/material/icon';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    FlexLayoutModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatStepperModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    FlexLayoutModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatStepperModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n  ],\r\n})\r\n\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IUser } from '../interfaces/user-interface';\r\nimport { IResponse } from '../interfaces/server-response-interface';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CatalogService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getPrefix(category: string) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        category\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/catalog/get-prefix',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getDescendants(item): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        item\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/catalog/get-descendants',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getAllDescendants(category, depth): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        category, depth\r\n      }})\r\n    };    return this.http.get<IResponse>(\r\n      'api/catalog/get-all-descendants',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getMainMenu(): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/catalog/get-main-menu',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  // New\r\n\r\n  getAllParents(category_id): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams().set('category_id', category_id)\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/catalog/get-all-parents',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ReplaySubject,  Observable } from 'rxjs';\r\nimport { IMessage } from '../interfaces/message-interface';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class MessageService {\r\n  private message: ReplaySubject <IMessage> = new ReplaySubject(1);\r\n\r\n  constructor() { }\r\n\r\n  showMessage(text, style, timeout) {\r\n    this.message.next(<IMessage>{text, style, timeout});\r\n  }\r\n\r\n  getMessage (): Observable<IMessage> {\r\n    return this.message.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IResponse } from '../interfaces/server-response-interface';\r\nimport { Observable } from 'rxjs';\r\nimport { IProduct } from '../interfaces/product-interface';\r\nimport { UserService } from './user.service';\r\nimport { config } from '../app.config';\r\n\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n  config = config;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService,\r\n  ) { }\r\n\r\n  getSkuList(category) {\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      }),\r\n      params: new HttpParams({fromObject: {\r\n        category\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/product/get-sku-list',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n\r\n\r\n  getProducts(category) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams().set('category', category)\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/product/get-products',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getMainPageProducts() {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/product/get-main-page-products',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  productAddImage(file, sku): Observable<IResponse> {\r\n    console.log('file', file);\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n    formData.append('sku', sku);\r\n\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.post<IResponse>(\r\n      'api/product/add-image',\r\n      formData,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  productCreate(product: IProduct): Observable<IResponse> {\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.post<IResponse>(\r\n      'api/product/create',\r\n      product,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  productEdit(product: IProduct): Observable<IResponse> {\r\n    console.log('prodEdit', product);\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.put<IResponse>(\r\n      'api/product/edit',\r\n      product,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  productDelete(_id: string): Observable<IResponse> {\r\n    console.log('config', config.serverUrl);\r\n    console.log('this.config', this.config.serverUrl);\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.delete<IResponse>(\r\n      'api/product/delete/' + _id,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  checkFile(file): IResponse {\r\n    if (!file) {\r\n      return ({success: false, message: 'Виберіть файл'});\r\n    } else if (file.size > 10500000) {\r\n      return ({success: false, message: 'Розмір файлу повинен бути менше 10Мб'});\r\n    } else if (\r\n      file.type !== 'image/jpg' &&\r\n      file.type !== 'image/jpe' &&\r\n      file.type !== 'image/jpeg' &&\r\n      file.type !== 'image/bmp' &&\r\n      file.type !== 'image/png' &&\r\n      file.type !== 'image/webp') {\r\n      return ({success: false, message: 'Виберіть інший тип файлу'});\r\n    } else {\r\n      return ({success: true,  message: ''});\r\n    }\r\n  }\r\n\r\n  // New\r\n\r\n  getProductsByCategory(category) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams().set('category', category)\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/product/get-products-by-category',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getProductById(_id) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams().set('_id', _id)\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/product/get-product-by-id',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class SharedService {\n  private _shareEvent: ReplaySubject<any> = new ReplaySubject(1);\n  shareEvent$ = this._shareEvent.asObservable();\n\n  constructor() { }\n\n  sharingEvent(x) {\n    this._shareEvent.next(x);\n  }\n\n  getSharingEvent() {\n    return this.shareEvent$;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { IUser } from '../interfaces/user-interface';\r\nimport { IResponse } from '../interfaces/server-response-interface';\r\nimport { Observable ,  ReplaySubject } from 'rxjs';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { config } from '../app.config';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  user: IUser;\r\n  private _logging: ReplaySubject<IUser> = new ReplaySubject(1);\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  userPasswordResetEmail(email, recaptcha): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        email, recaptcha\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/password-reset-check-email',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userPasswordResetCode(code, codeToken): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': codeToken\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        code,\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/password-reset-check-code',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userPasswordReset(password, passwordResetToken): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': passwordResetToken\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        password,\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/password-reset',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userEmailVerification(): Observable<IResponse> {\r\n    const token = this.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/email-verification-send',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userCreate(user: IUser): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      })\r\n    };\r\n    return this.http.post<IResponse>(\r\n      'api/user/create',\r\n      user,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userLogin(user: IUser): Observable<IResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n      params: new HttpParams({ fromObject: {\r\n        login: user.login,\r\n        password: user.password\r\n      }})\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/login',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userGetProfile(): Observable<IResponse> {\r\n    const token = this.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      }),\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/profile',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userCheckRole(role):Observable<IResponse> {\r\n    const token = this.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      }),\r\n      params: new HttpParams({fromString: `role=${role}`})\r\n\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/user/role',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userEdit(data: {}): Observable<IResponse> {\r\n    const token = this.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.put<IResponse>(\r\n      'api/user/edit',\r\n      data,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  userEditAvatar(file): Observable<IResponse> {\r\n  // uploadPic(file, user) {\r\n\r\n    const formData: FormData = new FormData();\r\n\r\n    // for (let i = 0; i < files.length; i++) {\r\n    //   formData.append('file[]', files[i]);\r\n    // }\r\n\r\n    formData.append('file', file, file.name);\r\n    // if role manager or admin, allow to change avatar for user_id\r\n    // if not, user changes it for itself\r\n    // let user_id = user._id;\r\n    // formData.append('user_id', user_id);\r\n\r\n    const token = this.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        // 'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.put<IResponse>(\r\n      'api/user/edit-avatar',\r\n      formData,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  checkFile(eventTarget): IResponse {\r\n    if (!eventTarget.files[0]) {\r\n      return ({success: false, message: 'Виберіть файл'});\r\n    } else if (eventTarget.files[0].size > 8400000) {\r\n      return ({success: false, message: 'Розмір файлу повинен бути менше 8Мб'});\r\n    } else if (\r\n      eventTarget.files[0].type !== 'image/jpg' &&\r\n      eventTarget.files[0].type !== 'image/jpe' &&\r\n      eventTarget.files[0].type !== 'image/jpeg' &&\r\n      eventTarget.files[0].type !== 'image/bmp' &&\r\n      eventTarget.files[0].type !== 'image/png' &&\r\n      eventTarget.files[0].type !== 'image/webp') {\r\n      return ({success: false, message: 'Виберіть інший тип файлу'});\r\n    } else {\r\n      return ({success: true,  message: ''});\r\n    }\r\n  }\r\n\r\n  // create Observable for user login watch\r\n  userLocalLogin(token) {\r\n    if (token) {\r\n      this.userLocalSetToken('token', token);\r\n    }\r\n    const user = this.userLocalGetCredentials('token');\r\n    this._logging.next(user);\r\n  }\r\n\r\n  userLocalLogout() {\r\n    this.userLocalRemoveToken('token');\r\n    const user = null;\r\n    this._logging.next(user);\r\n  }\r\n\r\n  getUserLocal(): Observable <IUser> {\r\n    return this._logging.asObservable();\r\n  }\r\n  // end of observable\r\n\r\n\r\n\r\n   /**\r\n   * Token manipulations\r\n   */\r\n\r\n  userLocalSetToken(tokenKey, token): void {\r\n    localStorage.setItem(tokenKey, token);\r\n  }\r\n\r\n  userLocalRemoveToken(tokenKey): void {\r\n    localStorage.removeItem(tokenKey);\r\n  }\r\n\r\n  userLocalCheckExpiration(tokenKey): boolean {\r\n    const token = localStorage.getItem(tokenKey);\r\n    if (!token) {\r\n      return true;\r\n    }\r\n    const helper = new JwtHelperService();\r\n    if (helper.isTokenExpired(token)) {\r\n      this.userLocalRemoveToken(tokenKey);\r\n    }\r\n    return helper.isTokenExpired(token);\r\n  }\r\n\r\n  userLocalGetToken(tokenKey): string {\r\n    const token = localStorage.getItem(tokenKey);\r\n    if (!token) {\r\n      return '';\r\n    }\r\n    if (this.userLocalCheckExpiration(tokenKey)) {\r\n      return '';\r\n    }\r\n    return token;\r\n  }\r\n\r\n  userLocalGetCredentials(tokenKey) {\r\n    const token = this.userLocalGetToken(tokenKey);\r\n    if (!token) {\r\n      return null;\r\n    }\r\n    const helper = new JwtHelperService();\r\n    return helper.decodeToken(token).sub;\r\n  }\r\n\r\n  userLocalGetExpirationDate(tokenKey): Date {\r\n    const token = localStorage.getItem(tokenKey);\r\n    const helper = new JwtHelperService();\r\n    return helper.getTokenExpirationDate(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  matchPassword(abstractControl: AbstractControl) {\r\n    const password = abstractControl.get('password').value;\r\n    const passwordConfirm = abstractControl.get('passwordConfirm').value;\r\n    if (password === passwordConfirm) {\r\n      abstractControl.get('passwordConfirm').setErrors(null);\r\n      return null;\r\n    } else {\r\n      /**\r\n       * set error to 'passwordConfirm' element\r\n       */\r\n\r\n      abstractControl.get('passwordConfirm').setErrors({mismatch: true});\r\n      /**\r\n       * and don't set error (null) to formGroup\r\n       */\r\n      return null;\r\n    }\r\n  }\r\n\r\n  maxTries(abstractControl: AbstractControl) {\r\n    // set error  to form control\r\n    // !! abstractControl.value\r\n    abstractControl.get('code').setErrors({maxTries: true});\r\n    return null; // set no errors to form\r\n    // return {maxTries: true};\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}