{"version":3,"sources":["webpack:///./src/app/components/dashboard/dashboard-routing.module.ts","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.html","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.scss","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.scss","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/dashboard.module.ts","webpack:///./src/app/components/dashboard/designs-editor-batch/designs-editor-batch.component.html","webpack:///./src/app/components/dashboard/designs-editor-batch/designs-editor-batch.component.scss","webpack:///./src/app/components/dashboard/designs-editor-batch/designs-editor-batch.component.ts","webpack:///./src/app/components/dashboard/designs-editor-form/designs-editor-form.component.html","webpack:///./src/app/components/dashboard/designs-editor-form/designs-editor-form.component.scss","webpack:///./src/app/components/dashboard/designs-editor-form/designs-editor-form.component.ts","webpack:///./src/app/components/dashboard/designs-editor/designs-editor.component.html","webpack:///./src/app/components/dashboard/designs-editor/designs-editor.component.scss","webpack:///./src/app/components/dashboard/designs-editor/designs-editor.component.ts","webpack:///./src/app/components/dashboard/products-editor-form/products-editor-form.component.html","webpack:///./src/app/components/dashboard/products-editor-form/products-editor-form.component.scss","webpack:///./src/app/components/dashboard/products-editor-form/products-editor-form.component.ts","webpack:///./src/app/components/dashboard/products-editor/products-editor.component.html","webpack:///./src/app/components/dashboard/products-editor/products-editor.component.scss","webpack:///./src/app/components/dashboard/products-editor/products-editor.component.ts","webpack:///./src/app/components/dashboard/tools/tools.component.html","webpack:///./src/app/components/dashboard/tools/tools.component.scss","webpack:///./src/app/components/dashboard/tools/tools.component.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserProfileComponent } from '../user/user-profile/user-profile.component';\r\nimport { DesignsEditorComponent } from './designs-editor/designs-editor.component';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { DesignsEditorFormComponent } from './designs-editor-form/designs-editor-form.component';\r\nimport { ProductsEditorComponent } from './products-editor/products-editor.component';\r\nimport { ProductsComponent } from '../products/products.component';\r\nimport { ProductsEditorFormComponent } from './products-editor-form/products-editor-form.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { DesignsEditorBatchComponent } from './designs-editor-batch/designs-editor-batch.component';\r\nimport { UserCreateComponent } from '../user/user-create/user-create.component';\r\n\r\nconst dashboardRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ProductsEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: '',\r\n        component: DashboardSidenavComponent,\r\n        outlet: 'dashboardSidenav',\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'tools',\r\n        component: ToolsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'products_editor',\r\n        component: ProductsEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'products_editor_new/:parentCategory_id/:parentCategoryName',\r\n        component: ProductsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'products_editor_edit/:parentCategory_id/:parentCategoryName/:_id',\r\n        component: ProductsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor',\r\n        component: DesignsEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor_batch',\r\n        component: DesignsEditorBatchComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor_edit/:_id',\r\n        component: DesignsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor_new',\r\n        component: DesignsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'dashboard_signup',\r\n        component: UserCreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: UserProfileComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(\r\n      dashboardRoutes\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class DashboardRoutingModule {}\r\n","module.exports = \"    <!--<mat-toolbar class=\\\"mat-elevation-z2\\\">-->\\r\\n      <mat-toolbar-row *ngFor=\\\"let dashboardSidenavItem of dashboardSidenavItems\\\" class=\\\"sidenav-mat-toolbar-row\\\">\\r\\n        <a [routerLinkActive]=\\\"['primary-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" mat-button\\r\\n           [routerLink]=\\\"['/dashboard', dashboardSidenavItem._id]\\\">{{dashboardSidenavItem.name}}</a>\\r\\n      </mat-toolbar-row>\\r\\n    <!--</mat-toolbar>-->\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { Router } from '@angular/router';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-sidenav',\r\n  templateUrl: './dashboard-sidenav.component.html',\r\n  styleUrls: ['./dashboard-sidenav.component.scss']\r\n})\r\nexport class DashboardSidenavComponent implements OnInit {\r\ndashboardSidenavItems: ICatalog;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private catalogService: CatalogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.catalogService.getDescendants('dashboard')\r\n      .subscribe(menuItems => {\r\n        this.dashboardSidenavItems = menuItems.data;\r\n        // console.log('dashboardSidenavItems', this.dashboardSidenavItems);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-sidenav-container>\\r\\n  <mat-sidenav  class=\\\"sidenav\\\" #sidenav mode=\\\"side\\\" [opened]=\\\"media.isActive('gt-sm')\\\">\\r\\n    <!--<p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p>-->\\r\\n    <!--<p>-->\\r\\n\\r\\n    <!--<div class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">-->\\r\\n      <!--<button mat-button (click)=\\\"sidenav.toggle()\\\">-->\\r\\n        <!--<mat-icon>arrow_left</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n    <!--</div>-->\\r\\n    <div class=\\\"container-sidenav\\\">\\r\\n      <mat-toolbar class=\\\"mat-elevation-z2\\\">\\r\\n        <mat-toolbar-row fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\" class=\\\"sidenav-mat-toolbar-row\\\">\\r\\n          <a  mat-button (click)=\\\"sidenav.toggle()\\\"><mat-icon>arrow_left</mat-icon></a>\\r\\n        </mat-toolbar-row>\\r\\n        <router-outlet name=\\\"dashboardSidenav\\\"></router-outlet>\\r\\n      </mat-toolbar>\\r\\n    </div>\\r\\n      <!--<mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">-->\\r\\n        <!--<label>Mode:</label>-->\\r\\n        <!--<mat-radio-button value=\\\"over\\\">Over</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"side\\\">Side</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"push\\\">Push</mat-radio-button>-->\\r\\n      <!--</mat-radio-group>-->\\r\\n    <!--</p>-->\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n\\r\\n    <!--<p><button mat-button (click)=\\\"sidenav.toggle()\\\" >Меню</button></p>-->\\r\\n    <!--<p>-->\\r\\n\\r\\n    <!--*ngIf=\\\"!sidenav.opened\\\"-->\\r\\n    <div *ngIf=\\\"!sidenav.opened\\\" class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">\\r\\n    <button mat-button (click)=\\\"sidenav.toggle()\\\">\\r\\n      <mat-icon>arrow_right</mat-icon>\\r\\n    </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n      <!--<mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">-->\\r\\n        <!--<label>Mode:</label>-->\\r\\n        <!--<mat-radio-button value=\\\"over\\\">Over</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"side\\\">Side</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"push\\\">Push</mat-radio-button>-->\\r\\n      <!--</mat-radio-group>-->\\r\\n    <!--</p>-->\\r\\n\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  public state = '';\r\n\r\n  constructor(public media: ObservableMedia) { }\r\n\r\n  ngOnInit() {\r\n    // this.media.asObservable()\r\n    //   .subscribe((change: MediaChange) => {\r\n    //     this.state = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\r\n    //   });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserModule } from '../user/user.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { CloudinaryModule } from '@cloudinary/angular-5.x';\r\nimport { DesignsEditorComponent } from './designs-editor/designs-editor.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DesignsEditorFormComponent } from './designs-editor-form/designs-editor-form.component';\r\nimport { ProductsEditorComponent } from './products-editor/products-editor.component';\r\nimport { ProductsEditorFormComponent } from './products-editor-form/products-editor-form.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { DesignsEditorBatchComponent } from './designs-editor-batch/designs-editor-batch.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    DashboardRoutingModule,\r\n    UserModule,\r\n    // CloudinaryModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    DashboardSidenavComponent,\r\n    DesignsEditorComponent,\r\n    DesignsEditorFormComponent,\r\n    ProductsEditorComponent,\r\n    ProductsEditorFormComponent,\r\n    ToolsComponent,\r\n    DesignsEditorBatchComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <div class=\\\"item full-width-container\\\">\\r\\n      <mat-card  class=\\\"form-block\\\">\\r\\n        <mat-card-header></mat-card-header>\\r\\n        <mat-card-title></mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <h2 class=\\\"mat-h2\\\">Групове додавання дизайнів\\r\\n\\r\\n                </h2>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\" fxFlex=\\\"33.3\\\">\\r\\n                <p class=\\\"mat-body\\\">Вибрано файлів: {{totalFiles}}</p>\\r\\n              </div>\\r\\n              <div class=\\\"cell\\\" fxFlex=\\\"33.3\\\">\\r\\n                <p class=\\\"mat-body\\\">Відхилено файлів: {{rejectedFiles.length}}</p>\\r\\n              </div>\\r\\n              <div class=\\\"cell\\\" fxFlex=\\\"33.3\\\">\\r\\n                <p class=\\\"mat-body\\\">Успішно: {{successFiles.length}}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n              <p *ngFor=\\\"let successFile of successFiles\\\" class=\\\"cell\\\" fxFlex>\\r\\n                {{successFile}}\\r\\n              </p>\\r\\n            </div>\\r\\n\\r\\n            <form [formGroup]=\\\"designForm\\\" #f=\\\"ngForm\\\" (submit)=\\\"onDesignFormSubmit()\\\" novalidate>\\r\\n\\r\\n              <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n                     <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n                      <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Структура\\\" formControlName=\\\"structure\\\" required>\\r\\n                          <mat-option *ngFor=\\\"let struct of config.designStructure\\\" [value]=\\\"struct\\\">\\r\\n                            {{struct}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"designForm.get('structure').errors?.required &&\\r\\n                            designForm.get('structure').touched\\\">\\r\\n                          Виберіть категорію\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                <input #inputFile type=\\\"file\\\" multiple name=\\\"designFile[]\\\" (change)=\\\"addPictures($event)\\\"\\r\\n                       accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif, .svg\\\" style=\\\"display:none;\\\">\\r\\n\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n\\r\\n          <div class=\\\"submit-button-wrapper row\\\" fxLayout=\\\"row\\\">\\r\\n            <div class=\\\"cell\\\" fxFlex=\\\"60\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\"\\r\\n                      (click)=\\\"inputFile.click();\\\"\\r\\n                      [disabled]=\\\"!designForm.valid || processingLoadFile\\\">\\r\\n                <mat-icon> <mat-spinner *ngIf=\\\"processingLoadFile\\\" [diameter]=\\\"24\\\"></mat-spinner> </mat-icon>\\r\\n                 Вибрати файли (максимум 50)</button>\\r\\n            </div>\\r\\n            <div class=\\\"cell\\\" fxFlex=\\\"40\\\">\\r\\n              <button mat-raised-button  type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"full-width\\\"\\r\\n                      [disabled]=\\\"processingLoadFile\\\">Повернутись</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { Location } from '@angular/common';\r\nimport { config } from '../../../app.config';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { mergeMap, filter, merge, catchError } from 'rxjs/operators';\r\nimport { Observable, from, of, forkJoin, throwError } from 'rxjs';\r\nimport { IResponse } from '../../../interfaces/server-response-interface';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-designs-editor-batch',\r\n  templateUrl: './designs-editor-batch.component.html',\r\n  styleUrls: ['./designs-editor-batch.component.scss']\r\n})\r\nexport class DesignsEditorBatchComponent implements OnInit {\r\n  @ViewChild('f') designFormDirective: FormGroupDirective;\r\n  config = config;\r\n  designForm: FormGroup;\r\n  processingLoadFile = false;\r\n  rejectedFiles = [];\r\n  successFiles = [];\r\n  designs = [];\r\n  totalFiles = 0;\r\n\r\n  constructor(\r\n    private designService: DesignService,\r\n    private location: Location,\r\n    private matSnackBar: MatSnackBar,\r\n    private productService: ProductService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.designForm = new FormGroup({\r\n      structure: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  addPictures(event) {\r\n    this.rejectedFiles = [];\r\n    this.successFiles = [];\r\n    this.totalFiles = 0;\r\n\r\n    const files: File[] = event.target.files;\r\n\r\n    this.totalFiles = files.length;\r\n    if (files.length > 50) {\r\n      this.matSnackBar.open('Спробуйте вибрати менше ніж 50 файлів', '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      return;\r\n    }\r\n\r\n    const filteredFiles = Array.prototype.filter.call(files, res => {\r\n      if (this.productService.checkFile(res).success) {\r\n        return true;\r\n      } else {\r\n        this.rejectedFiles.push('err');\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (this.rejectedFiles.length === files.length) {\r\n      this.matSnackBar.open('Ці файли не підходять пол критеріях: тип та/або розір', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      return;\r\n    }\r\n\r\n    this.processingLoadFile = true;\r\n    this.designForm.get('structure').disable();\r\n\r\n    console.log('filteredFiles', filteredFiles);\r\n    const arrayOfObservables: Observable<IResponse | HttpErrorResponse>[] = Array.prototype.map.call(filteredFiles,\r\n      res => of(res)\r\n        .pipe(\r\n          // filter(file => {\r\n          //   if (!this.productService.checkFile(file).success) {\r\n          //     this.rejectedFiles.push(file);\r\n          //\r\n          //   } else {\r\n          //     return true;\r\n          //   }\r\n          // }),\r\n          mergeMap(file => {\r\n            const design_id = file.name.slice(0, -4).trimEnd();\r\n            // this.designForm.get('image').setValue(result.data);\r\n            return this.designService.designAddImagesBatch(file, design_id, this.designForm.get('structure').value);\r\n          }),\r\n          catchError(error => of(error))\r\n        )\r\n    );\r\n\r\n    console.log('arrayOfObservables', arrayOfObservables);\r\n      forkJoin(arrayOfObservables)\r\n      .subscribe(\r\n      result => {\r\n        console.log('result batch from server', result);\r\n        this.processingLoadFile = false;\r\n        this.designForm.get('structure').enable();\r\n        result.forEach( res => {\r\n          if (res instanceof  HttpErrorResponse) {\r\n            this.rejectedFiles.push('err');\r\n          } else {\r\n            this.successFiles.push(res.data._id);\r\n          }\r\n        });\r\n        console.log('rejectedFiles', this.rejectedFiles);\r\n        console.log('successFiles', this.successFiles);\r\n        this.resetForm();\r\n      },\r\n      err => {\r\n        console.log('err', err);\r\n        this.matSnackBar.open(err.error || 'Помилка', '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        this.resetForm();\r\n        this.processingLoadFile = false;\r\n      });\r\n\r\n    // if (!filteredFiles.length) {\r\n    //   this.matSnackBar.open('Помилка вибору файлів (невірний тип, розмір, ..)', '',\r\n    //     {duration: 3000, panelClass: 'snack-bar-danger'});\r\n    //   this.processingLoadFile = false;\r\n    //   this.designForm.get('structure').enable();\r\n    // } else {\r\n    //\r\n    //     this.designService.designAddImagesBatch(filteredFiles)\r\n    //           .subscribe(result => {\r\n    //               console.log('result batch from server', result);\r\n    //             // this.designForm.get('image').setValue(result.data);\r\n    //             this.processingLoadFile = false;\r\n    //           },\r\n    //       err => console.log('add design service response err', err)\r\n    //           );\r\n    //\r\n    // }\r\n\r\n  }\r\n\r\n  onDesignFormSubmit() {\r\n\r\n  }\r\n\r\n  resetForm() {\r\n    this.designFormDirective.resetForm();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n    // addDesignsControl() {\r\n    //   const control = <FormArray>this.designForm.get('images');\r\n    //   control.push(this.initDesignsControl());\r\n    // }\r\n    //\r\n    // removeDesignsControl(i: number) {\r\n    //   const control = <FormArray>this.designForm.get('images');\r\n    //   control.removeAt(i);\r\n    // }\r\n    //\r\n    // initDesignsControl() {\r\n    //   return new FormControl('', [\r\n    //     Validators.required,\r\n    //   ]);\r\n    // }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <div class=\\\"item full-width-container\\\">\\r\\n      <mat-card  class=\\\"form-block\\\">\\r\\n        <mat-card-header></mat-card-header>\\r\\n        <mat-card-title></mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <h2 class=\\\"mat-h2\\\">Редагувати дизайн</h2>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <form [formGroup]=\\\"designForm\\\" #f=\\\"ngForm\\\" (submit)=\\\"onDesignFormSubmit()\\\" novalidate>\\r\\n\\r\\n              <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n                <div class=\\\"container\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                  <div class=\\\"row\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n                        <mat-form-field>\\r\\n                          <input matInput placeholder=\\\"Дизайн\\\" formControlName=\\\"_id\\\" required>\\r\\n                          <mat-error\\r\\n                            *ngIf=\\\"(designForm.get('_id').errors?.minlength ||\\r\\n                      designForm.get('_id').errors?.maxlength ||\\r\\n                      designForm.get('_id').errors?.required) &&\\r\\n                      designForm.get('_id').touched\\\">\\r\\n                            Довжина повинна бути від 7 до 12 символів\\r\\n                          </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n                      <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Структура\\\" formControlName=\\\"structure\\\" required>\\r\\n                          <mat-option *ngFor=\\\"let struct of config.designStructure\\\" [value]=\\\"struct\\\">\\r\\n                            {{struct}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"designForm.get('structure').errors?.required &&\\r\\n                            designForm.get('structure').touched\\\">\\r\\n                          Виберіть категорію\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                    <div class=\\\"preview-img-wrapper\\\">\\r\\n                      <img *ngIf=\\\"designForm.get('image').value\\\" src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        designForm.get('image').value}}\\\"\\r\\n                           alt=\\\"designImage\\\">\\r\\n                      <img *ngIf=\\\"!designForm.get('image').value\\\"\\r\\n                           src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        config.defaultProductImg}}\\\" alt=\\\"designImage\\\">\\r\\n                      <input #inputFile type=\\\"file\\\" (change)=\\\"addPictures($event)\\\"\\r\\n                             accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif, .svg\\\" style=\\\"display:none;\\\">\\r\\n                      <div class=\\\"preview-div-processing\\\">\\r\\n                        <div *ngIf=\\\"processingLoadFile\\\" class=\\\"spinner-wrapper\\\">\\r\\n                          <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div *ngIf=\\\"!processingLoadFile\\\" class=\\\"button-wrapper\\\">\\r\\n                          <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                                  (click)=\\\"inputFile.click();\\r\\n                                  designForm.get('_id').disable();\\r\\n                                  designForm.get('structure').disable();\\\"\\r\\n                                  [disabled]=\\\"processingLoadFile || designForm.get('_id').invalid\\\">\\r\\n                            <mat-icon *ngIf=\\\"!designForm.get('image').value\\\">add</mat-icon>\\r\\n                            <mat-icon *ngIf=\\\"designForm.get('image').value\\\">redo</mat-icon>\\r\\n                          </button>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"submit-button-wrapper\\\" fxLayout=\\\"row\\\">\\r\\n               <div>\\r\\n                 <button *ngIf=\\\"editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\"\\r\\n                         [disabled]=\\\"!designForm.valid || processingLoadFile\\\">Зберегти</button>\\r\\n                 <button *ngIf=\\\"!editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\"\\r\\n                         [disabled]=\\\"!designForm.valid || processingLoadFile\\\">Створити</button>\\r\\n               </div>\\r\\n\\r\\n                <div fxFlex></div>\\r\\n                <div>\\r\\n                  <button mat-raised-button  type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"full-width\\\"\\r\\n                          [disabled]=\\\"processingLoadFile\\\">Повернутись</button>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { config } from '../../../app.config';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { IDesign } from '../../../interfaces/interface';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-designs-editor-form',\r\n  templateUrl: './designs-editor-form.component.html',\r\n  styleUrls: ['./designs-editor-form.component.scss']\r\n})\r\nexport class DesignsEditorFormComponent implements OnInit {\r\n  @ViewChild('f') designFormDirective: FormGroupDirective;\r\n  config = config;\r\n  designForm: FormGroup;\r\n  processingLoadFile = false;\r\n  editMode = false;\r\n  edited_id: string;\r\n  design: IDesign;\r\n\r\n  constructor(\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private productService: ProductService,\r\n    private designService: DesignService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.designForm = new FormGroup({\r\n      _id: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(25),\r\n      ]),\r\n      structure: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      image: new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    });\r\n\r\n    this.route.paramMap.pipe(\r\n      mergeMap(paramMap => {\r\n          this.edited_id = paramMap.get('_id');\r\n          console.log('edited design _id', this.edited_id);\r\n\r\n          if (!this.edited_id) {\r\n            return of(null);\r\n          }\r\n          return this.designService.getDesignById(this.edited_id);\r\n        }),\r\n      )\r\n\r\n      .subscribe(result => {\r\n        if (result) {\r\n          // this.edited_id = paramMap.get('_id');\r\n          this.editMode = true;\r\n          console.log('true', result);\r\n          this.designForm.patchValue(result.data);\r\n          this.designForm.get('_id').disable();\r\n        } else {\r\n          console.log('false');\r\n        }\r\n      });\r\n  }\r\n\r\n  addPictures(event) {\r\n    this.processingLoadFile = true;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadFile = false;\r\n      if (!this.editMode) {\r\n        this.designForm.get('_id').enable();\r\n      }\r\n      this.designForm.get('structure').enable();\r\n    } else {\r\n\r\n      // this.designForm.get('image').setValue(file);\r\n      console.log('added file', this.designForm.get('image').value);\r\n      this.designService.designAddImage(file, this.designForm.get('_id').value)\r\n        .subscribe(result => {\r\n            this.designForm.get('image').setValue(result.data);\r\n            this.processingLoadFile = false;\r\n            if (!this.editMode) {\r\n              this.designForm.get('_id').enable();\r\n            }\r\n            this.designForm.get('structure').enable();\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.processingLoadFile = false;\r\n            if (!this.editMode) {\r\n              this.designForm.get('_id').enable();\r\n            }\r\n            this.designForm.get('structure').enable();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onDesignFormSubmit() {\r\n    this.design = <IDesign>{\r\n      _id: this.designForm.getRawValue()._id, // raw because may be disabled\r\n      image: this.designForm.get('image').value,\r\n      structure: this.designForm.get('structure').value,\r\n    };\r\n\r\n    console.log('design form submit', this.design);\r\n    this.designService.designUpsert(this.design)\r\n      .subscribe(result => {\r\n          this.matSnackBar.open(result.message, '',\r\n            {duration: 3000});\r\n          this.resetForm();\r\n          if (this.editMode) {\r\n            this.goBack();\r\n          }\r\n        },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  resetForm() {\r\n    this.designFormDirective.resetForm();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <!--<div class=\\\"item full-width-container\\\">-->\\r\\n      <!--<mat-card>-->\\r\\n        <!--<mat-card-header></mat-card-header>-->\\r\\n        <!--<mat-card-title></mat-card-title>-->\\r\\n\\r\\n        <!--<mat-card-content>-->\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <h2 class=\\\"mat-h2\\\">Редактор дизайнів</h2>\\r\\n              </div>\\r\\n              <div class=\\\"cell\\\" fxFlex>\\r\\n                  <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                [routerLink]=\\\"['/dashboard/designs_editor_new']\\\"\\r\\n                [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n                <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n              <!--<div class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"20\\\">-->\\r\\n                <!--<div class=\\\"preview-img-wrapper\\\">-->\\r\\n                  <!--<img src=\\\"{{-->\\r\\n                        <!--config.imgPath +-->\\r\\n                        <!--config.cloudinary.cloud_name +-->\\r\\n                        <!--'/c_fill,w_180,h_180,f_auto/' +-->\\r\\n                        <!--config.defaultProductImg}}\\\" alt=\\\"product\\\">-->\\r\\n\\r\\n                  <!--<div class=\\\"preview-div-processing\\\">-->\\r\\n                    <!--<div class=\\\"button-wrapper\\\">-->\\r\\n                      <!--<button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"-->\\r\\n                              <!--[routerLink]=\\\"['/dashboard/designs_editor_new']\\\"-->\\r\\n                              <!--[routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">-->\\r\\n                        <!--<mat-icon>add</mat-icon>-->\\r\\n                      <!--</button>-->\\r\\n                    <!--</div>-->\\r\\n                  <!--</div>-->\\r\\n                <!--</div>-->\\r\\n              <!--</div>-->\\r\\n              <div *ngFor=\\\"let design of designs\\\" class=\\\"cell\\\"\\r\\n                   fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">\\r\\n                <app-design-item [design]=\\\"design\\\"></app-design-item>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n        <!--</mat-card-content>-->\\r\\n      <!--</mat-card>-->\\r\\n    <!--</div>-->\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-designs-editor',\r\n  templateUrl: './designs-editor.component.html',\r\n  styleUrls: ['./designs-editor.component.scss']\r\n})\r\nexport class DesignsEditorComponent implements OnInit {\r\n  designs: any;\r\n  config = config;\r\n\r\n  constructor(\r\n    private designService: DesignService,\r\n    private sharedService: SharedService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.designService.getDesigns()\r\n      .subscribe(result => this.designs = result.data,\r\n        err => console.log('помилка завантаження дизайнів', err)\r\n      );\r\n\r\n    this.sharedService.getSharingEvent().pipe(\r\n      mergeMap(event => {\r\n          if (event[0] !== 'updateDesigns') {\r\n            return of (null);\r\n          } else {\r\n            return this.designService.getDesigns();\r\n          }\r\n      })\r\n    )\r\n      .subscribe(result => this.designs = result.data,\r\n        err => console.log('помилка завантаження дизайнів', err)\r\n      );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <div class=\\\"full-width-container\\\">\\r\\n      <mat-card  class=\\\"form-block\\\">\\r\\n        <mat-card-header></mat-card-header>\\r\\n        <mat-card-title>\\r\\n          <h2 *ngIf=\\\"editMode\\\" class=\\\"mat-h2\\\">Редагувати колекцію\\r\\n            <span class=\\\"accent\\\">{{productForm.get('name').value}}</span> у розділі\\r\\n            <span class=\\\"accent\\\">{{parentCategoryName}}</span></h2>\\r\\n          <h2 *ngIf=\\\"!editMode\\\" class=\\\"mat-h2\\\">Створити колекцію у розділі <span class=\\\"accent\\\">{{parentCategoryName}}</span></h2>\\r\\n        </mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container\\\">\\r\\n            <!--<div class=\\\"row\\\">-->\\r\\n              <!--<div class=\\\"cell\\\">-->\\r\\n                <!--<p>{{parentCategory_id}} - {{parentCategoryName}}</p>-->\\r\\n              <!--</div>-->\\r\\n            <!--</div>-->\\r\\n\\r\\n            <form [formGroup]=\\\"productForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\">\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Ідентифікатор\\\" formControlName=\\\"_id\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"(productForm.get('_id').errors?.minlength ||\\r\\n                                  productForm.get('_id').errors?.maxlength ||\\r\\n                                  productForm.get('_id').errors?.required) &&\\r\\n                                  productForm.get('_id').touched\\\">\\r\\n                          Довжина повинна бути від 3 до 25 символів\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\">\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Назва\\\" formControlName=\\\"name\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"(productForm.get('name').errors?.minlength ||\\r\\n                                  productForm.get('name').errors?.maxlength ||\\r\\n                                  productForm.get('name').errors?.required) &&\\r\\n                                  productForm.get('name').touched\\\">\\r\\n                          Довжина повинна бути від 3 до 50 символів\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\">\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Порядок\\\" formControlName=\\\"order\\\">\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"productForm.get('order').errors?.required &&\\r\\n                                      productForm.get('order').touched\\\">\\r\\n                          Обов'язкове поле\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\">\\r\\n                      <mat-form-field>\\r\\n                                        <mat-select placeholder=\\\"Публікувати\\\" formControlName=\\\"display\\\" required>\\r\\n                          <mat-option [value]=\\\"true\\\">\\r\\n                            Так\\r\\n                          </mat-option>\\r\\n                          <mat-option [value]=\\\"false\\\">\\r\\n                            Ні\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"productForm.get('display').errors?.required &&\\r\\n                                  productForm.get('display').touched\\\">\\r\\n                          Обов'язкове поле\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                <!--<div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\">-->\\r\\n                  <!--<mat-form-field>-->\\r\\n                    <!--<input matInput placeholder=\\\"Порядок\\\" formControlName=\\\"order\\\" required>-->\\r\\n                    <!--<mat-error-->\\r\\n                      <!--*ngIf=\\\"productForm.get('order').errors?.required &&-->\\r\\n                                  <!--productForm.get('order').touched\\\">-->\\r\\n                      <!--Обов'язкове поле-->\\r\\n                    <!--</mat-error>-->\\r\\n                  <!--</mat-form-field>-->\\r\\n                <!--</div>-->\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n                  <mat-form-field>\\r\\n                    <textarea matInput rows=\\\"5\\\" placeholder=\\\"Опис\\\" formControlName=\\\"description\\\" required></textarea>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"(productForm.get('description').errors?.minlength ||\\r\\n                                  productForm.get('description').errors?.maxlength ||\\r\\n                                  productForm.get('description').errors?.required) &&\\r\\n                                  productForm.get('description').touched\\\">\\r\\n                      Довжина повинна бути від 3 до 500 символів\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                  <h3 class=\\\"mat-h3 margin-0\\\">Технічні характеристики\\r\\n                    <span>\\r\\n                       <button  *ngIf=\\\"productForm.get('techDescriptions').value.length < 5\\\"\\r\\n                                mat-icon-button color=\\\"accent\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"addTechDescriptionsControl()\\\"><mat-icon>add_circle</mat-icon></button>\\r\\n                    </span>\\r\\n                  </h3>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div formArrayName=\\\"techDescriptions\\\" class=\\\"cell\\\" fxFlex=\\\"100\\\"\\r\\n                          *ngFor=\\\"let techDescription of productForm.get('techDescriptions')['controls']; let i = index\\\">\\r\\n                  <mat-card formGroupName=\\\"{{i}}\\\" fxLayout=\\\"row\\\">\\r\\n                    <!--<div class=\\\"cell\\\" fxFlex=\\\"100%-100px\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" >-->\\r\\n                      <mat-form-field class=\\\"item\\\" fxFlex=\\\"calc((100%-40px)-67%)\\\">\\r\\n                        <input matInput placeholder=\\\"Характеристика\\\" formControlName=\\\"techName\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"productForm.get('techDescriptions').at(i).get('techName').errors?.required &&\\r\\n                                productForm.get('techDescriptions').at(i).get('techName').touched\\\">\\r\\n                          Обов'язкове поле\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"item\\\" fxFlex=\\\"calc((100%-40px)-67%)\\\">\\r\\n                        <input matInput placeholder=\\\"Одиниці виміру\\\" formControlName=\\\"techUnit\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"productForm.get('techDescriptions').at(i).get('techUnit').errors?.required &&\\r\\n                                productForm.get('techDescriptions').at(i).get('techUnit').touched\\\">\\r\\n                          Обов'язкове поле\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"item\\\" fxFlex=\\\"calc((100%-40px)-67%)\\\">\\r\\n                        <input matInput placeholder=\\\"Значення\\\" formControlName=\\\"techValue\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"productForm.get('techDescriptions').at(i).get('techValue').errors?.required &&\\r\\n                                productForm.get('techDescriptions').at(i).get('techValue').touched\\\">\\r\\n                          Обов'язкове поле\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    <!--</div>-->\\r\\n\\r\\n                    <div class=\\\"item\\\" fxFlex=\\\"40px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                      <!--<div class=\\\"margin-auto\\\">-->\\r\\n                        <button class=\\\"text-align-center\\\"\\r\\n                                mat-icon-button color=\\\"accent\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"removeTechDescriptionsControl(i)\\\"><mat-icon>remove_circle</mat-icon></button>\\r\\n                      <!--</div>-->\\r\\n\\r\\n                    </div>\\r\\n                  </mat-card>\\r\\n\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                    <h3 class=\\\"mat-h3 margin-0\\\">Рекомендації <span>\\r\\n                       <button  *ngIf=\\\"productForm.get('recommendations').value.length < 80\\\"\\r\\n                                mat-icon-button color=\\\"accent\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"addRecommendationsControl()\\\"><mat-icon>add_circle</mat-icon></button>\\r\\n                    </span></h3>\\r\\n\\r\\n                </div>\\r\\n                <div formArrayName=\\\"recommendations\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\"\\r\\n                  *ngFor=\\\"let recommendation of productForm.get('recommendations')['controls']; let i = index\\\">\\r\\n                  <mat-form-field>\\r\\n\\r\\n                    <mat-select formControlName=\\\"{{i}}\\\" placeholder=\\\"Рекомендації\\\">\\r\\n                      <!--<mat-option *ngFor=\\\"let recommendation of recommendations\\\" [value]=\\\"recommendation\\\">-->\\r\\n                        <!--{{recommendation._id}}-->\\r\\n                      <!--</mat-option>-->\\r\\n\\r\\n                      <mat-optgroup *ngFor=\\\"let recommendation of recommendations\\\" [label]=\\\"recommendation._id\\\"\\r\\n                                    [disabled]>\\r\\n                        <mat-option *ngFor=\\\"let sub of recommendation.sub\\\" [value]=\\\"sub._id\\\">\\r\\n                          {{sub.name}}\\r\\n                        </mat-option>\\r\\n                      </mat-optgroup>\\r\\n                    </mat-select>\\r\\n                    <mat-icon matSuffix color=\\\"accent\\\" (click)=\\\"removeRecommendationsControl(i)\\\">delete_forever</mat-icon>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productForm.get('recommendations').at(i).errors?.required &&\\r\\n                                  productForm.get('recommendations').at(i).touched\\\">\\r\\n                      Обов'язкове поле\\r\\n                    </mat-error>\\r\\n\\r\\n                    <!--<input matInput placeholder=\\\"Рекомендації\\\" formControlName=\\\"{{i}}\\\" required>-->\\r\\n                    <!--<mat-icon matSuffix color=\\\"accent\\\" (click)=\\\"removeRecommendationsControl(i)\\\">delete_forever</mat-icon>-->\\r\\n                    <!--<mat-error-->\\r\\n                      <!--*ngIf=\\\"productForm.get('recommendations').at(i).errors?.required &&-->\\r\\n                                  <!--productForm.get('recommendations').at(i).touched\\\">-->\\r\\n                      <!--Обов'язкове поле-->\\r\\n                    <!--</mat-error>-->\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n              <div class=\\\"cell-header\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                <h3 class=\\\"mat-h3 margin-0\\\">Головне зображення колекції</h3>\\r\\n              </div>\\r\\n              <div class=\\\"cell\\\" fxFlex.xs=\\\"100\\\" fxFlex=\\\"25\\\">\\r\\n                <div class=\\\"preview-img-wrapper\\\" >\\r\\n                  <img *ngIf=\\\"productForm.get('mainImage').value\\\" src=\\\"{{\\r\\n                      config.imgPath +\\r\\n                      config.cloudinary.cloud_name +\\r\\n                       '/c_fill,w_260,h_170,f_auto/' + productForm.get('mainImage').value}}\\\"\\r\\n                       alt=\\\"Main Image\\\">\\r\\n\\r\\n\\r\\n\\r\\n                  <img *ngIf=\\\"!productForm.get('mainImage').value\\\"\\r\\n                       src=\\\"{{\\r\\n                       config.imgPath +\\r\\n                      config.cloudinary.cloud_name +\\r\\n                       '/c_fill,w_180,h_180,f_auto/'+\\r\\n                       config.defaultProductImg}}\\\" alt=\\\"Main Image\\\">\\r\\n                  <input #inputMainImage type=\\\"file\\\" (change)=\\\"addMainImage($event)\\\"\\r\\n                         accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif, .svg\\\" style=\\\"display:none;\\\">\\r\\n                  <div class=\\\"preview-div-processing\\\">\\r\\n                    <div *ngIf=\\\"processingLoadImage\\\" class=\\\"spinner-wrapper\\\">\\r\\n                      <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div *ngIf=\\\"!processingLoadImage\\\" class=\\\"button-wrapper\\\">\\r\\n                      <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                              (click)=\\\"inputMainImage.click();\\\"\\r\\n                              [disabled]=\\\"processingLoadImage\\\">\\r\\n                        <mat-icon *ngIf=\\\"!productForm.get('mainImage').value && !processingLoadImage\\\">add</mat-icon>\\r\\n                        <mat-icon *ngIf=\\\"productForm.get('mainImage').value && !processingLoadImage\\\">redo</mat-icon>\\r\\n                      </button>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                  <h3 class=\\\"mat-h3 margin-0\\\">Зображення колекції в меню</h3>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.xs=\\\"100\\\">\\r\\n                  <div class=\\\"preview-img-wrapper\\\" >\\r\\n                    <img *ngIf=\\\"productForm.get('briefImage').value\\\" src=\\\"{{\\r\\n                      config.imgPath +\\r\\n                      config.cloudinary.cloud_name +\\r\\n                       '/c_fill,w_180,h_180,f_auto/' + productForm.get('briefImage').value}}\\\"\\r\\n                         alt=\\\"Main Image\\\">\\r\\n                    <img *ngIf=\\\"!productForm.get('briefImage').value\\\"\\r\\n                         src=\\\"{{\\r\\n                       config.imgPath +\\r\\n                      config.cloudinary.cloud_name +\\r\\n                       '/c_fill,w_180,h_180,f_auto/'+\\r\\n                       config.defaultProductImg}}\\\" alt=\\\"Main Image\\\">\\r\\n                    <input #inputBriefImage type=\\\"file\\\" (change)=\\\"addBriefImage($event)\\\"\\r\\n                           accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif, .svg\\\" style=\\\"display:none;\\\">\\r\\n                    <div class=\\\"preview-div-processing\\\">\\r\\n                      <div *ngIf=\\\"processingLoadBriefImage\\\" class=\\\"spinner-wrapper\\\">\\r\\n                        <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                      <div *ngIf=\\\"!processingLoadBriefImage\\\" class=\\\"button-wrapper\\\">\\r\\n                        <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"inputBriefImage.click();\\\"\\r\\n                                [disabled]=\\\"processingLoadImage\\\">\\r\\n                          <mat-icon *ngIf=\\\"!productForm.get('briefImage').value && !processingLoadBriefImage\\\">add</mat-icon>\\r\\n                          <mat-icon *ngIf=\\\"productForm.get('briefImage').value && !processingLoadBriefImage\\\">redo</mat-icon>\\r\\n                        </button>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                    <h3 class=\\\"mat-h3 margin-0\\\">Додаткові зображення колекції</h3>\\r\\n                  </div>\\r\\n                  <div formArrayName=\\\"assets\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.xs=\\\"100\\\"\\r\\n                       *ngFor=\\\"let asset of productForm.get('assets')['controls']; let i = index\\\">\\r\\n                  <div *ngIf=\\\"productForm.get('assets').value[i]\\\" class=\\\"preview-img-wrapper\\\">\\r\\n                    <img src=\\\"{{config.imgPath + config.cloudinary.cloud_name + '/c_fill,w_260,h_170,f_auto/' + productForm.get('assets').value[i]}}\\\"\\r\\n                         alt=\\\"productImage\\\">\\r\\n                    <div *ngIf=\\\"processingLoadAssets === i\\\" class=\\\"preview-div-processing\\\">\\r\\n                      <div class=\\\"spinner-wrapper\\\">\\r\\n                        <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                    <p *ngIf=\\\"processingLoadAssets !== i\\\" class=\\\"remove-field text-center\\\"\\r\\n                       (click)=\\\"removeAssetsControl(i)\\\">Видалити зображення</p>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\"\\r\\n                       *ngIf=\\\"productForm.get('assets').value.length < 12\\\">\\r\\n                    <div class=\\\"preview-img-wrapper\\\">\\r\\n                      <img src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        config.defaultProductImg}}\\\" alt=\\\"product\\\">\\r\\n                      <input #inputFile type=\\\"file\\\" (change)=\\\"addAssets($event)\\\"\\r\\n                             accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif, .svg\\\" style=\\\"display:none;\\\">\\r\\n\\r\\n                      <div class=\\\"preview-div-processing\\\">\\r\\n                        <div class=\\\"button-wrapper\\\">\\r\\n                          <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                                  (click)=\\\"inputFile.click();\\\"\\r\\n                                  [disabled]=\\\"processingLoadAssets >= 0\\\">\\r\\n                            <mat-icon>add</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxFlex=\\\"100\\\">\\r\\n                  <h3 class=\\\"mat-h3 margin-0\\\">Технічні властивості</h3>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex.xs=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\">\\r\\n                  <div class=\\\"item\\\" fxFlex=\\\"calc(100%-40px)\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input type=\\\"text\\\" matInput placeholder=\\\"Додати характеристику\\\" formControlName=\\\"tech\\\" [matAutocomplete]=\\\"autoTech\\\">\\r\\n                      <mat-autocomplete #autoTech=\\\"matAutocomplete\\\">\\r\\n                        <mat-option *ngFor=\\\"let filteredTechAsset of filteredTechAssets | async\\\" (click)=\\\"onSelectTechAssets()\\\" [value]=\\\"filteredTechAsset\\\">\\r\\n                          {{filteredTechAsset}}\\r\\n                        </mat-option>\\r\\n                      </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"item\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"40px\\\">\\r\\n                    <button #addTechAssetsButton [disabled]=\\\"!techAssetValidity\\\" mat-icon-button color=\\\"accent\\\" type=\\\"button\\\"\\r\\n                            (click)=\\\"addTechAsset()\\\"><mat-icon>add_circle</mat-icon></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"cell\\\" fxHide.xs fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\"></div>\\r\\n                  <div formArrayName=\\\"techAssets\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\"\\r\\n                       *ngFor=\\\"let tech of productForm.get('techAssets')['controls']; let i = index\\\">\\r\\n                    <h4 *ngIf=\\\"productForm.get('techAssets').value[i]\\\"\\r\\n                        class=\\\"mat-h4 text-center\\\">{{productForm.get('techAssets').value[i]}}</h4>\\r\\n                    <div *ngIf=\\\"productForm.get('techAssets').value[i] && techAssets &&\\r\\n                          getTechAsset(productForm.get('techAssets').value[i])\\\" class=\\\"preview-img-wrapper\\\">\\r\\n                      <img alt=\\\"techAssetsImage\\\" src=\\\"{{\\r\\n                      config.imgPath +\\r\\n                      config.cloudinary.cloud_name +\\r\\n                      '/c_fill,w_180,h_180,f_auto/' +\\r\\n                      getTechAsset(productForm.get('techAssets').value[i]).image}}\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <p class=\\\"remove-field text-center\\\"\\r\\n                       (click)=\\\"removeTechAssetsControl(i)\\\">Видалити зображення</p>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxFlex=\\\"100\\\">\\r\\n                  <h3 class=\\\"mat-h3 margin-0\\\">Сертифікати</h3>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex.xs=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\">\\r\\n                  <div class=\\\"item\\\" fxFlex=\\\"calc(100%-40px)\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input type=\\\"text\\\" matInput placeholder=\\\"Додати сертифікат\\\" formControlName=\\\"cert\\\" [matAutocomplete]=\\\"autoCert\\\">\\r\\n                      <mat-autocomplete #autoCert=\\\"matAutocomplete\\\">\\r\\n                        <mat-option *ngFor=\\\"let filteredCertAsset of filteredCertAssets | async\\\" (click)=\\\"onSelectCertAssets()\\\" [value]=\\\"filteredCertAsset\\\">\\r\\n                          {{filteredCertAsset}}\\r\\n                        </mat-option>\\r\\n                      </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"item\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"40px\\\">\\r\\n                    <button #addCertAssetsButton [disabled]=\\\"!certAssetValidity\\\" mat-icon-button color=\\\"accent\\\" type=\\\"button\\\"\\r\\n                            (click)=\\\"addCertAsset()\\\"><mat-icon>add_circle</mat-icon></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"cell\\\" fxHide.xs fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\"></div>\\r\\n                <div formArrayName=\\\"certAssets\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\"\\r\\n                     *ngFor=\\\"let cert of productForm.get('certAssets')['controls']; let i = index\\\">\\r\\n                  <h4 *ngIf=\\\"productForm.get('certAssets').value[i]\\\"\\r\\n                      class=\\\"mat-h4 text-center\\\">{{productForm.get('certAssets').value[i]}}</h4>\\r\\n                  <div *ngIf=\\\"productForm.get('certAssets').value[i] && certAssets &&\\r\\n                          getCertAsset(productForm.get('certAssets').value[i])\\\" class=\\\"preview-img-wrapper\\\">\\r\\n                    <img alt=\\\"certAssetsImage\\\" src=\\\"{{\\r\\n                      config.imgPath +\\r\\n                      config.cloudinary.cloud_name +\\r\\n                      '/c_fill,w_180,h_180,f_auto/' +\\r\\n                      getCertAsset(productForm.get('certAssets').value[i]).image}}\\\">\\r\\n                  </div>\\r\\n\\r\\n                  <p class=\\\"remove-field text-center\\\"\\r\\n                     (click)=\\\"removeCertAssetsControl(i)\\\">Видалити зображення</p>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell-header\\\" fxFlex=\\\"100\\\">\\r\\n                  <h3 class=\\\"mat-h3 margin-0\\\">Дизайни</h3>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex.xs=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\">\\r\\n                  <div class=\\\"item\\\" fxFlex=\\\"calc(100%-40px)\\\">\\r\\n                    <mat-form-field >\\r\\n                      <input type=\\\"text\\\" matInput placeholder=\\\"Додати дизайн\\\" formControlName=\\\"des\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n                      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                        <mat-option *ngFor=\\\"let filteredDesign of filteredDesigns | async\\\" (click)=\\\"onSelectDesign()\\\" [value]=\\\"filteredDesign\\\">\\r\\n                          {{filteredDesign}}\\r\\n                        </mat-option>\\r\\n                      </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"item\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"40px\\\">\\r\\n                    <button #addDesignButton [disabled]=\\\"!designValidity\\\" mat-icon-button color=\\\"accent\\\" type=\\\"button\\\"\\r\\n                            (click)=\\\"addDesign()\\\"><mat-icon>add_circle</mat-icon></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxHide.xs fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\"></div>\\r\\n\\r\\n                <div formArrayName=\\\"designs\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\"\\r\\n                     *ngFor=\\\"let des of productForm.get('designs')['controls']; let i = index\\\">\\r\\n                  <h4 *ngIf=\\\"productForm.get('designs').value[i]\\\"\\r\\n                      class=\\\"mat-h4 text-center\\\">{{productForm.get('designs').value[i]}}</h4>\\r\\n                  <div *ngIf=\\\"productForm.get('designs').value[i] && designs\\\" class=\\\"preview-img-wrapper\\\">\\r\\n                    <img alt=\\\"designImage\\\" src=\\\"{{\\r\\n                    config.imgPath +\\r\\n                    config.cloudinary.cloud_name +\\r\\n                    '/c_fill,w_180,h_180,f_auto/' +\\r\\n                    getDesign(productForm.get('designs').value[i]).image}}\\\">\\r\\n                  </div>\\r\\n\\r\\n                  <p class=\\\"remove-field text-center\\\"\\r\\n                     (click)=\\\"removeDesignsControl(i)\\\">Видалити зображення</p>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"submit-button-wrapper row\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"40\\\">\\r\\n\\r\\n                  <button *ngIf=\\\"editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(false)\\\"\\r\\n                          [disabled]=\\\"!productForm.valid || processingLoadAssets >=0 || processingLoadTechAssets >= 0 || processingLoadImage\\\">\\r\\n                    Зберегти</button>\\r\\n                  <button *ngIf=\\\"!editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(false)\\\"\\r\\n                          [disabled]=\\\"!productForm.valid || processingLoadAssets >=0 || processingLoadTechAssets >= 0 || processingLoadImage\\\">\\r\\n                    Зберегти</button>\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"40\\\">\\r\\n\\r\\n                  <button *ngIf=\\\"editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(true)\\\"\\r\\n                            [disabled]=\\\"!productForm.valid || processingLoadAssets >=0 || processingLoadTechAssets >= 0 || processingLoadImage\\\">\\r\\n                    Зберегти і повернутись</button>\\r\\n                  <button *ngIf=\\\"!editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(true)\\\"\\r\\n                          [disabled]=\\\"!productForm.valid || processingLoadAssets >=0 || processingLoadTechAssets >= 0 || processingLoadImage\\\">\\r\\n                    Створити і повернутись</button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"20\\\">\\r\\n                  <button mat-raised-button  type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"full-width\\\"\\r\\n                          [disabled]=\\\"processingLoadAssets >=0 || processingLoadTechAssets >= 0\\r\\n                          || processingLoadTechAssets >= 0 || processingLoadImage\\\">Повернутись</button>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  <!--</div>-->\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { config } from '../../../app.config';\r\nimport { IDesign, IRecommendation, ITechAsset } from '../../../interfaces/interface';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { mergeMap, startWith, map, tap } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-products-editor-form',\r\n  templateUrl: './products-editor-form.component.html',\r\n  styleUrls: ['./products-editor-form.component.scss']\r\n})\r\nexport class ProductsEditorFormComponent implements OnInit {\r\n  @ViewChild('f') productFormDirective: FormGroupDirective;\r\n  @ViewChild('addDesignButton') addDesignButtonDirective;\r\n  @ViewChild('addTechAssetsButton') addTechAssetsButtonDirective;\r\n  @ViewChild('addCertAssetsButton') addCertAssetsButtonDirective;\r\n\r\n  config = config;\r\n  productForm: FormGroup;\r\n  processingLoadAssets = -1;\r\n  processingLoadTechAssets = -1;\r\n  processingLoadCertAssets = -1;\r\n  processingLoadImage = false;\r\n  processingLoadBriefImage = false;\r\n\r\n  editMode = false;\r\n  edited_id: string;\r\n  parentCategory_id: string;\r\n  parentCategories: string[];\r\n  parentCategoryName: string;\r\n  designs: IDesign[];\r\n  designs_id = [];\r\n  product: any;\r\n\r\n  techAssets: ITechAsset[];\r\n  filteredTechAssets: Observable<string[]>;\r\n  techAssets_id = [];\r\n  techAssetValidity = false;\r\n\r\n  certAssets: ITechAsset[];\r\n  filteredCertAssets: Observable<string[]>;\r\n  certAssets_id = [];\r\n  certAssetValidity = false;\r\n\r\n  recommendations: IRecommendation[];\r\n\r\n  filteredDesigns: Observable<string[]>;\r\n  designValidity = false;\r\n\r\n  constructor(\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private productService: ProductService,\r\n    private designService: DesignService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productForm = new FormGroup({\r\n      _id: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(25),\r\n      ]),\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n      ]),\r\n      // parent: new FormControl('', [\r\n      //   // Validators.required,\r\n      // ]),\r\n      display: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      order: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      mainImage: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      briefImage: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      assets: new FormArray([]),\r\n      techAssets: new FormArray([]),\r\n      tech:  new FormControl('', []),\r\n      certAssets: new FormArray([]),\r\n      cert:  new FormControl('', []),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(2500),\r\n      ]),\r\n      recommendations: new FormArray([]),\r\n      designs: new FormArray([]),\r\n      des:  new FormControl('', [\r\n        ]),\r\n      techDescriptions: new FormArray([]),\r\n    });\r\n\r\n    this.productService.getRecommendations().pipe(\r\n      mergeMap(result => {\r\n        this.recommendations = result.data;\r\n        return this.route.paramMap;\r\n      }),\r\n      mergeMap(paramMap => {\r\n        this.edited_id = paramMap.get('_id');\r\n        this.parentCategory_id = paramMap.get('parentCategory_id');\r\n        this.parentCategoryName = paramMap.get('parentCategoryName');\r\n        if (!this.edited_id) {\r\n          return of(null);\r\n        }\r\n        return this.productService.getProductById(this.edited_id, false);\r\n      })\r\n    )\r\n    .subscribe(result => {\r\n        if (result) {\r\n          this.editMode = true;\r\n          this.parentCategories = result.parent;\r\n          for (let i = 0; i < result.data.designs.length; i++) {\r\n            this.addDesignsControl();\r\n          }\r\n          for (let i = 0; i < result.data.recommendations.length; i++) {\r\n            this.addRecommendationsControl();\r\n          }\r\n          for (let i = 0; i < result.data.assets.length; i++) {\r\n            this.addAssetsControl();\r\n          }\r\n          for (let i = 0; i < result.data.techAssets.length; i++) {\r\n            this.addTechAssetsControl();\r\n          }\r\n          for (let i = 0; i < result.data.certAssets.length; i++) {\r\n            this.addCertAssetsControl();\r\n          }\r\n          for (let i = 0; i < result.data.techDescriptions.length; i++) {\r\n            this.addTechDescriptionsControl();\r\n          }\r\n          this.productForm.patchValue(result.data);\r\n          this.productForm.get('_id').disable();\r\n        } else {\r\n          this.parentCategories = [this.parentCategory_id];\r\n        }\r\n      },\r\n      err => console.log('Помилка', err)\r\n    );\r\n\r\n    this.productService.getTechAssets()\r\n      .subscribe(result => {\r\n          this.techAssets = result.data;\r\n          this.techAssets.map(techAsset => this.techAssets_id.push(techAsset._id));\r\n        },\r\n        err => console.log('Помилка завантеження тех властивостей', err)\r\n      );\r\n\r\n    this.productService.getCertAssets()\r\n      .subscribe(result => {\r\n          this.certAssets = result.data;\r\n          this.certAssets.map(certAsset => this.certAssets_id.push(certAsset._id));\r\n        },\r\n        err => console.log('Помилка завантеження сертифікатів', err)\r\n      );\r\n\r\n    this.designService.getDesigns()\r\n      .subscribe(result => {\r\n        this.designs = result.data;\r\n        this.designs.map(design => this.designs_id.push(design._id));\r\n        },\r\n        err => console.log('Помилка завантеження дизайнів', err)\r\n      );\r\n\r\n    this.filteredTechAssets = this.productForm.get('tech').valueChanges.pipe(\r\n      startWith(''),\r\n      tap(value => this.techAssetValidity = this._checkTechAssetValidity(value)),\r\n      map(value => this._filterTechAssets(value))\r\n    );\r\n\r\n    this.filteredCertAssets = this.productForm.get('cert').valueChanges.pipe(\r\n      startWith(''),\r\n      tap(value => this.certAssetValidity = this._checkCertAssetValidity(value)),\r\n      map(value => this._filterCertAssets(value))\r\n    );\r\n\r\n    this.filteredDesigns = this.productForm.get('des').valueChanges.pipe(\r\n      startWith(''),\r\n      tap(value => this.designValidity = this._checkDesignValidity(value)),\r\n      map(value => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  private _filterTechAssets(filterValue: string): string[] {\r\n    const techAssetsForm = this.productForm.get('techAssets').value;\r\n    return this.techAssets_id\r\n      .filter(option => techAssetsForm.indexOf(option) === -1) // remove designs, which already in form\r\n      .filter(option => option.indexOf(filterValue) === 0 ); // filter by input value\r\n  }\r\n\r\n  private _checkTechAssetValidity(value: string): boolean {\r\n    return this.techAssets_id.indexOf(value) !== -1;\r\n  }\r\n\r\n  private _filterCertAssets(filterValue: string): string[] {\r\n    const certAssetsForm = this.productForm.get('certAssets').value;\r\n    return this.certAssets_id\r\n      .filter(option => certAssetsForm.indexOf(option) === -1) // remove designs, which already in form\r\n      .filter(option => option.indexOf(filterValue) === 0 ); // filter by input value\r\n  }\r\n\r\n  private _checkCertAssetValidity(value: string): boolean {\r\n    return this.certAssets_id.indexOf(value) !== -1;\r\n  }\r\n\r\n  private _filter(filterValue: string): string[] {\r\n    const designsFromForm = this.productForm.get('designs').value;\r\n    return this.designs_id\r\n      .filter(option => designsFromForm.indexOf(option) === -1) // remove designs, which already in form\r\n      .filter(option => option.indexOf(filterValue) === 0 ); // filter by input value\r\n  }\r\n\r\n  private _checkDesignValidity(value: string): boolean {\r\n    return this.designs_id.indexOf(value) !== -1;\r\n  }\r\n\r\n  // takes design object (from local designs array) by design_id\r\n  getDesign(_id) {\r\n    return this.designs.filter(design => design._id === _id)[0];\r\n  }\r\n\r\n  getTechAsset(_id) {\r\n    return this.techAssets.filter(techAsset => techAsset._id === _id)[0];\r\n  }\r\n\r\n  getCertAsset(_id) {\r\n    return this.certAssets.filter(certAsset => certAsset._id === _id)[0];\r\n  }\r\n\r\n  // getDesignByImage(image) {\r\n  //   return this.designs.filter(design => design.image === image)[0];\r\n  // }\r\n\r\n  addTechAsset() {\r\n    if (this._checkTechAssetValidity(this.productForm.get('tech').value)) {\r\n      const techAssetsList = this.productForm.get('techAssets').value || [];\r\n      techAssetsList.push(this.productForm.get('tech').value);\r\n      this.addTechAssetsControl();\r\n      this.productForm.get('techAssets').setValue(techAssetsList);\r\n      this.productForm.get('tech').reset();\r\n    } else {\r\n      console.log('add design false');\r\n    }\r\n  }\r\n\r\n  addCertAsset() {\r\n    if (this._checkCertAssetValidity(this.productForm.get('cert').value)) {\r\n      const certAssetsList = this.productForm.get('certAssets').value || [];\r\n      certAssetsList.push(this.productForm.get('cert').value);\r\n      this.addCertAssetsControl();\r\n      this.productForm.get('certAssets').setValue(certAssetsList);\r\n      this.productForm.get('cert').reset();\r\n    } else {\r\n      console.log('add design false');\r\n    }\r\n  }\r\n\r\n  addDesign() {\r\n    if (this._checkDesignValidity(this.productForm.get('des').value)) {\r\n      const designsList = this.productForm.get('designs').value || [];\r\n      designsList.push(this.productForm.get('des').value);\r\n      this.addDesignsControl();\r\n      this.productForm.get('designs').setValue(designsList);\r\n      this.productForm.get('des').reset();\r\n    } else {\r\n      console.log('add design false');\r\n    }\r\n  }\r\n\r\n  addMainImage(event) {\r\n    this.processingLoadImage = true;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadImage = false;\r\n      // if (!this.editMode) {\r\n      //   this.productForm.get('_id').enable();\r\n      // }\r\n      // this.designForm.get('structure').enable();\r\n    } else {\r\n\r\n      // this.designForm.get('image').setValue(file);\r\n      console.log('added file', this.productForm.get('mainImage').value);\r\n      this.productService.productAddMainImage(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            this.productForm.get('mainImage').setValue(result.data);\r\n            this.processingLoadImage = false;\r\n            // if (!this.editMode) {\r\n            //   this.designForm.get('_id').enable();\r\n            // }\r\n            // this.designForm.get('structure').enable();\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.processingLoadImage = false;\r\n            // if (!this.editMode) {\r\n            //   this.designForm.get('_id').enable();\r\n            // }\r\n            // this.designForm.get('structure').enable();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  addBriefImage(event) {\r\n    this.processingLoadBriefImage = true;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadBriefImage = false;\r\n    } else {\r\n      this.productService.productAddBriefImage(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            this.productForm.get('briefImage').setValue(result.data);\r\n            this.processingLoadBriefImage = false;\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.processingLoadBriefImage = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  addAssets(event) {\r\n    this.processingLoadAssets = this.productForm.get('assets').value.length;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadAssets = -1;\r\n    } else {\r\n      const filesLinks = this.productForm.get('assets').value;\r\n      filesLinks.push(config.defaultProductImg);\r\n      this.addAssetsControl();\r\n      this.productForm.get('assets').setValue(filesLinks);\r\n      this.productService.productAddAssets(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            filesLinks.pop();\r\n            filesLinks.push(result.data);\r\n            this.productForm.get('assets').setValue(filesLinks);\r\n            this.processingLoadAssets = -1;\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.removeAssetsControl(this.productForm.get('assets').value.length - 1);\r\n            filesLinks.pop();\r\n            this.processingLoadAssets = -1;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  addTechAssets(event) {\r\n    this.processingLoadTechAssets = this.productForm.get('techAssets').value.length;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadTechAssets = -1;\r\n    } else {\r\n      const filesLinks = this.productForm.get('techAssets').value;\r\n      filesLinks.push(config.defaultProductImg);\r\n      this.addTechAssetsControl();\r\n      this.productForm.get('techAssets').setValue(filesLinks);\r\n      this.productService.productAddTechAssets(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            filesLinks.pop();\r\n            filesLinks.push(result.data);\r\n            this.productForm.get('techAssets').setValue(filesLinks);\r\n            this.processingLoadTechAssets = -1;\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.removeAssetsControl(this.productForm.get('techAssets').value.length - 1);\r\n            filesLinks.pop();\r\n            this.processingLoadTechAssets = -1;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onProductFormSubmit(goBack) {\r\n\r\n    const sortedDesigns = this.productForm.get('designs').value.sort(function (a, b) {\r\n      if (a < b) {\r\n        return -1;\r\n      } else if (a > b) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    console.log('this.productForm.get(\\'recommendations\\').value', this.productForm.get('recommendations').value);\r\n    this.product = {\r\n      _id: this.productForm.getRawValue()._id, // raw because may be disabled\r\n      name: this.productForm.get('name').value,\r\n      order: this.productForm.get('order').value,\r\n      parent: this.parentCategories,\r\n      display: this.productForm.get('display').value,\r\n      mainImage: this.productForm.get('mainImage').value,\r\n      briefImage: this.productForm.get('briefImage').value,\r\n      assets: this.productForm.get('assets').value,\r\n      techAssets: this.productForm.get('techAssets').value,\r\n      certAssets: this.productForm.get('certAssets').value,\r\n      description: this.productForm.get('description').value,\r\n      techDescriptions: this.productForm.get('techDescriptions').value,\r\n      recommendations: this.productForm.get('recommendations').value,\r\n      designs: sortedDesigns,\r\n    };\r\n\r\n    console.log('this.product', this.product);\r\n    //\r\n    this.productService.productUpsert(this.product)\r\n      .subscribe(result => {\r\n          this.matSnackBar.open(result.message, '',\r\n            {duration: 3000});\r\n          if (goBack) {\r\n            this.resetForm();\r\n            this.goBack();\r\n          }\r\n        },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  resetForm() {\r\n    this.productFormDirective.resetForm();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  onSelectDesign() {\r\n    this.addDesignButtonDirective.focus();\r\n  }\r\n\r\n  onSelectTechAssets() {\r\n    this.addTechAssetsButtonDirective.focus();\r\n  }\r\n\r\n  onSelectCertAssets() {\r\n    this.addCertAssetsButtonDirective.focus();\r\n  }\r\n\r\n  addAssetsControl() {\r\n    const control = <FormArray>this.productForm.get('assets');\r\n    control.push(this.initAssetsControl());\r\n  }\r\n\r\n  removeAssetsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('assets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initAssetsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addTechAssetsControl() {\r\n    const control = <FormArray>this.productForm.get('techAssets');\r\n    control.push(this.initTechAssetsControl());\r\n  }\r\n\r\n  removeTechAssetsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('techAssets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initTechAssetsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addCertAssetsControl() {\r\n    const control = <FormArray>this.productForm.get('certAssets');\r\n    control.push(this.initCertAssetsControl());\r\n  }\r\n\r\n  removeCertAssetsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('certAssets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initCertAssetsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addRecommendationsControl() {\r\n    const control = <FormArray>this.productForm.get('recommendations');\r\n    control.push(this.initRecommendationsControl());\r\n  }\r\n\r\n  removeRecommendationsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('recommendations');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initRecommendationsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addDesignsControl() {\r\n    const control = <FormArray>this.productForm.get('designs');\r\n    control.push(this.initDesignsControl());\r\n  }\r\n\r\n  removeDesignsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('designs');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initDesignsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addTechDescriptionsControl() {\r\n    const control = <FormArray>this.productForm.get('techDescriptions');\r\n    control.push(this.initTechDescriptionsControl());\r\n  }\r\n\r\n  removeTechDescriptionsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('techDescriptions');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initTechDescriptionsControl() {\r\n    return new FormGroup ({\r\n      techName: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      techUnit: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      techValue: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <!--<div class=\\\"item full-width-container\\\">-->\\r\\n    <!--<mat-card>-->\\r\\n    <!--<mat-card-header></mat-card-header>-->\\r\\n    <!--<mat-card-title></mat-card-title>-->\\r\\n\\r\\n    <!--<mat-card-content>-->\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\">\\r\\n          <h2 class=\\\"mat-h2\\\">Редактор колекцій</h2>\\r\\n        </div>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"catalogForm\\\" #f=\\\"ngForm\\\" (submit)=\\\"onCatalogFormSubmit()\\\">\\r\\n        <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n          <div formArrayName=\\\"categories\\\" class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\"\\r\\n               *ngFor=\\\"let categoryBlock of catalogForm.get('categories')['controls']; let i = index\\\">\\r\\n\\r\\n                <mat-select placeholder=\\\"Виберіть категорію\\\" formControlName=\\\"{{i}}\\\" required\\r\\n                            (selectionChange)=\\\"onSelectCategory($event, i)\\\">\\r\\n                  <mat-option *ngFor=\\\"let descendant of descendants[i]\\\" [value]=\\\"descendant._id\\\">\\r\\n                    {{descendant.name}}\\r\\n                  </mat-option>\\r\\n            </mat-select>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n        <!--<div class=\\\"cell\\\">-->\\r\\n\\r\\n          <!--<a mat-icon-button-->\\r\\n             <!--[routerLink]=\\\"['/dashboard/designs_editor_new']\\\"-->\\r\\n             <!--[routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">-->\\r\\n            <!--<mat-icon>add_circle</mat-icon>-->\\r\\n          <!--</a>-->\\r\\n        <!--</div>-->\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"noMoreDescendants\\\" class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"20\\\">\\r\\n          <div class=\\\"preview-img-wrapper\\\">\\r\\n            <img src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        config.defaultProductImg}}\\\" alt=\\\"product\\\">\\r\\n            <div class=\\\"preview-div-processing\\\">\\r\\n              <div class=\\\"button-wrapper\\\">\\r\\n                <!--<a mat-icon-button-->\\r\\n                <!--[routerLink]=\\\"['/dashboard/designs_editor_new']\\\"-->\\r\\n                <!--[routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">-->\\r\\n                <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                        [routerLink]=\\\"['/dashboard', 'products_editor_new', parentCategory_id, parentCategoryName]\\\"\\r\\n                        [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n                  <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let product of products\\\"  class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"20\\\">\\r\\n          <app-product-item-brief [product]=\\\"product\\\" [parentCategory_id]=\\\"parentCategory_id\\\" [parentCategoryName]=\\\"parentCategoryName\\\"></app-product-item-brief>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n        <!--<div class=\\\"cell\\\"-->\\r\\n        <!--fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">-->\\r\\n        <!--<mat-card>-->\\r\\n        <!--<mat-card-content>-->\\r\\n        <!---->\\r\\n        <!--</mat-card-content>-->\\r\\n        <!--</mat-card>-->\\r\\n        <!--</div>-->\\r\\n\\r\\n\\r\\n        <!--<div *ngFor=\\\"let design of designs\\\" class=\\\"cell\\\"-->\\r\\n             <!--fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">-->\\r\\n          <!--<app-design-item [design]=\\\"design\\\"></app-design-item>-->\\r\\n\\r\\n        <!--</div>-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!--</mat-card-content>-->\\r\\n    <!--</mat-card>-->\\r\\n    <!--</div>-->\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { of } from 'rxjs/index';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-products-editor',\r\n  templateUrl: './products-editor.component.html',\r\n  styleUrls: ['./products-editor.component.scss']\r\n})\r\nexport class ProductsEditorComponent implements OnInit {\r\n  descendants: any;\r\n  catalogForm: FormGroup;\r\n  products: any;\r\n  parentCategory_id: string;\r\n  parentCategoryName: string;\r\n  config = config;\r\n  noMoreDescendants = false;\r\n\r\n    constructor(\r\n    private catalogService: CatalogService,\r\n    private sharedService: SharedService,\r\n    private productService: ProductService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.descendants = [];\r\n    this.catalogForm = new FormGroup({\r\n      categories : new FormArray([this.initCategories()]),\r\n    });\r\n\r\n    this.catalogService.getDescendants('products')\r\n      .subscribe(result => this.descendants[0] = result.data,\r\n        err => console.log('помилка завантаження категорій', err)\r\n      );\r\n  }\r\n\r\n  onSelectCategory(event, level) {\r\n    // if (level + 2 === this.catalogForm.get('categories')['controls'].length) {\r\n    //   const control = <FormArray>this.catalogForm.get('categories');\r\n    //   control.controls[level + 1].setValue(null);\r\n    //   // this.catalogForm.get('categories')['controls'].setValue(null);\r\n    // }\r\n    while (level + 1 < this.catalogForm.get('categories')['controls'].length) {\r\n      this.removeCategory(this.catalogForm.get('categories')['controls'].length - 1);\r\n    }\r\n    // console.log('event', event);\r\n    this.catalogService.getDescendants(event.value)\r\n      .subscribe(result => {\r\n        if (result.data.length) {\r\n          // console.log('descedants present', result.data);\r\n          this.products = null;\r\n          this.descendants[level + 1] = result.data;\r\n          this.noMoreDescendants = false;\r\n          this.addCategory();\r\n        } else {\r\n          this.productService.getProductsByCategory(event.value, false)\r\n            .subscribe(result => this.products = result.data,\r\n              err => console.log('помилка завантаження категорій', err)\r\n            );\r\n          this.parentCategory_id = event.value;\r\n          this.parentCategoryName = event.source.triggerValue;\r\n          // console.log('descedants absent', result.data);\r\n          // console.log('this.parentCategory_id', this.parentCategory_id);\r\n          this.noMoreDescendants = true;\r\n        }\r\n        this.descendants[level + 1] = result.data;\r\n        },\r\n        err => console.log('помилка завантаження категорій', err)\r\n      );\r\n  }\r\n\r\n  onCatalogFormSubmit() {\r\n    console.log('onCatalogFormSubmit');\r\n  }\r\n\r\n  addCategory() {\r\n    const control = <FormArray>this.catalogForm.get('categories');\r\n    control.push(this.initCategories());\r\n  }\r\n\r\n  removeCategory(i: number) {\r\n    const control = <FormArray>this.catalogForm.get('categories');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initCategories() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\">\\r\\n          <h2 class=\\\"mat-h2\\\">Інструменти</h2>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">iguard 200x200</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_200,h_200,f_auto/' +\\r\\n                'iguard'}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">favicon32x32</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_32,h_32/' +\\r\\n                faviconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">Grabo Logo 250x90</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_250,h_90/' +\\r\\n                logoFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">Grabo Logo 140x50</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_140,h_50/' +\\r\\n                logoFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">512x512</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_512,h_512/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">384x384</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_384,h_384/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">192x192</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_192,h_192/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">152x152</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_152,h_152/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">144x144</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_144,h_144/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">128x128</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_128,h_128/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">96x96</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_96,h_96/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">72x72</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_72,h_72/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-tools',\r\n  templateUrl: './tools.component.html',\r\n  styleUrls: ['./tools.component.scss']\r\n})\r\nexport class ToolsComponent implements OnInit {\r\n  config = config;\r\n  iconFilename: string;\r\n  faviconFilename: string;\r\n  logoFilename: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.iconFilename = config.gLogo + '.png';\r\n    this.faviconFilename = config.gLogo + '.png';\r\n    this.logoFilename = config.graboLogo + '.png';\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}