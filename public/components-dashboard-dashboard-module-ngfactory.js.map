{"version":3,"sources":["webpack:///./node_modules/@angular/material/checkbox/typings/index.d.ts.MatCheckbox.html","webpack:///./node_modules/@angular/material/select/typings/index.d.ts.MatSelect.html","webpack:///./node_modules/@cloudinary/angular-5.x/src/cloudinary-image.component.d.ts.CloudinaryImage.html","webpack:///./node_modules/rxjs/index.js","webpack:///./node_modules/rxjs/internal/AsyncSubject.js","webpack:///./node_modules/rxjs/internal/BehaviorSubject.js","webpack:///./node_modules/rxjs/internal/InnerSubscriber.js","webpack:///./node_modules/rxjs/internal/Notification.js","webpack:///./node_modules/rxjs/internal/OuterSubscriber.js","webpack:///./node_modules/rxjs/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/internal/Scheduler.js","webpack:///./node_modules/rxjs/internal/Subject.js","webpack:///./node_modules/rxjs/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/internal/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/internal/observable/bindCallback.js","webpack:///./node_modules/rxjs/internal/observable/bindNodeCallback.js","webpack:///./node_modules/rxjs/internal/observable/combineLatest.js","webpack:///./node_modules/rxjs/internal/observable/concat.js","webpack:///./node_modules/rxjs/internal/observable/defer.js","webpack:///./node_modules/rxjs/internal/observable/empty.js","webpack:///./node_modules/rxjs/internal/observable/forkJoin.js","webpack:///./node_modules/rxjs/internal/observable/fromEvent.js","webpack:///./node_modules/rxjs/internal/observable/fromEventPattern.js","webpack:///./node_modules/rxjs/internal/observable/generate.js","webpack:///./node_modules/rxjs/internal/observable/iif.js","webpack:///./node_modules/rxjs/internal/observable/interval.js","webpack:///./node_modules/rxjs/internal/observable/merge.js","webpack:///./node_modules/rxjs/internal/observable/never.js","webpack:///./node_modules/rxjs/internal/observable/of.js","webpack:///./node_modules/rxjs/internal/observable/onErrorResumeNext.js","webpack:///./node_modules/rxjs/internal/observable/pairs.js","webpack:///./node_modules/rxjs/internal/observable/race.js","webpack:///./node_modules/rxjs/internal/observable/range.js","webpack:///./node_modules/rxjs/internal/observable/scalar.js","webpack:///./node_modules/rxjs/internal/observable/throwError.js","webpack:///./node_modules/rxjs/internal/observable/timer.js","webpack:///./node_modules/rxjs/internal/observable/using.js","webpack:///./node_modules/rxjs/internal/observable/zip.js","webpack:///./node_modules/rxjs/internal/operators/concatAll.js","webpack:///./node_modules/rxjs/internal/operators/groupBy.js","webpack:///./node_modules/rxjs/internal/operators/map.js","webpack:///./node_modules/rxjs/internal/operators/mergeAll.js","webpack:///./node_modules/rxjs/internal/operators/mergeMap.js","webpack:///./node_modules/rxjs/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/internal/operators/refCount.js","webpack:///./node_modules/rxjs/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/internal/scheduler/AnimationFrameAction.js","webpack:///./node_modules/rxjs/internal/scheduler/AnimationFrameScheduler.js","webpack:///./node_modules/rxjs/internal/scheduler/AsapAction.js","webpack:///./node_modules/rxjs/internal/scheduler/AsapScheduler.js","webpack:///./node_modules/rxjs/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/internal/scheduler/VirtualTimeScheduler.js","webpack:///./node_modules/rxjs/internal/scheduler/animationFrame.js","webpack:///./node_modules/rxjs/internal/scheduler/asap.js","webpack:///./node_modules/rxjs/internal/scheduler/async.js","webpack:///./node_modules/rxjs/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/internal/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/internal/util/EmptyError.js","webpack:///./node_modules/rxjs/internal/util/Immediate.js","webpack:///./node_modules/rxjs/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/internal/util/TimeoutError.js","webpack:///./node_modules/rxjs/internal/util/identity.js","webpack:///./node_modules/rxjs/internal/util/isNumeric.js","webpack:///./node_modules/rxjs/internal/util/isObservable.js","webpack:///./node_modules/rxjs/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/internal/util/subscribeToResult.js","webpack:///./src/app/components/dashboard/dashboard-routing.module.ts","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.html","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/dashboard.module.ts","webpack:///./src/app/components/dashboard/designs-editor-form/designs-editor-form.component.html","webpack:///./src/app/components/dashboard/designs-editor-form/designs-editor-form.component.ts","webpack:///./src/app/components/dashboard/designs-editor/designs-editor.component.ts","webpack:///./src/app/components/dashboard/product-create/product-create.component.html","webpack:///./src/app/components/dashboard/product-create/product-create.component.ts","webpack:///./src/app/components/dashboard/products-editor-form/products-editor-form.component.html","webpack:///./src/app/components/dashboard/products-editor-form/products-editor-form.component.ts","webpack:///./src/app/components/dashboard/products-editor/products-editor.component.ts","webpack:///./src/app/components/shared/design-item/design-item.component.html","webpack:///./src/app/components/shared/design-item/design-item.component.ts","webpack:///./src/app/services/design.service.ts"],"names":[],"mappings":"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AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;ACxDA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;AC1CA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA,SAAS,kBAAkB,GAAG,oBAAoB,GAAG,gBAAgB;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,eAAe,yBAAyB;AACxC,eAAe,yBAAyB;AACxC,eAAe,iBAAiB;AAChC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,eAAe,yBAAyB;AACxC,eAAe,iBAAiB;AAChC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;;;;;ACpIA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;ACnCA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,yC;;;;;;;;;;;;ACpIA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA,eAAe,OAAO;AACtB;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;ACrDA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;;;;;;ACpLA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;AC9CA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,2BAA2B;AAC3C,eAAe,8BAA8B;AAC7C,kBAAkB,8BAA8B;AAChD,iBAAiB,qCAAqC;AACtD,kBAAkB,sDAAsD;AACxE,iBAAiB,qCAAqC;AACtD,cAAc,kCAAkC;AAChD,eAAe;AACfiD;;;;;;;;;;;;ACpLA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB,KAAK,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB,KAAK;AACzB,IAAI;AACJ;AACA;AACA;AACA,gDAAgD,0BAA0B;AAC1E,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,iHAAiH,4FAA4F,EAAE;AAC/M;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,2DAA2D,iCAAiC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACpNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE,IAAI,uBAAuB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oBAAoB;AACpB,oBAAoB;AACpB,IAAI;AACJ;AACA;AACA;AACA,wBAAwB;AACxB,IAAI;AACJ;AACA;AACA;AACA,oBAAoB;AACpB,IAAI;AACJ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,qHAAqH,4FAA4F,EAAE;AACnN;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2DAA2D;AACnH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA,gEAAgE,6BAA6B;AAC7F;AACA;AACA;AACA,+DAA+D,iCAAiC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;ACnNA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;AChOA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;AC/GA;AACA,8CAA8C,cAAc;AAC5D;AACA,kGAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;AClEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,yDAAyD,YAAY;AACrE,IAAI,gBAAgB;AACpB;AACA,mEAAmE,8BAA8B,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,UAAU,gBAAgB,iBAAiB;AACtD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,wCAAwC,8BAA8B,EAAE,EAAE,EAAE;AAC1I;AACA;AACA,iC;;;;;;;;;;;;AC5DA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,OAAO,UAAU;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B;AACA,WAAW,SAAS;AACpB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2CAA2C,EAAE;AAC9G;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oC;;;;;;;;;;;;ACpMA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B;AACA,WAAW,OAAO;AAClB;AACA,WAAW,qBAAqB;AAChC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,4FAA4F,EAAE;AACnL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kEAAkE;AACrG;AACA;AACA;AACA;AACA,mCAAmC,yCAAyC;AAC5E;AACA;AACA;AACA;AACA,mCAAmC,oDAAoD;AACvF;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AClLA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,iCAAiC;AAC5C;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,2FAA2F,4FAA4F,EAAE;AACzL;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE,KAAK;AACL;AACA;AACA,4C;;;;;;;;;;;;AC7EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;AC9HA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,oBAAoB;AAC/B,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D,iCAAiC,6BAA6B;AAC9D,sCAAsC,+CAA+C,EAAE;AACvF;AACA;AACA,+B;;;;;;;;;;;;AC3FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qDAAqD;AAClH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB,+DAA+D;AAClF;AACA,oC;;;;;;;;;;;;AC1DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC1FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACnCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;;;;;;;;;;;;AC5BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,YAAY;AAC1G;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yFAAyF;AAC5H;AACA,oCAAoC,wBAAwB,EAAE;AAC9D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,6C;;;;;;;;;;;;ACrFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8DAA8D,qFAAqF;AACnJ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6FAA6F;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACzEA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;;;;;;AC/FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU,gBAAgB,iBAAiB;AACtD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC5EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACbA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,IAAI;AACf,WAAW,UAAU,gBAAgB,iBAAiB;AACtD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gCAAgC,EAAE;AACpG;AACA;AACA,kEAAkE,yCAAyC,uCAAuC,EAAE,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC5DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,YAAY;AACvB;AACA,WAAW,qBAAqB;AAChC;AACA,WAAW,cAAc;AACzB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AClFA;AACA,8CAA8C,cAAc;AAC5D;AACA,kGAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,0BAA0B;AACrC;AACA,WAAW,iDAAiD;AAC5D;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;AC9DA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B,IAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,+B;;;;;;;;;;;;AC/QA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACvDA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,sBAAsB;AAC7C,uBAAuB,oBAAoB;AAC3C,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B;AACA,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA,SAAS,sBAAsB;AAC/B;AACA;AACA,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,sBAAsB;AAC7C,uBAAuB,oBAAoB;AAC3C,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB,+CAA+C;AACpE;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,2DAA2D;AACtE;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mC;;;;;;;;;;;;AC9RA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,+B;;;;;;;;;;;;AC/FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,gCAAgC,uCAAuC;AACvE;AACA;AACA;AACA,oC;;;;;;;;;;;;ACrDA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uCAAuC;AACvE;AACA;AACA,kCAAkC,8CAA8C,oEAAoE,oCAAoC,EAAE,GAAG,EAAE,eAAe;AAC9M;AACA;AACA;AACA;AACA,8BAA8B,+DAA+D;AAC7F;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;;;;;AC5JA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,IAAI;AACJ;AACA,SAAS;AACT;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1HA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oC;;;;;;;;;;;;AC3FA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;;;;;ACjDA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,8BAA8B,EAAE;AAChI;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gD;;;;;;;;;;;;AC5DA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;;;;;AC1CA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;AC7DA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;AC1CA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;ACpJA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,6BAA6B,iCAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;AC5EA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;ACvDA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;ACrBA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E,mCAAmC,sCAAsC;AACzE,oEAAoE,oBAAoB,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gD;;;;;;;;;;;;ACvHA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,YAAY;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;ACnCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACvCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC/CA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,YAAY;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AClEA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;;;;;ACjCA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6BAA6B,EAAE;AAC3E;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qC;;;;;;;;;;;;ACrBA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;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","file":"components-dashboard-dashboard-module-ngfactory.js","sourcesContent":["<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label><div class=\"mat-checkbox-inner-container\" [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\"><input #input class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [checked]=\"checked\" [attr.value]=\"value\" [disabled]=\"disabled\" [attr.name]=\"name\" [tabIndex]=\"tabIndex\" [indeterminate]=\"indeterminate\" [attr.aria-label]=\"ariaLabel || null\" [attr.aria-labelledby]=\"ariaLabelledby\" [attr.aria-checked]=\"_getAriaChecked()\" (change)=\"_onInteractionEvent($event)\" (click)=\"_onInputClick($event)\"><div matRipple class=\"mat-checkbox-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleRadius]=\"25\" [matRippleCentered]=\"true\" [matRippleAnimation]=\"{enterDuration: 150}\"></div><div class=\"mat-checkbox-frame\"></div><div class=\"mat-checkbox-background\"><svg version=\"1.1\" focusable=\"false\" class=\"mat-checkbox-checkmark\" viewBox=\"0 0 24 24\" xml:space=\"preserve\"><path class=\"mat-checkbox-checkmark-path\" fill=\"none\" stroke=\"white\" d=\"M4.1,12.7 9,17.6 20.3,6.3\"/></svg><div class=\"mat-checkbox-mixedmark\"></div></div></div><span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></span></label>","<div cdk-overlay-origin class=\"mat-select-trigger\" aria-hidden=\"true\" (click)=\"toggle()\" #origin=\"cdkOverlayOrigin\" #trigger><div class=\"mat-select-value\" [ngSwitch]=\"empty\"><span class=\"mat-select-placeholder\" *ngSwitchCase=\"true\">{{placeholder || '\\u00A0'}}</span> <span class=\"mat-select-value-text\" *ngSwitchCase=\"false\" [ngSwitch]=\"!!customTrigger\"><span *ngSwitchDefault>{{triggerValue}}</span><ng-content select=\"mat-select-trigger\" *ngSwitchCase=\"true\"></ng-content></span></div><div class=\"mat-select-arrow-wrapper\"><div class=\"mat-select-arrow\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" [cdkConnectedOverlayScrollStrategy]=\"_scrollStrategy\" [cdkConnectedOverlayOrigin]=\"origin\" [cdkConnectedOverlayOpen]=\"panelOpen\" [cdkConnectedOverlayPositions]=\"_positions\" [cdkConnectedOverlayMinWidth]=\"_triggerRect?.width\" [cdkConnectedOverlayOffsetY]=\"_offsetY\" (backdropClick)=\"close()\" (attach)=\"_onAttached()\" (detach)=\"close()\"><div #panel class=\"mat-select-panel {{ _getPanelTheme() }}\" [ngClass]=\"panelClass\" [@transformPanel]=\"multiple ? 'showing-multiple' : 'showing'\" (@transformPanel.done)=\"_onPanelDone()\" [style.transformOrigin]=\"_transformOrigin\" [class.mat-select-panel-done-animating]=\"_panelDoneAnimating\" [style.font-size.px]=\"_triggerFontSize\" (keydown)=\"_handleKeydown($event)\"><div class=\"mat-select-content\" [@fadeInContent]=\"'showing'\" (@fadeInContent.done)=\"_onFadeInDone()\"><ng-content></ng-content></div></div></ng-template>","<img>","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* Observable */\nvar Observable_1 = require(\"./internal/Observable\");\nexports.Observable = Observable_1.Observable;\nvar ConnectableObservable_1 = require(\"./internal/observable/ConnectableObservable\");\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar groupBy_1 = require(\"./internal/operators/groupBy\");\nexports.GroupedObservable = groupBy_1.GroupedObservable;\nvar observable_1 = require(\"./internal/symbol/observable\");\nexports.observable = observable_1.observable;\n/* Subjects */\nvar Subject_1 = require(\"./internal/Subject\");\nexports.Subject = Subject_1.Subject;\nvar BehaviorSubject_1 = require(\"./internal/BehaviorSubject\");\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar ReplaySubject_1 = require(\"./internal/ReplaySubject\");\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar AsyncSubject_1 = require(\"./internal/AsyncSubject\");\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\n/* Schedulers */\nvar asap_1 = require(\"./internal/scheduler/asap\");\nexports.asapScheduler = asap_1.asap;\nvar async_1 = require(\"./internal/scheduler/async\");\nexports.asyncScheduler = async_1.async;\nvar queue_1 = require(\"./internal/scheduler/queue\");\nexports.queueScheduler = queue_1.queue;\nvar animationFrame_1 = require(\"./internal/scheduler/animationFrame\");\nexports.animationFrameScheduler = animationFrame_1.animationFrame;\nvar VirtualTimeScheduler_1 = require(\"./internal/scheduler/VirtualTimeScheduler\");\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\nexports.VirtualAction = VirtualTimeScheduler_1.VirtualAction;\nvar Scheduler_1 = require(\"./internal/Scheduler\");\nexports.Scheduler = Scheduler_1.Scheduler;\n/* Subscription */\nvar Subscription_1 = require(\"./internal/Subscription\");\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = require(\"./internal/Subscriber\");\nexports.Subscriber = Subscriber_1.Subscriber;\n/* Notification */\nvar Notification_1 = require(\"./internal/Notification\");\nexports.Notification = Notification_1.Notification;\n/* Utils */\nvar pipe_1 = require(\"./internal/util/pipe\");\nexports.pipe = pipe_1.pipe;\nvar noop_1 = require(\"./internal/util/noop\");\nexports.noop = noop_1.noop;\nvar identity_1 = require(\"./internal/util/identity\");\nexports.identity = identity_1.identity;\nvar isObservable_1 = require(\"./internal/util/isObservable\");\nexports.isObservable = isObservable_1.isObservable;\n/* Error types */\nvar ArgumentOutOfRangeError_1 = require(\"./internal/util/ArgumentOutOfRangeError\");\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar EmptyError_1 = require(\"./internal/util/EmptyError\");\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ObjectUnsubscribedError_1 = require(\"./internal/util/ObjectUnsubscribedError\");\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar UnsubscriptionError_1 = require(\"./internal/util/UnsubscriptionError\");\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar TimeoutError_1 = require(\"./internal/util/TimeoutError\");\nexports.TimeoutError = TimeoutError_1.TimeoutError;\n/* Static observable creation exports */\nvar bindCallback_1 = require(\"./internal/observable/bindCallback\");\nexports.bindCallback = bindCallback_1.bindCallback;\nvar bindNodeCallback_1 = require(\"./internal/observable/bindNodeCallback\");\nexports.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\nvar combineLatest_1 = require(\"./internal/observable/combineLatest\");\nexports.combineLatest = combineLatest_1.combineLatest;\nvar concat_1 = require(\"./internal/observable/concat\");\nexports.concat = concat_1.concat;\nvar defer_1 = require(\"./internal/observable/defer\");\nexports.defer = defer_1.defer;\nvar empty_1 = require(\"./internal/observable/empty\");\nexports.empty = empty_1.empty;\nvar forkJoin_1 = require(\"./internal/observable/forkJoin\");\nexports.forkJoin = forkJoin_1.forkJoin;\nvar from_1 = require(\"./internal/observable/from\");\nexports.from = from_1.from;\nvar fromEvent_1 = require(\"./internal/observable/fromEvent\");\nexports.fromEvent = fromEvent_1.fromEvent;\nvar fromEventPattern_1 = require(\"./internal/observable/fromEventPattern\");\nexports.fromEventPattern = fromEventPattern_1.fromEventPattern;\nvar generate_1 = require(\"./internal/observable/generate\");\nexports.generate = generate_1.generate;\nvar iif_1 = require(\"./internal/observable/iif\");\nexports.iif = iif_1.iif;\nvar interval_1 = require(\"./internal/observable/interval\");\nexports.interval = interval_1.interval;\nvar merge_1 = require(\"./internal/observable/merge\");\nexports.merge = merge_1.merge;\nvar never_1 = require(\"./internal/observable/never\");\nexports.never = never_1.never;\nvar of_1 = require(\"./internal/observable/of\");\nexports.of = of_1.of;\nvar onErrorResumeNext_1 = require(\"./internal/observable/onErrorResumeNext\");\nexports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\nvar pairs_1 = require(\"./internal/observable/pairs\");\nexports.pairs = pairs_1.pairs;\nvar race_1 = require(\"./internal/observable/race\");\nexports.race = race_1.race;\nvar range_1 = require(\"./internal/observable/range\");\nexports.range = range_1.range;\nvar throwError_1 = require(\"./internal/observable/throwError\");\nexports.throwError = throwError_1.throwError;\nvar timer_1 = require(\"./internal/observable/timer\");\nexports.timer = timer_1.timer;\nvar using_1 = require(\"./internal/observable/using\");\nexports.using = using_1.using;\nvar zip_1 = require(\"./internal/observable/zip\");\nexports.zip = zip_1.zip;\n/* Constants */\nvar empty_2 = require(\"./internal/observable/empty\");\nexports.EMPTY = empty_2.EMPTY;\nvar never_2 = require(\"./internal/observable/never\");\nexports.NEVER = never_2.NEVER;\n/* Config */\nvar config_1 = require(\"./internal/config\");\nexports.config = config_1.config;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"./Subject\");\nvar Subscription_1 = require(\"./Subscription\");\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = /** @class */ (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"./Subject\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = /** @class */ (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"./Subscriber\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = /** @class */ (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar empty_1 = require(\"./observable/empty\");\nvar of_1 = require(\"./observable/of\");\nvar throwError_1 = require(\"./observable/throwError\");\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = /** @class */ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of_1.of(this.value);\n            case 'E':\n                return throwError_1.throwError(this.error);\n            case 'C':\n                return empty_1.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     * @nocollapse\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"./Subscriber\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = /** @class */ (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"./Subject\");\nvar queue_1 = require(\"./scheduler/queue\");\nvar Subscription_1 = require(\"./Subscription\");\nvar observeOn_1 = require(\"./operators/observeOn\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar SubjectSubscription_1 = require(\"./SubjectSubscription\");\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = /** @class */ (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        // Since this method is invoked in every next() call than the buffer\n        // can overgrow the max size only by one item\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = /** @class */ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nvar Scheduler = /** @class */ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    /** @nocollapse */\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"./Observable\");\nvar Subscriber_1 = require(\"./Subscriber\");\nvar Subscription_1 = require(\"./Subscription\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar SubjectSubscription_1 = require(\"./SubjectSubscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /** @class */ (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = /** @class */ (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    /**@nocollapse */\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = /** @class */ (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscription_1 = require(\"./Subscription\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /** @class */ (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"../Subject\");\nvar Observable_1 = require(\"../Observable\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subscription_1 = require(\"../Subscription\");\nvar refCount_1 = require(\"../operators/refCount\");\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = /** @class */ (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        /** @internal */\n        _this._isComplete = false;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /** @class */ (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = /** @class */ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /** @class */ (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\nvar map_1 = require(\"../operators/map\");\nvar isArray_1 = require(\"../util/isArray\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\n// tslint:enable:max-line-length\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, the\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is very important to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - {@link Scheduler} - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n * and call `subscribe` on the output Observable all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n *\n * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * var getJSONAsObservable = bindCallback(jQuery.getJSON);\n * var result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Receive an array of arguments passed to a callback</caption>\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n *\n *\n * @example <caption>Compare behaviour with and without async Scheduler</caption>\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n *\n *\n * @example <caption>Use bindCallback on an object method</caption>\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n *\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nfunction bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler_1.isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map_1.map(function (args) { return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var context = this;\n        var subject;\n        var params = {\n            context: context,\n            subject: subject,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n        };\n        return new Observable_1.Observable(function (subscriber) {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject_1.AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                var state = {\n                    args: args, subscriber: subscriber, params: params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nexports.bindCallback = bindCallback;\nfunction dispatch(state) {\n    var _this = this;\n    var self = this;\n    var args = state.args, subscriber = state.subscriber, params = state.params;\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    var value = state.value, subject = state.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    var err = state.err, subject = state.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\nvar map_1 = require(\"../operators/map\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar isArray_1 = require(\"../util/isArray\");\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * Scheduler works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n *\n * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n * import * as fs from 'fs';\n * var readFileAsObservable = bindNodeCallback(fs.readFile);\n * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Use on function calling callback with multiple arguments</caption>\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n *\n * @example <caption>Use on function calling callback in regular style</caption>\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n *\n *\n * @see {@link bindCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nfunction bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler_1.isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map_1.map(function (args) { return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {\n            subject: undefined,\n            args: args,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n            context: this,\n        };\n        return new Observable_1.Observable(function (subscriber) {\n            var context = params.context;\n            var subject = params.subject;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject_1.AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        var err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\n            }\n        });\n    };\n}\nexports.bindNodeCallback = bindNodeCallback;\nfunction dispatch(state) {\n    var _this = this;\n    var params = state.params, subscriber = state.subscriber, context = state.context;\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar isArray_1 = require(\"../util/isArray\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar fromArray_1 = require(\"./fromArray\");\nvar NONE = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray_1.fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = /** @class */ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = /** @class */ (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar of_1 = require(\"./of\");\nvar from_1 = require(\"./from\");\nvar concatAll_1 = require(\"../operators/concatAll\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler_1.isScheduler(observables[1]))) {\n        return from_1.from(observables[0]);\n    }\n    return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar from_1 = require(\"./from\"); // lol\nvar empty_1 = require(\"./empty\");\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * <img src=\"./img/defer.png\" width=\"100%\">\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n * var clicksOrInterval = Rx.Observable.defer(function () {\n *   if (Math.random() > 0.5) {\n *     return Rx.Observable.fromEvent(document, 'click');\n *   } else {\n *     return Rx.Observable.interval(1000);\n *   }\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n *\n * @see {@link create}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nfunction defer(observableFactory) {\n    return new Observable_1.Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from_1.from(input) : empty_1.empty();\n        return source.subscribe(subscriber);\n    });\n}\nexports.defer = defer;\n//# sourceMappingURL=defer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * {@link Scheduler}. It is preferrable to use this over `empty()`.\n */\nexports.EMPTY = new Observable_1.Observable(function (subscriber) { return subscriber.complete(); });\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * <img src=\"./img/empty.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then complete.</caption>\n * var result = Rx.Observable.empty().startWith(7);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n * var interval = Rx.Observable.interval(1000);\n * var result = interval.mergeMap(x =>\n *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n *\n * @see {@link create}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throw}\n *\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using EMPTY constant.\n */\nfunction empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : exports.EMPTY;\n}\nexports.empty = empty;\nfunction emptyScheduled(scheduler) {\n    return new Observable_1.Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\nexports.emptyScheduled = emptyScheduled;\n//# sourceMappingURL=empty.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar empty_1 = require(\"./empty\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar map_1 = require(\"../operators/map\");\n/* tslint:enable:max-line-length */\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * <img src=\"./img/forkJoin.png\" width=\"100%\">\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * @example <caption>Use forkJoin with operator emitting immediately</caption>\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8)\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n *\n *\n * @example <caption>Use forkJoin with operator emitting after some time</caption>\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)) // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n *\n * @example <caption>Use forkJoin with project function</caption>\n * import { jorkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)), // emit 0, 1, 2, 3 every half a second and complete\n *   (n, m) => n + m\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nfunction forkJoin() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        // DEPRECATED PATH\n        resultSelector = sources.pop();\n    }\n    // if the first and only other argument is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n    if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return empty_1.EMPTY;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return forkJoin(sources).pipe(map_1.map(function (args) { return resultSelector.apply(void 0, args); }));\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\nexports.forkJoin = forkJoin;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = /** @class */ (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=forkJoin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar isFunction_1 = require(\"../util/isFunction\");\nvar map_1 = require(\"../operators/map\");\nvar toString = Object.prototype.toString;\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * <img src=\"./img/fromEvent.png\" width=\"100%\">\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * var clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n *\n *\n * @example <caption>Use addEventListener with capture option</caption>\n * var clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                                          // which will be passed to addEventListener\n * var clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nfunction fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction_1.isFunction(options)) {\n        // DEPRECATED PATH\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEvent(target, eventName, options).pipe(map_1.map(function (args) { return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nexports.fromEvent = fromEvent;\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar isFunction_1 = require(\"../util/isFunction\");\nvar map_1 = require(\"../operators/map\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable from an API based on addHandler/removeHandler\n * functions.\n *\n * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n * Observable.</span>\n *\n * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n *\n * Creates an Observable by using the `addHandler` and `removeHandler`\n * functions to add and remove the handlers. The `addHandler` is\n * called when the output Observable is subscribed, and `removeHandler` is\n * called when the Subscription is unsubscribed.\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * var clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * @see {@link from}\n * @see {@link fromEvent}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n * takes a `handler` function as argument and removes it in case it was\n * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n * removeHandler function will forward it.\n * @return {Observable<T>}\n * @name fromEventPattern\n */\nfunction fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEventPattern(addHandler, removeHandler).pipe(map_1.map(function (args) { return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction_1.isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\nexports.fromEventPattern = fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar identity_1 = require(\"../util/identity\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nfunction generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    var resultSelector;\n    var initialState;\n    if (arguments.length == 1) {\n        var options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity_1.identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity_1.identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        var state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber: subscriber,\n                iterate: iterate,\n                condition: condition,\n                resultSelector: resultSelector,\n                state: state\n            });\n        }\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nexports.generate = generate;\nfunction dispatch(state) {\n    var subscriber = state.subscriber, condition = state.condition;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        var conditionResult = void 0;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    var value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar defer_1 = require(\"./defer\");\nvar empty_1 = require(\"./empty\");\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `if` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `if` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * @example <caption>Change at runtime which Observable will be subscribed</caption>\n * let subscribeToFirst;\n * const firstOrSecond = Rx.Observable.if(\n *   () => subscribeToFirst,\n *   Rx.Observable.of('first'),\n *   Rx.Observable.of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n *\n * @example <caption>Control an access to an Observable</caption>\n * let accessGranted;\n * const observableIfYouHaveAccess = Rx.Observable.if(\n *   () => accessGranted,\n *   Rx.Observable.of('It seems you have an access...') // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"The end\"\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nfunction iif(condition, trueResult, falseResult) {\n    if (trueResult === void 0) { trueResult = empty_1.EMPTY; }\n    if (falseResult === void 0) { falseResult = empty_1.EMPTY; }\n    return defer_1.defer(function () { return condition() ? trueResult : falseResult; });\n}\nexports.iif = iif;\n//# sourceMappingURL=iif.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar async_1 = require(\"../scheduler/async\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified IScheduler.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * <img src=\"./img/interval.png\" width=\"100%\">\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` IScheduler to provide a notion of time, but you may pass any\n * IScheduler to it.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n * var numbers = Rx.Observable.interval(1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nfunction interval(period, scheduler) {\n    if (period === void 0) { period = 0; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (!isNumeric_1.isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async_1.async;\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nexports.interval = interval;\nfunction dispatch(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar mergeAll_1 = require(\"../operators/mergeAll\");\nvar fromArray_1 = require(\"./fromArray\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(fromArray_1.fromArray(observables, scheduler));\n}\nexports.merge = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar noop_1 = require(\"../util/noop\");\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * <img src=\"./img/never.png\" width=\"100%\">\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n * function info() {\n *   console.log('Will not be called');\n * }\n * var result = NEVER.startWith(7);\n * result.subscribe(x => console.log(x), info, info);\n *\n * @see {@link create}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexports.NEVER = new Observable_1.Observable(noop_1.noop);\n/**\n * @deprecated Deprecated in favor of using NEVER constant.\n */\nfunction never() {\n    return exports.NEVER;\n}\nexports.never = never;\n//# sourceMappingURL=never.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar fromArray_1 = require(\"./fromArray\");\nvar empty_1 = require(\"./empty\");\nvar scalar_1 = require(\"./scalar\");\nfunction of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty_1.empty(scheduler);\n        case 1:\n            return scheduler ? fromArray_1.fromArray(args, scheduler) : scalar_1.scalar(args[0]);\n        default:\n            return fromArray_1.fromArray(args, scheduler);\n    }\n}\nexports.of = of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar from_1 = require(\"./from\");\nvar isArray_1 = require(\"../util/isArray\");\nvar empty_1 = require(\"./empty\");\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * import { onErrorResumeNext, of } from 'rxjs/create';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nfunction onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 0) {\n        return empty_1.EMPTY;\n    }\n    var first = sources[0], remainder = sources.slice(1);\n    if (sources.length === 1 && isArray_1.isArray(first)) {\n        return onErrorResumeNext.apply(void 0, first);\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\n        return from_1.from(first).subscribe({\n            next: function (value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\n/**\n * Convert an object into an observable sequence of [key, value] pairs\n * using an optional IScheduler to enumerate the object.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * var obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * var source = Rx.Observable.pairs(obj);\n *\n * var subscription = source.subscribe(\n *   function (x) {\n *     console.log('Next: %s', x);\n *   },\n *   function (err) {\n *     console.log('Error: %s', err);\n *   },\n *   function () {\n *     console.log('Completed');\n *   });\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to run the\n * enumeration of the input sequence on.\n * @returns {(Observable<[string, T]>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nfunction pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable_1.Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n                var key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable_1.Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            var subscription = new Subscription_1.Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));\n            return subscription;\n        });\n    }\n}\nexports.pairs = pairs;\n/** @internal */\nfunction dispatch(state) {\n    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            var key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\nexports.dispatch = dispatch;\n//# sourceMappingURL=pairs.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"../util/isArray\");\nvar fromArray_1 = require(\"./fromArray\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray_1.fromArray(observables, undefined).lift(new RaceOperator());\n}\nexports.race = race;\nvar RaceOperator = /** @class */ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = /** @class */ (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * <img src=\"./img/range.png\" width=\"100%\">\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * IScheduler and just delivers the notifications synchronously, but may use\n * an optional IScheduler to regulate those deliveries.\n *\n * @example <caption>Emits the numbers 1 to 10</caption>\n * var numbers = Rx.Observable.range(1, 10);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nfunction range(start, count, scheduler) {\n    if (start === void 0) { start = 0; }\n    if (count === void 0) { count = 0; }\n    return new Observable_1.Observable(function (subscriber) {\n        var index = 0;\n        var current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexports.range = range;\n/** @internal */\nfunction dispatch(state) {\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\nexports.dispatch = dispatch;\n//# sourceMappingURL=range.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nfunction scalar(value) {\n    var result = new Observable_1.Observable(function (subscriber) {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\nexports.scalar = scalar;\n//# sourceMappingURL=scalar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * <img src=\"./img/throw.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then emit an error.</caption>\n * import { throwError, concat, of } from 'rxjs/create';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n * import { throwError, interval, of } from 'rxjs/create';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 13 ?\n *     throwError('Thirteens are bad') :\n *     of('a', 'b', 'c')\n *   )\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link create}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throw\n * @owner Observable\n */\nfunction throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable_1.Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable_1.Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nexports.throwError = throwError;\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar async_1 = require(\"../scheduler/async\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\n/**\n * Creates an Observable that starts emitting after an `initialDelay` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link interval}, but you can specify when\n * should the emissions start.</span>\n *\n * <img src=\"./img/timer.png\" width=\"100%\">\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n * operator uses the `async` IScheduler to provide a notion of time, but you\n * may pass any IScheduler to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n * var numbers = Rx.Observable.timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @example <caption>Emits one number after five seconds</caption>\n * var numbers = Rx.Observable.timer(5000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time to wait before\n * emitting the first value of `0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `initialDelay` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nfunction timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) { dueTime = 0; }\n    var period = -1;\n    if (isNumeric_1.isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler_1.isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler_1.isScheduler(scheduler)) {\n        scheduler = async_1.async;\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        var due = isNumeric_1.isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nexports.timer = timer;\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar from_1 = require(\"./from\"); // from from from! LAWL\nvar empty_1 = require(\"./empty\");\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nfunction using(resourceFactory, observableFactory) {\n    return new Observable_1.Observable(function (subscriber) {\n        var resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = result ? from_1.from(result) : empty_1.EMPTY;\n        var subscription = source.subscribe(subscriber);\n        return function () {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\nexports.using = using;\n//# sourceMappingURL=using.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fromArray_1 = require(\"./fromArray\");\nvar isArray_1 = require(\"../util/isArray\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar iterator_1 = require(\"../../internal/symbol/iterator\");\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray_1.fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexports.zip = zip;\nvar ZipOperator = /** @class */ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = /** @class */ (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) { values = Object.create(null); }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = /** @class */ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /** @class */ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = /** @class */ (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeAll_1 = require(\"./mergeAll\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return mergeAll_1.mergeAll(1);\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subscription_1 = require(\"../Subscription\");\nvar Observable_1 = require(\"../Observable\");\nvar Subject_1 = require(\"../Subject\");\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = /** @class */ (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = /** @class */ (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject());\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = /** @class */ (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = /** @class */ (function (_super) {\n    __extends(GroupedObservable, _super);\n    /** @deprecated Do not construct this type. Internal use only */\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = /** @class */ (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = /** @class */ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /** @class */ (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeMap_1 = require(\"./mergeMap\");\nvar identity_1 = require(\"../util/identity\");\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, concurrent);\n}\nexports.mergeAll = mergeAll;\n//# sourceMappingURL=mergeAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar map_1 = require(\"./map\");\nvar from_1 = require(\"../observable/from\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'function') {\n        // DEPRECATED PATH\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from_1.from(project(a, i)).pipe(map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = /** @class */ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = /** @class */ (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Notification_1 = require(\"../Notification\");\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = /** @class */ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = /** @class */ (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    /** @nocollapse */\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = /** @class */ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nexports.refCount = refCount;\nvar RefCountOperator = /** @class */ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /** @class */ (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=refCount.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscription_1 = require(\"../Subscription\");\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = /** @class */ (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncAction_1 = require(\"./AsyncAction\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = /** @class */ (function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nexports.AnimationFrameAction = AnimationFrameAction;\n//# sourceMappingURL=AnimationFrameAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar AnimationFrameScheduler = /** @class */ (function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\n//# sourceMappingURL=AnimationFrameScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Immediate_1 = require(\"../util/Immediate\");\nvar AsyncAction_1 = require(\"./AsyncAction\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = /** @class */ (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate_1.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar AsapScheduler = /** @class */ (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Action_1 = require(\"./Action\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = /** @class */ (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Scheduler_1 = require(\"../Scheduler\");\nvar AsyncScheduler = /** @class */ (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler_1.Scheduler.now; }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         * @deprecated internal use only\n         */\n        _this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         * @deprecated internal use only\n         */\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncAction_1 = require(\"./AsyncAction\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = /** @class */ (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar QueueScheduler = /** @class */ (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncAction_1 = require(\"./AsyncAction\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar VirtualTimeScheduler = /** @class */ (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = /** @class */ (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AnimationFrameAction_1 = require(\"./AnimationFrameAction\");\nvar AnimationFrameScheduler_1 = require(\"./AnimationFrameScheduler\");\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.animationFrame.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsapAction_1 = require(\"./AsapAction\");\nvar AsapScheduler_1 = require(\"./AsapScheduler\");\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n//# sourceMappingURL=asap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncAction_1 = require(\"./AsyncAction\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueueAction_1 = require(\"./QueueAction\");\nvar QueueScheduler_1 = require(\"./QueueScheduler\");\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = /** @class */ (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = /** @class */ (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexports.Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /** @class */ (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var _this = _super.call(this, 'object unsubscribed') || this;\n        _this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);\n        return _this;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = /** @class */ (function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        _this.name = 'TimeoutError';\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction identity(x) {\n    return x;\n}\nexports.identity = identity;\n//# sourceMappingURL=identity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./isArray\");\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n//# sourceMappingURL=isNumeric.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nfunction isObservable(obj) {\n    return !!obj && (obj instanceof Observable_1.Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\nexports.isObservable = isObservable;\n//# sourceMappingURL=isObservable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar InnerSubscriber_1 = require(\"../InnerSubscriber\");\nvar subscribeTo_1 = require(\"./subscribeTo\");\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    return subscribeTo_1.subscribeTo(result)(destination);\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserProfileComponent } from '../user/user-profile/user-profile.component';\r\nimport { DesignsEditorComponent } from './designs-editor/designs-editor.component';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { DesignsEditorFormComponent } from './designs-editor-form/designs-editor-form.component';\r\nimport { ProductsEditorComponent } from './products-editor/products-editor.component';\r\nimport { ProductsComponent } from '../products/products.component';\r\nimport { ProductsEditorFormComponent } from './products-editor-form/products-editor-form.component';\r\n\r\nconst dashboardRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DesignsEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: '',\r\n        component: DashboardSidenavComponent,\r\n        outlet: 'dashboardSidenav',\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'tmp',\r\n        component: ProductCreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'products_editor',\r\n        component: ProductsEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'products_editor_edit/:parentCategory_id/:parentCategoryName/:_id',\r\n        component: ProductsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor',\r\n        component: DesignsEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor_edit/:_id',\r\n        component: DesignsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'designs_editor_new',\r\n        component: DesignsEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      // {\r\n      //   path: 'product-create',\r\n      //   component: ProductCreateComponent,\r\n      // },\r\n      {\r\n        path: 'profile',\r\n        component: UserProfileComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(\r\n      dashboardRoutes\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class DashboardRoutingModule {}\r\n","    <!--<mat-toolbar class=\"mat-elevation-z2\">-->\r\n      <mat-toolbar-row *ngFor=\"let dashboardSidenavItem of dashboardSidenavItems\" class=\"sidenav-mat-toolbar-row\">\r\n        <a [routerLinkActive]=\"['accent-background']\" [routerLinkActiveOptions]=\"{exact: true}\" mat-button\r\n           [routerLink]=\"['/dashboard', dashboardSidenavItem._id]\">{{dashboardSidenavItem.name}}</a>\r\n      </mat-toolbar-row>\r\n    <!--</mat-toolbar>-->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { Router } from '@angular/router';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-sidenav',\r\n  templateUrl: './dashboard-sidenav.component.html',\r\n  styleUrls: ['./dashboard-sidenav.component.scss']\r\n})\r\nexport class DashboardSidenavComponent implements OnInit {\r\ndashboardSidenavItems: ICatalog;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private catalogService: CatalogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.catalogService.getDescendants('dashboard')\r\n      .subscribe(menuItems => {\r\n        this.dashboardSidenavItems = menuItems.data;\r\n        console.log('dashboardSidenavItems', this.dashboardSidenavItems);\r\n      });\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav  class=\"sidenav\" #sidenav mode=\"side\" [opened]=\"media.isActive('gt-sm')\">\r\n    <!--<p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>-->\r\n    <!--<p>-->\r\n\r\n    <!--<div class=\"menu-button\" fxShow=\"true\" fxHide.gt-sm=\"true\">-->\r\n      <!--<button mat-button (click)=\"sidenav.toggle()\">-->\r\n        <!--<mat-icon>arrow_left</mat-icon>-->\r\n      <!--</button>-->\r\n    <!--</div>-->\r\n    <div class=\"container-sidenav\">\r\n      <mat-toolbar class=\"mat-elevation-z2\">\r\n        <mat-toolbar-row fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"sidenav-mat-toolbar-row\">\r\n          <a  mat-button (click)=\"sidenav.toggle()\"><mat-icon>arrow_left</mat-icon></a>\r\n        </mat-toolbar-row>\r\n        <router-outlet name=\"dashboardSidenav\"></router-outlet>\r\n      </mat-toolbar>\r\n    </div>\r\n      <!--<mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">-->\r\n        <!--<label>Mode:</label>-->\r\n        <!--<mat-radio-button value=\"over\">Over</mat-radio-button>-->\r\n        <!--<mat-radio-button value=\"side\">Side</mat-radio-button>-->\r\n        <!--<mat-radio-button value=\"push\">Push</mat-radio-button>-->\r\n      <!--</mat-radio-group>-->\r\n    <!--</p>-->\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <!--<p><button mat-button (click)=\"sidenav.toggle()\" >Меню</button></p>-->\r\n    <!--<p>-->\r\n\r\n    <!--*ngIf=\"!sidenav.opened\"-->\r\n    <div *ngIf=\"!sidenav.opened\" class=\"menu-button\" fxShow=\"true\" fxHide.gt-sm=\"true\">\r\n    <button mat-button (click)=\"sidenav.toggle()\">\r\n      <mat-icon>arrow_right</mat-icon>\r\n    </button>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n      <!--<mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">-->\r\n        <!--<label>Mode:</label>-->\r\n        <!--<mat-radio-button value=\"over\">Over</mat-radio-button>-->\r\n        <!--<mat-radio-button value=\"side\">Side</mat-radio-button>-->\r\n        <!--<mat-radio-button value=\"push\">Push</mat-radio-button>-->\r\n      <!--</mat-radio-group>-->\r\n    <!--</p>-->\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  public state = '';\r\n\r\n  constructor(public media: ObservableMedia) { }\r\n\r\n  ngOnInit() {\r\n    // this.media.asObservable()\r\n    //   .subscribe((change: MediaChange) => {\r\n    //     this.state = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\r\n    //   });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserModule } from '../user/user.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CloudinaryModule } from '@cloudinary/angular-5.x';\r\nimport { DesignsEditorComponent } from './designs-editor/designs-editor.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DesignsEditorFormComponent } from './designs-editor-form/designs-editor-form.component';\r\nimport { ProductsEditorComponent } from './products-editor/products-editor.component';\r\nimport { ProductsEditorFormComponent } from './products-editor-form/products-editor-form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    DashboardRoutingModule,\r\n    UserModule,\r\n    CloudinaryModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    ProductCreateComponent,\r\n    DashboardComponent,\r\n    DashboardSidenavComponent,\r\n    DesignsEditorComponent,\r\n    DesignsEditorFormComponent,\r\n    ProductsEditorComponent,\r\n    ProductsEditorFormComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","<p>Design editor form</p>\r\n<p>Edited id  {{edited_id}}</p>\r\n<p>editMode  {{editMode}}</p>\r\n\r\n<div class=\"row\" fxLayout=\"row\">\r\n  <div class=\"cell\" fxFlex=\"100\">\r\n    <div class=\"item full-width-container\">\r\n      <mat-card  class=\"form-block\">\r\n        <mat-card-header></mat-card-header>\r\n        <mat-card-title></mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"cell\">\r\n                <h2 class=\"mat-h2\">Редагувати дизайн</h2>\r\n              </div>\r\n            </div>\r\n\r\n            <form [formGroup]=\"designForm\" #f=\"ngForm\" (submit)=\"onDesignFormSubmit()\" novalidate>\r\n\r\n              <div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n                <div class=\"container\" fxFlex.gt-xs=\"50\">\r\n                  <div class=\"row\" fxLayout=\"column\">\r\n\r\n                    <div class=\"cell\" fxFlex=\"100\">\r\n                        <mat-form-field>\r\n                          <input matInput placeholder=\"Дизайн\" formControlName=\"_id\" required>\r\n                          <mat-error\r\n                            *ngIf=\"(designForm.get('_id').errors?.minlength ||\r\n                      designForm.get('_id').errors?.maxlength ||\r\n                      designForm.get('_id').errors?.required) &&\r\n                      designForm.get('_id').touched\">\r\n                            Довжина повинна бути від 7 до 12 символів\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"cell\" fxFlex=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-select placeholder=\"Структура\" formControlName=\"structure\" required>\r\n                          <mat-option *ngFor=\"let struct of config.designStructure\" [value]=\"struct\">\r\n                            {{struct}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                          *ngIf=\"designForm.get('structure').errors?.required &&\r\n                            designForm.get('structure').touched\">\r\n                          Виберіть категорію\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"cell\" fxFlex.gt-xs=\"50\">\r\n                    <div class=\"preview-img-wrapper\">\r\n                      <img *ngIf=\"designForm.get('image').value\"\r\n                           src=\"{{config.imgPath + config.cloudinary.cloud_name + '/c_fill,h_180,w_180/' + designForm.get('image').value + '.jpg'}}\"\r\n                           alt=\"designImage\">\r\n                      <img *ngIf=\"!designForm.get('image').value\"\r\n                           src=\"{{config.defaultProductImgPath}}\" alt=\"designImage\">\r\n                      <input #inputFile type=\"file\" (change)=\"addPictures($event)\"\r\n                             accept=\".jpg, .jpe, .jpeg, .bmp, .webp, .png\" style=\"display:none;\">\r\n                      <div class=\"preview-div-processing\">\r\n                        <div *ngIf=\"processingLoadFile\" class=\"spinner-wrapper\">\r\n                          <mat-spinner [diameter]=\"24\"></mat-spinner>\r\n                        </div>\r\n\r\n\r\n                        <div *ngIf=\"!processingLoadFile\" class=\"button-wrapper\">\r\n                          <button mat-mini-fab color=\"primary\" type=\"button\"\r\n                                  (click)=\"inputFile.click();\r\n                                  designForm.get('_id').disable();\r\n                                  designForm.get('structure').disable();\"\r\n                                  [disabled]=\"processingLoadFile || designForm.get('_id').invalid\">\r\n                            <mat-icon *ngIf=\"!designForm.get('image').value\">add</mat-icon>\r\n                            <mat-icon *ngIf=\"designForm.get('image').value\">redo</mat-icon>\r\n                          </button>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n              </div>\r\n              <div class=\"submit-button-wrapper\" fxLayout=\"row\">\r\n               <div>\r\n                 <button *ngIf=\"editMode\" mat-raised-button color=\"primary\" class=\"full-width\"\r\n                         [disabled]=\"!designForm.valid || processingLoadFile\">Зберегти</button>\r\n                 <button *ngIf=\"!editMode\" mat-raised-button color=\"primary\" class=\"full-width\"\r\n                         [disabled]=\"!designForm.valid || processingLoadFile\">Створити</button>\r\n               </div>\r\n\r\n                <div fxFlex></div>\r\n                <div>\r\n                  <button mat-raised-button  type=\"button\" (click)=\"goBack()\" class=\"full-width\"\r\n                          [disabled]=\"processingLoadFile\">Повернутись</button>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { config } from '../../../app.config';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { IDesign } from '../../../interfaces/interface';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-designs-editor-form',\r\n  templateUrl: './designs-editor-form.component.html',\r\n  styleUrls: ['./designs-editor-form.component.scss']\r\n})\r\nexport class DesignsEditorFormComponent implements OnInit {\r\n  @ViewChild('f') designFormDirective: FormGroupDirective;\r\n  config = config;\r\n  designForm: FormGroup;\r\n  processingLoadFile = false;\r\n  editMode = false;\r\n  edited_id: string;\r\n  design: IDesign;\r\n\r\n  constructor(\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private productService: ProductService,\r\n    private designService: DesignService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.designForm = new FormGroup({\r\n      _id: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(7),\r\n        Validators.maxLength(12),\r\n      ]),\r\n      structure: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      image: new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    });\r\n\r\n    // this.route.paramMap\r\n    //   .subscribe(paramMap => {\r\n    //     if (paramMap.get('_id')) {\r\n    //       // this.edited_id = paramMap.get('_id');\r\n    //       // this.editMode = true;\r\n    //\r\n    //     }\r\n    //   });\r\n\r\n\r\n    this.route.paramMap.pipe(\r\n      mergeMap(paramMap => {\r\n          this.edited_id = paramMap.get('_id');\r\n          console.log('edited design _id', this.edited_id);\r\n\r\n          if (!this.edited_id) {\r\n            return of(null);\r\n          }\r\n          return this.designService.getDesignById(this.edited_id);\r\n        }),\r\n      )\r\n\r\n      .subscribe(result => {\r\n        if (result) {\r\n          // this.edited_id = paramMap.get('_id');\r\n          this.editMode = true;\r\n          console.log('true', result);\r\n          this.designForm.patchValue(result.data);\r\n          this.designForm.get('_id').disable();\r\n        } else {\r\n          console.log('false');\r\n        }\r\n      });\r\n  }\r\n\r\n  addPictures(event) {\r\n    this.processingLoadFile = true;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadFile = false;\r\n      if (!this.editMode) {\r\n        this.designForm.get('_id').enable();\r\n      }\r\n      this.designForm.get('structure').enable();\r\n    } else {\r\n\r\n      // this.designForm.get('image').setValue(file);\r\n      console.log('added file', this.designForm.get('image').value);\r\n      this.designService.designAddImage(file, this.designForm.get('_id').value)\r\n        .subscribe(result => {\r\n            this.designForm.get('image').setValue(result.data);\r\n            this.processingLoadFile = false;\r\n            if (!this.editMode) {\r\n              this.designForm.get('_id').enable();\r\n            }\r\n            this.designForm.get('structure').enable();\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.processingLoadFile = false;\r\n            if (!this.editMode) {\r\n              this.designForm.get('_id').enable();\r\n            }\r\n            this.designForm.get('structure').enable();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onDesignFormSubmit() {\r\n    this.design = <IDesign>{\r\n      _id: this.designForm.getRawValue()._id, // raw because may be disabled\r\n      image: this.designForm.get('image').value,\r\n      structure: this.designForm.get('structure').value,\r\n    };\r\n\r\n    console.log('design form submit', this.design);\r\n    this.designService.designUpsert(this.design)\r\n      .subscribe(result => {\r\n          this.matSnackBar.open(result.message, '',\r\n            {duration: 3000});\r\n          this.resetForm();\r\n          if (this.editMode) {\r\n            this.goBack();\r\n          }\r\n        },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  resetForm() {\r\n    this.designFormDirective.resetForm();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-designs-editor',\r\n  templateUrl: './designs-editor.component.html',\r\n  styleUrls: ['./designs-editor.component.scss']\r\n})\r\nexport class DesignsEditorComponent implements OnInit {\r\n  designs: any;\r\n  constructor(\r\n    private designService: DesignService,\r\n    private sharedService: SharedService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.designService.getDesigns()\r\n      .subscribe(result => this.designs = result.data,\r\n        err => console.log('помилка завантаження дизайнів', err)\r\n      );\r\n\r\n    this.sharedService.getSharingEvent().pipe(\r\n      mergeMap(event => {\r\n          if (event[0] !== 'updateDesigns') {\r\n            return of (null);\r\n          } else {\r\n            return this.designService.getDesigns();\r\n          }\r\n      })\r\n    )\r\n      .subscribe(result => this.designs = result.data,\r\n        err => console.log('помилка завантаження дизайнів', err)\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\" fxLayout=\"row\">\r\n  <div class=\"cell\" fxFlex=\"100\">\r\n    <div class=\"item full-width-container\">\r\n      <mat-card  class=\"form-block\">\r\n        <mat-card-header></mat-card-header>\r\n        <mat-card-title></mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"cell\">\r\n                <h2 class=\"mat-h2\">Новий виріб</h2>\r\n              </div>\r\n            </div>\r\n\r\n          <form [formGroup]=\"productCreateForm\" #f=\"ngForm\" (submit)=\"onProductCreateSubmit()\">\r\n\r\n            <div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n              <div class=\"cell\">\r\n                <button type=\"button\" mat-raised-button (click)=\"addCategory()\">Додати категорію</button>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n\r\n                <div formArrayName=\"categories\" class=\"cell\" fxFlex.gt-xs=\"50\"\r\n                     *ngFor=\"let categoryBlock of productCreateForm.get('categories')['controls']; let i = index\">\r\n                  <!--<div [formGroupName]=\"i\">-->\r\n                    <mat-form-field>\r\n                      <mat-select placeholder=\"Категорія\" formControlName=\"{{i}}\" required\r\n                                  (selectionChange)=\"onSelectCategory($event)\">\r\n                        <mat-optgroup *ngFor=\"let category of categories\" [label]=\"category.name\">\r\n                          <mat-option *ngIf=\"category.numOfChildren === 0\" [value]=\"category._id\">\r\n                            {{ category.name }}\r\n                          </mat-option>\r\n                          <mat-option *ngFor=\"let subCategory of category.children\" [value]=\"subCategory._id\">\r\n                            {{ subCategory.name }}\r\n                          </mat-option>\r\n                        </mat-optgroup>\r\n                      </mat-select>\r\n                      <mat-hint *ngIf=\"i > 0\" align=\"end\" class=\"remove-field\" (click)=\"removeCategory(i)\">Видалити категорію</mat-hint>\r\n                      <mat-error *ngIf=\"productCreateForm.get('categories').at(i).errors?.required &&\r\n                        productCreateForm.get('categories').at(i).touched\">\r\n                        Виберіть категорію\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  <!--</div>-->\r\n                </div>\r\n\r\n              <div class=\"cell\" fxFlex.gt-xs=\"50\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Найменування\" formControlName=\"name\" required>\r\n                    <mat-error\r\n                      *ngIf=\"(productCreateForm.get('name').errors?.minlength ||\r\n                      productCreateForm.get('name').errors?.maxlength ||\r\n                      productCreateForm.get('name').errors?.required) &&\r\n                      productCreateForm.get('name').touched\">\r\n                      Довжина повинна бути від 4 до 30 символів\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"cell\" fxLayout=\"row\" fxFlex=\"50\">\r\n\r\n              <div class=\"item\" fxFlex=\"30\">\r\n                <div formGroupName=\"dimensions\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Ширина\" formControlName=\"width\">\r\n                    <span matSuffix>см</span>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('dimensions.width').errors?.maxlength &&\r\n                      productCreateForm.get('dimensions').get('width').touched\">\r\n                      Використовуйте не більше ніж три символа\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('dimensions').get('width').errors?.pattern &&\r\n                      productCreateForm.get('dimensions').get('width').touched\">\r\n                      Використовуйте тількі цифри\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"item\" fxFlex=\"30\">\r\n                <div formGroupName=\"dimensions\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Висота\" formControlName=\"height\">\r\n                    <span matSuffix>см</span>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('dimensions.height').errors?.maxlength &&\r\n                      productCreateForm.get('dimensions').get('height').touched\">\r\n                      Використовуйте не більше ніж три символа\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('dimensions').get('height').errors?.pattern &&\r\n                      productCreateForm.get('dimensions').get('height').touched\">\r\n                      Використовуйте тількі цифри\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n                <div class=\"item\" fxFlex=\"40\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Артикул\" formControlName=\"sku\" required>\r\n                    <mat-error\r\n                      *ngIf=\"(productCreateForm.get('sku').errors?.minlength ||\r\n                        productCreateForm.get('sku').errors?.maxlength ||\r\n                        productCreateForm.get('sku').errors?.required) &&\r\n                        productCreateForm.get('sku').touched\">\r\n                      Довжина повинна бути 6 символів\r\n                    </mat-error>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('sku').errors?.pattern &&\r\n                      productCreateForm.get('sku').touched\">\r\n                      Використовуйте тількі цифри і букви\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n\r\n              <div class=\"cell\" fxLayout=\"row\" fxFlex=\"50\">\r\n\r\n                <div class=\"item \" fxFlex=\"30\">\r\n                  <!--{{productCreateForm.get('price').errors | json}}-->\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Ціна\" formControlName=\"price\" >\r\n                    <span matSuffix>грн</span>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('price').errors?.pattern &&\r\n                      productCreateForm.get('price').touched\">\r\n                      Використовуйте тількі цифри більші 0\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"item\" fxFlex=\"30\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Знижка\" formControlName=\"discount\" >\r\n                    <span matSuffix>%</span>\r\n                    <mat-error\r\n                      *ngIf=\"productCreateForm.get('discount').errors?.pattern &&\r\n                      productCreateForm.get('discount').touched\">\r\n                      Використовуйте тількі цифри більші 0\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"item\" fxFlex=\"40\">\r\n                  <div class=\"flex-left-container\">\r\n                    <mat-checkbox class=\"flex-left-item\" formControlName=\"onMainPage\">На головній</mat-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"cell\" fxFlex.gt-xs=\"50\">\r\n                <mat-form-field>\r\n                  <textarea matInput placeholder=\"Опис\" formControlName=\"description\" required></textarea>\r\n                  <mat-error\r\n                    *ngIf=\"(productCreateForm.get('description').errors?.minlength ||\r\n                      productCreateForm.get('description').errors?.maxlength ||\r\n                      productCreateForm.get('description').errors?.required) &&\r\n                      productCreateForm.get('description').touched\">\r\n                    Довжина повинна бути від 4 до 200 символів\r\n                  </mat-error>\r\n                  <mat-error\r\n                    *ngIf=\"productCreateForm.get('description').errors?.pattern &&\r\n                      productCreateForm.get('description').touched\">\r\n                    Використовуйте тількі цифри і букви\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n              <div class=\"row\" fxLayout=\"row\" fxFlex=\"100\">\r\n                <div formArrayName=\"files\" class=\"cell\" fxFlex=\"25\" fxFlex.lt-md=\"50\"\r\n                     *ngFor=\"let fileBlock of productCreateForm.get('files')['controls']; let i = index\">\r\n\r\n\r\n                  <div class=\"preview-img-wrapper\">\r\n                    <cl-image *ngIf=\"processingLoadFile !== i\"\r\n                              public-id=\"{{productCreateForm.get('files').value[i] || defaultProductImgPath}}\"\r\n                              secure=\"true\">\r\n                      <cl-transformation width=\"180\" height=\"180\" crop=\"thumb\">\r\n                                         <!--radius=\"20\">-->\r\n                      </cl-transformation>\r\n                      <!--<cl-transformation overlay=\"cloudinary_icon\" gravity=\"south_east\" x=\"5\" y=\"5\" width=\"50\" opacity=\"60\" effect=\"brightness:200\">-->\r\n                      <!--</cl-transformation>-->\r\n                      <!--<cl-transformation angle=\"10\">-->\r\n                      <!--</cl-transformation>-->\r\n                    </cl-image>\r\n\r\n                    <!--<img *ngIf=\"processingLoadFile !== i\" src=\"{{'https://res.cloudinary.com/hmm6pjfgk/image/upload/' +-->\r\n                    <!--productCreateForm.get('files').value[i]}}\" alt=\"productImage\">-->\r\n                    <img *ngIf=\"processingLoadFile === i\" src=\"{{productCreateForm.get('files').value[i]}}\" alt=\"productImage\">\r\n                    <div *ngIf=\"processingLoadFile === i\" class=\"preview-div-processing\">\r\n                      <div class=\"spinner-wrapper\">\r\n                        <mat-spinner [diameter]=\"24\"></mat-spinner>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <p *ngIf=\"processingLoadFile !== i\" class=\"remove-field text-center\" (click)=\"removeFile(i)\">\r\n                    Видалити зображення</p>\r\n\r\n                </div>\r\n                <div class=\"cell\" fxFlex=\"25\" fxFlex.lt-md=\"50\"\r\n                     *ngIf=\"productCreateForm.get('files').value.length < 4\">\r\n                  <div class=\"preview-img-wrapper\">\r\n                    <img src=\"{{defaultProductImgPath}}\" alt=\"productImage\">\r\n                    <input #inputFile type=\"file\" (change)=\"addPictures($event)\"\r\n                           accept=\".jpg, .jpe, .jpeg, .bmp, .webp, .png\" style=\"display:none;\">\r\n\r\n                    <div class=\"preview-div-processing\">\r\n                      <div class=\"button-wrapper\">\r\n                        <button mat-mini-fab color=\"primary\" type=\"button\"\r\n                                (click)=\"inputFile.click();\r\n                                this.productCreateForm.get('sku').disable();\r\n                                this.productCreateForm.get('categories').at(0).disable();\"\r\n                                [disabled]=\"!productCreateForm.get('sku').disabled &&\r\n                                !productCreateForm.get('sku').valid || processingLoadFile >= 0\">\r\n                          <mat-icon>add</mat-icon>\r\n                        </button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"submit-button-wrapper\">\r\n              <!--<span fxFlex></span>-->\r\n              <button *ngIf=\"!editMode\" mat-raised-button class=\"full-width\" color=\"primary\"\r\n                      [disabled]=\"!productCreateForm.valid || processingLoadFile >= 0\">Створити</button>\r\n              <button *ngIf=\"editMode\" mat-raised-button class=\"full-width\" color=\"primary\"\r\n                      [disabled]=\"!productCreateForm.valid || processingLoadFile >= 0\">Зберегти</button>\r\n            </div>\r\n\r\n          </form>\r\n          </div>\r\n\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","\r\nimport {forkJoin as observableForkJoin,  Observable } from 'rxjs';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { ProductService } from '../../../services/product.service';\r\n\r\nimport { ValidateService } from '../../../services/validate.service';\r\nimport { config } from '../../../app.config';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-create',\r\n  templateUrl: './product-create.component.html',\r\n  styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent implements OnInit {\r\n  productCreateForm: FormGroup;\r\n  product: IProduct;\r\n  categories: any;\r\n  processingLoadFile = -1;\r\n  defaultProductImgPath = config.defaultProductImgPath;\r\n  editMode = false;\r\n  edited_id: string;\r\n  /**\r\n   * directive for reset form (invalid status)\r\n   */\r\n  @ViewChild('f') productCreateFormDirective: FormGroupDirective;\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private productService: ProductService,\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productCreateForm = new FormGroup({\r\n      categories : new FormArray([this.initCategories()]),\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(30),\r\n      ]),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(150),\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ,.\"@%-_\\' ]+'),\r\n      ]),\r\n      dimensions: new FormGroup({\r\n        width: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n        height: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n      }),\r\n      sku: new FormControl({value: '', disabled: false}, [\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ]+'),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(6),\r\n      ]),\r\n      price: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      discount: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      files: new FormArray([]),\r\n      onMainPage: new FormControl('', [\r\n        // Validators.required,\r\n      ]),\r\n    });\r\n\r\n    this.catalogService.getAllDescendants('products', 0)\r\n      .subscribe(categories => {\r\n        this.categories = categories.data;\r\n      },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n\r\n    this.route.paramMap\r\n      .subscribe(paramMap => {\r\n        if (paramMap.get('_id')) {\r\n          this.edited_id = paramMap.get('_id');\r\n          this.editMode = true;\r\n\r\n          this.productService.getProductById(this.edited_id)\r\n            .subscribe(product => {\r\n\r\n              for (let i = 1; i < product.data.categories.length; i++) {\r\n                this.addCategory();\r\n              }\r\n\r\n              for (let i = 0; i < product.data.files.length; i++) {\r\n                this.addFile();\r\n              }\r\n\r\n              this.productCreateForm.patchValue(product.data);\r\n\r\n          },\r\n            err => console.log('Помилка завантаження товару для редагування', err)\r\n        )}\r\n      });\r\n  }\r\n\r\n  resetForm() {\r\n    if (this.productCreateFormDirective) {\r\n\r\n      // enabling disabled fields\r\n      this.productCreateForm.get('sku').enable();\r\n      this.productCreateForm.get('categories')['controls'][0].enable();\r\n\r\n      // deleting needless controls\r\n      // categories controls array has one item on init\r\n      for (let i = this.productCreateForm.get('categories')['controls'].length; i > 1 ; i--) {\r\n        this.removeCategory(i - 1);\r\n      }\r\n      // files controls array don't has elems on init\r\n      for (let i = this.productCreateForm.get('files')['controls'].length; i > 0 ; i--) {\r\n        this.removeFile(i - 1);\r\n      }\r\n      this.productCreateFormDirective.resetForm();\r\n    }\r\n  }\r\n\r\n  addPictures(event) {\r\n      this.processingLoadFile = this.productCreateForm.get('files').value.length;\r\n      const file = event.target.files[0];\r\n      const checkFile = this.productService.checkFile(file);\r\n\r\n\r\n      if (!checkFile.success) {\r\n        this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        this.processingLoadFile = -1;\r\n      } else {\r\n        const filesLinks = this.productCreateForm.get('files').value;\r\n        filesLinks.push(config.defaultProductImgPath);\r\n        this.addFile();\r\n        this.productCreateForm.get('files').setValue(filesLinks);\r\n        this.productService.productAddImage(file, this.productCreateForm.get('sku').value)\r\n          .subscribe(result => {\r\n              // this.previewProductImages.pop();\r\n              filesLinks.pop();\r\n              filesLinks.push(result.data);\r\n              this.productCreateForm.get('files').setValue(filesLinks);\r\n              console.log('this.productCreateForm.get(\\'files\\').value', this.productCreateForm.get('files').value);\r\n              // this.previewProductImages = filesLinks;\r\n              // console.log('this.previewProductImages', this.previewProductImages);\r\n              console.log(result);\r\n              this.processingLoadFile = -1;\r\n            },\r\n            err => {\r\n              this.matSnackBar.open(err.error || 'Помилка', '',\r\n                {duration: 3000, panelClass: 'snack-bar-danger'});\r\n              this.removeFile(this.productCreateForm.get('files').value.length - 1);\r\n              // this.previewProductImages.pop();\r\n              filesLinks.pop();\r\n              this.processingLoadFile = -1;\r\n\r\n            }\r\n          );\r\n      }\r\n  }\r\n\r\n  onProductCreateSubmit() {\r\n    // remove duplicates\r\n    const uniqueCategories = [];\r\n    this.productCreateForm.getRawValue().categories\r\n      .forEach((item) => {\r\n        if (uniqueCategories.indexOf(item) === -1) {\r\n          uniqueCategories.push(item);\r\n        }\r\n    });\r\n\r\n    this.product = <IProduct>{\r\n      categories: uniqueCategories,\r\n      sku: this.productCreateForm.getRawValue().sku, // raw because may be disabled\r\n      name: this.productCreateForm.get('name').value,\r\n      price: this.productCreateForm.get('price').value,\r\n      discount: this.productCreateForm.get('discount').value,\r\n      files : this.productCreateForm.get('files').value,\r\n      description : this.productCreateForm.get('description').value,\r\n      onMainPage: this.productCreateForm.get('onMainPage').value || false,\r\n      dimensions: {\r\n        width: this.productCreateForm.get('dimensions.width').value,\r\n        height: this.productCreateForm.get('dimensions.height').value,\r\n      }\r\n    };\r\n\r\n    if (this.editMode) {\r\n      // edit\r\n      this.product._id = this.edited_id;\r\n      this.productService.productEdit(this.product)\r\n        .subscribe(result => {\r\n            this.matSnackBar.open(result.message, '',\r\n              {duration: 3000});\r\n            this.resetForm();\r\n            this.editMode = false;\r\n          },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n        );\r\n\r\n    } else {\r\n      this.productService.productCreate(this.product)\r\n        .subscribe(result => {\r\n            this.matSnackBar.open(result.message, '',\r\n              {duration: 3000});\r\n            this.resetForm();\r\n          },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n        );\r\n    }\r\n\r\n  }\r\n\r\n  onSelectCategory(event) {\r\n    if (event.source.ngControl.name === '0') {this.createSku(event.value)}\r\n  }\r\n\r\n  createSku(category) {\r\n\r\n    const getPrefix$ = this.catalogService.getPrefix(category);\r\n    const getSkuList$ = this.productService.getSkuList(category);\r\n\r\n    observableForkJoin(getPrefix$, getSkuList$).subscribe(result => {\r\n      const prefix = result[0].data.prefix;\r\n      const skuList = result[1].data\r\n        .map(item => item.sku) // create [] from {}\r\n        .filter(item => item.slice(0, 2) === prefix) // take elems with needed prefix\r\n        .map(item => +item.slice(2)); // concat prefix, take only numbers\r\n\r\n        console.log('skuList', skuList);\r\n        let freeNumber = 1;\r\n        for (let i = 0; i < skuList.length; i++) {\r\n          if (skuList[i] - (i + 1) >= 1) {\r\n            freeNumber = i + 1;\r\n            break;\r\n          }\r\n          if (i === skuList.length - 1) {\r\n            freeNumber = skuList.length + 1;\r\n          }\r\n        }\r\n        let sku = freeNumber.toString();\r\n        while (sku.length < 4) {\r\n          sku = '0' + sku;\r\n        }\r\n        sku = prefix + sku;\r\n        this.productCreateForm.patchValue({sku});\r\n    },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  addCategory() {\r\n    const control = <FormArray>this.productCreateForm.get('categories');\r\n    control.push(this.initCategories());\r\n  }\r\n\r\n  removeCategory(i: number) {\r\n    const control = <FormArray>this.productCreateForm.get('categories');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initCategories() {\r\n    return new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    ;\r\n  }\r\n\r\n  addFile() {\r\n    const control = <FormArray>this.productCreateForm.get('files');\r\n    control.push(this.initFiles());\r\n  }\r\n\r\n  removeFile(i: number) {\r\n    const control = <FormArray>this.productCreateForm.get('files');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initFiles() {\r\n    return new FormControl('file', [\r\n        // Validators.required,\r\n      ]);\r\n  }\r\n}\r\n","<div class=\"row\" fxLayout=\"row\">\r\n  <div class=\"cell\" fxFlex=\"100\">\r\n    <div class=\"item full-width-container\">\r\n      <mat-card  class=\"form-block\">\r\n        <mat-card-header></mat-card-header>\r\n        <mat-card-title>\r\n          <h2 *ngIf=\"editMode\" class=\"mat-h2\">Редагувати колекцію {{productForm.get('name').value}}</h2>\r\n          <h2 *ngIf=\"!editMode\" class=\"mat-h2\">Редагувати колекцію {{productForm.get('name').value}}</h2>\r\n        </mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"cell\">\r\n                <p>{{parentCategory_id}} - {{parentCategoryName}}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <form [formGroup]=\"productForm\" #f=\"ngForm\" (submit)=\"onProductFormSubmit()\" novalidate>\r\n\r\n\r\n\r\n              <div class=\"row\" fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n                    <div class=\"cell\" fxFlex=\"33\">\r\n                      <mat-form-field>\r\n                        <input matInput placeholder=\"Ідентифікатор\" formControlName=\"_id\" required>\r\n                        <mat-error\r\n                          *ngIf=\"(productForm.get('_id').errors?.minlength ||\r\n                                  productForm.get('_id').errors?.maxlength ||\r\n                                  productForm.get('_id').errors?.required) &&\r\n                                  productForm.get('_id').touched\">\r\n                          Довжина повинна бути від 3 до 25 символів\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"cell\" fxFlex=\"33\">\r\n                      <mat-form-field>\r\n                        <input matInput placeholder=\"Назва\" formControlName=\"name\" required>\r\n                        <mat-error\r\n                          *ngIf=\"(productForm.get('name').errors?.minlength ||\r\n                                  productForm.get('name').errors?.maxlength ||\r\n                                  productForm.get('name').errors?.required) &&\r\n                                  productForm.get('name').touched\">\r\n                          Довжина повинна бути від 3 до 50 символів\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"cell\" fxFlex=\"33\">\r\n                      <mat-form-field>\r\n                        <mat-select placeholder=\"Публікувати\" formControlName=\"display\" required>\r\n                          <mat-option [value]=\"true\">\r\n                            Так\r\n                          </mat-option>\r\n                          <mat-option [value]=\"false\">\r\n                            Ні\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                          *ngIf=\"productForm.get('display').errors?.required &&\r\n                                  productForm.get('display').touched\">\r\n                          Обов'язкове поле\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n\r\n\r\n                <div class=\"cell\" fxFlex=\"33\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Порядок\" formControlName=\"order\" required>\r\n                    <mat-error\r\n                      *ngIf=\"productForm.get('order').errors?.required &&\r\n                                  productForm.get('order').touched\">\r\n                      Обов'язкове поле\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"cell\" fxFlex=\"33\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Опис\" formControlName=\"description\" required>\r\n                    <mat-error\r\n                      *ngIf=\"(productForm.get('description').errors?.minlength ||\r\n                                  productForm.get('description').errors?.maxlength ||\r\n                                  productForm.get('description').errors?.required) &&\r\n                                  productForm.get('description').touched\">\r\n                      Довжина повинна бути від 3 до 500 символів\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n                <div class=\"row\" fxLayout=\"row\" fxFlex=\"100\">\r\n                  <div class=\"cell\">\r\n                    <h3 class=\"mat-h3\">Головні зображення колекції</h3>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\" fxLayout=\"row\" fxFlex=\"100\">\r\n                  <div formArrayName=\"assets\" class=\"cell\" fxFlex=\"25\" fxFlex.lt-md=\"50\"\r\n                       *ngFor=\"let asset of productForm.get('assets')['controls']; let i = index\">\r\n                    <div *ngIf=\"productForm.get('assets').value[i]\" class=\"preview-img-wrapper\">\r\n                      <img src=\"{{config.imgPath + config.cloudinary.cloud_name + '/c_fill,h_180,w_180/' + productForm.get('assets').value[i] + '.jpg'}}\"\r\n                           alt=\"productImage\">\r\n                      <div *ngIf=\"processingLoadAssets === i\" class=\"preview-div-processing\">\r\n                        <div class=\"spinner-wrapper\">\r\n                          <mat-spinner [diameter]=\"24\"></mat-spinner>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <p *ngIf=\"processingLoadAssets !== i\" class=\"remove-field text-center\"\r\n                       (click)=\"removeAssetsControl(i)\">\r\n                      Видалити зображення</p>\r\n                  </div>\r\n\r\n                  <div class=\"cell\" fxFlex=\"25\" fxFlex.lt-md=\"50\"\r\n                       *ngIf=\"productForm.get('assets').value.length < 4\">\r\n                    <div class=\"preview-img-wrapper\">\r\n                      <img src=\"{{config.defaultProductImgPath}}\" alt=\"productImage\">\r\n                      <input #inputFile type=\"file\" (change)=\"addAssets($event)\"\r\n                             accept=\".jpg, .jpe, .jpeg, .bmp, .webp, .png\" style=\"display:none;\">\r\n\r\n                      <div class=\"preview-div-processing\">\r\n                        <div class=\"button-wrapper\">\r\n                          <button mat-mini-fab color=\"primary\" type=\"button\"\r\n                                  (click)=\"inputFile.click();\"\r\n                                  [disabled]=\"processingLoadAssets >= 0\">\r\n                            <mat-icon>add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                           \r\n              <div class=\"row\" fxLayout=\"row\" fxFlex=\"100\">\r\n                <div class=\"cell\">\r\n                  <h3 class=\"mat-h3\">Технічні властивості (зображення) колекції</h3>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\" fxLayout=\"row\" fxFlex=\"100\">\r\n                <div formArrayName=\"techAssets\" class=\"cell\" fxFlex=\"25\" fxFlex.lt-md=\"50\"\r\n                     *ngFor=\"let asset of productForm.get('techAssets')['controls']; let i = index\">\r\n                  <div *ngIf=\"productForm.get('techAssets').value[i]\" class=\"preview-img-wrapper\">\r\n                    <img src=\"{{config.imgPath + config.cloudinary.cloud_name + '/c_fill,h_180,w_180/' + productForm.get('techAssets').value[i] + '.jpg'}}\"\r\n                         alt=\"productImage\">\r\n                    <div *ngIf=\"processingLoadTechAssets === i\" class=\"preview-div-processing\">\r\n                      <div class=\"spinner-wrapper\">\r\n                        <mat-spinner [diameter]=\"24\"></mat-spinner>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p *ngIf=\"processingLoadTechAssets !== i\" class=\"remove-field text-center\"\r\n                     (click)=\"removeTechAssetsControl(i)\">\r\n                    Видалити зображення</p>\r\n                </div>\r\n\r\n                <div class=\"cell\" fxFlex=\"25\" fxFlex.lt-md=\"50\"\r\n                     *ngIf=\"productForm.get('techAssets').value.length < 4\">\r\n                  <div class=\"preview-img-wrapper\">\r\n                    <img src=\"{{config.defaultProductImgPath}}\" alt=\"productImage\">\r\n                    <input #inputFile type=\"file\" (change)=\"addTechAssets($event)\"\r\n                           accept=\".jpg, .jpe, .jpeg, .bmp, .webp, .png\" style=\"display:none;\">\r\n\r\n                    <div class=\"preview-div-processing\">\r\n                      <div class=\"button-wrapper\">\r\n                        <button mat-mini-fab color=\"primary\" type=\"button\"\r\n                                (click)=\"inputFile.click();\"\r\n                                [disabled]=\"processingLoadFile >= 0\">\r\n                          <mat-icon>add</mat-icon>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"submit-button-wrapper row\" fxLayout=\"row\">\r\n                <div>\r\n                  <button *ngIf=\"editMode\" mat-raised-button color=\"primary\" class=\"full-width\"\r\n                          [disabled]=\"!productForm.valid || processingLoadFile >=0\">Зберегти</button>\r\n                  <button *ngIf=\"!editMode\" mat-raised-button color=\"primary\" class=\"full-width\"\r\n                          [disabled]=\"!productForm.valid || processingLoadFile >=0\">Створити</button>\r\n                </div>\r\n\r\n                <div fxFlex></div>\r\n                <div>\r\n                  <button mat-raised-button  type=\"button\" (click)=\"goBack()\" class=\"full-width\"\r\n                          [disabled]=\"processingLoadFile >=0 \">Повернутись</button>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { config } from '../../../app.config';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { IDesign } from '../../../interfaces/interface';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-products-editor-form',\r\n  templateUrl: './products-editor-form.component.html',\r\n  styleUrls: ['./products-editor-form.component.scss']\r\n})\r\nexport class ProductsEditorFormComponent implements OnInit {\r\n  @ViewChild('f') productFormDirective: FormGroupDirective;\r\n  config = config;\r\n  productForm: FormGroup;\r\n  processingLoadAssets = -1;\r\n  processingLoadTechAssets = -1;\r\n\r\n  editMode = false;\r\n  edited_id: string;\r\n  parentCategory_id: string;\r\n  parentCategoryName: string;\r\n  // design: IDesign;\r\n  product: any;\r\n\r\n  constructor(\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private productService: ProductService,\r\n    private designService: DesignService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productForm = new FormGroup({\r\n      _id: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(25),\r\n      ]),\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n      ]),\r\n      parent: new FormControl('', [ // select\r\n        Validators.required,\r\n      ]),\r\n      display: new FormControl('', [ // select\r\n        Validators.required,\r\n      ]),\r\n      order: new FormControl('', [ // select\r\n        Validators.required,\r\n      ]),\r\n      assets: new FormArray([]),\r\n      techAssets: new FormArray([]),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(500),\r\n      ]),\r\n      // recommendations: new FormArray([this.initRecommendations()]),\r\n      // designs: new FormArray([this.initDesigns()]),\r\n\r\n    });\r\n\r\n    // this.route.paramMap\r\n    //   .subscribe(paramMap => {\r\n    //     if (paramMap.get('_id')) {\r\n    //       // this.edited_id = paramMap.get('_id');\r\n    //       // this.editMode = true;\r\n    //\r\n    //     }\r\n    //   });\r\n\r\n\r\n    this.route.paramMap.pipe(\r\n      mergeMap(paramMap => {\r\n        this.edited_id = paramMap.get('_id');\r\n        this.parentCategory_id = paramMap.get('parentCategory_id');\r\n        this.parentCategoryName = paramMap.get('parentCategoryName');\r\n        console.log('edited product _id', this.edited_id);\r\n        console.log('edited parentCategory', this.parentCategory_id);\r\n        console.log('edited parentCategoryName', this.parentCategoryName);\r\n         if (!this.edited_id) {\r\n          return of(null);\r\n        }\r\n        return this.productService.getProductById(this.edited_id);\r\n      }),\r\n    )\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.editMode = true;\r\n          console.log('true', result);\r\n          for (let i = 0; i < result.data.assets.length; i++) {\r\n            this.addAssetsControl();\r\n          }\r\n          console.log('result.data.techAssets.length', result.data.techAssets.length);\r\n          for (let i = 0; i < result.data.techAssets.length; i++) {\r\n            this.addTechAssetsControl();\r\n          }\r\n          this.productForm.patchValue(result.data);\r\n          this.productForm.get('_id').disable();\r\n        } else {\r\n          console.log('false');\r\n        }\r\n      });\r\n  }\r\n\r\n  addAssets(event) {\r\n    this.processingLoadAssets = this.productForm.get('assets').value.length;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadAssets = -1;\r\n    } else {\r\n      const filesLinks = this.productForm.get('assets').value;\r\n      filesLinks.push(config.defaultProductImg);\r\n      this.addAssetsControl();\r\n      this.productForm.get('assets').setValue(filesLinks);\r\n      this.productService.productAddAssets(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            filesLinks.pop();\r\n            filesLinks.push(result.data);\r\n            this.productForm.get('assets').setValue(filesLinks);\r\n            this.processingLoadAssets = -1;\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.removeAssetsControl(this.productForm.get('assets').value.length - 1);\r\n            filesLinks.pop();\r\n            this.processingLoadAssets = -1;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  addTechAssets(event) {\r\n    this.processingLoadTechAssets = this.productForm.get('assets').value.length;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadTechAssets = -1;\r\n    } else {\r\n      const filesLinks = this.productForm.get('assets').value;\r\n      filesLinks.push(config.defaultProductImg);\r\n      this.addAssetsControl();\r\n      this.productForm.get('assets').setValue(filesLinks);\r\n      this.productService.productAddTechAssets(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            filesLinks.pop();\r\n            filesLinks.push(result.data);\r\n            this.productForm.get('assets').setValue(filesLinks);\r\n            this.processingLoadTechAssets = -1;\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.removeAssetsControl(this.productForm.get('assets').value.length - 1);\r\n            filesLinks.pop();\r\n            this.processingLoadTechAssets = -1;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onProductFormSubmit() {\r\n    this.product = {\r\n      _id: this.productForm.getRawValue()._id, // raw because may be disabled\r\n      name: this.productForm.get('name').value,\r\n      parent: this.productForm.get('parent').value,\r\n      display: this.productForm.get('display').value,\r\n      order: this.productForm.get('order').value,\r\n      assets: this.productForm.get('assets').value,\r\n      description: this.productForm.get('description').value,\r\n    };\r\n    //\r\n    console.log('productForm submit', this.product);\r\n    this.productService.productUpsert(this.product)\r\n      .subscribe(result => {\r\n          this.matSnackBar.open(result.message, '',\r\n            {duration: 3000});\r\n          this.resetForm();\r\n          if (this.editMode) {\r\n            this.goBack();\r\n          }\r\n        },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  resetForm() {\r\n    this.productFormDirective.resetForm();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  addAssetsControl() {\r\n    const control = <FormArray>this.productForm.get('assets');\r\n    control.push(this.initAssetsControl());\r\n  }\r\n\r\n  removeAssetsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('assets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initAssetsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addTechAssetsControl() {\r\n    const control = <FormArray>this.productForm.get('techAssets');\r\n    control.push(this.initAssetsControl());\r\n  }\r\n\r\n  removeTechAssetsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('techAssets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initTechAssetsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addRecommendationsControl() {\r\n    const control = <FormArray>this.productForm.get('recommendations');\r\n    control.push(this.initRecommendationsControl());\r\n  }\r\n\r\n  removeRecommendationsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('recommendations');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initRecommendationsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  addDesignsControl() {\r\n    const control = <FormArray>this.productForm.get('designs');\r\n    control.push(this.initDesignsControl());\r\n  }\r\n\r\n  removeDesignsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('designs');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initDesignsControl() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { of } from 'rxjs/index';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductService } from '../../../services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-products-editor',\r\n  templateUrl: './products-editor.component.html',\r\n  styleUrls: ['./products-editor.component.scss']\r\n})\r\nexport class ProductsEditorComponent implements OnInit {\r\n  descendants: any;\r\n  catalogForm: FormGroup;\r\n  products: any;\r\n  parentCategory_id: string;\r\n  parentCategoryName: string;\r\n\r\n    constructor(\r\n    private catalogService: CatalogService,\r\n    private sharedService: SharedService,\r\n    private productService: ProductService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.descendants = [];\r\n    this.catalogForm = new FormGroup({\r\n      categories : new FormArray([this.initCategories()]),\r\n    });\r\n\r\n    this.catalogService.getDescendants('products')\r\n      .subscribe(result => this.descendants[0] = result.data,\r\n        err => console.log('помилка завантаження категорій', err)\r\n      );\r\n  }\r\n\r\n  onSelectCategory(event, level) {\r\n    // if (level + 2 === this.catalogForm.get('categories')['controls'].length) {\r\n    //   const control = <FormArray>this.catalogForm.get('categories');\r\n    //   control.controls[level + 1].setValue(null);\r\n    //   // this.catalogForm.get('categories')['controls'].setValue(null);\r\n    // }\r\n    while (level + 1 < this.catalogForm.get('categories')['controls'].length) {\r\n      this.removeCategory(this.catalogForm.get('categories')['controls'].length - 1);\r\n    }\r\n    console.log('event', event);\r\n    this.catalogService.getDescendants(event.value)\r\n      .subscribe(result => {\r\n        if (result.data.length) {\r\n          console.log('descedants present', result.data);\r\n          this.products = null;\r\n          this.descendants[level + 1] = result.data;\r\n          this.addCategory();\r\n        } else {\r\n          this.productService.getProductsByCategory(event.value)\r\n            .subscribe(result => this.products = result.data,\r\n              err => console.log('помилка завантаження категорій', err)\r\n            );\r\n          this.parentCategory_id = event.value;\r\n          this.parentCategoryName = event.source.triggerValue;\r\n          console.log('descedants absent', result.data);\r\n          console.log('this.parentCategory_id', this.parentCategory_id);\r\n        }\r\n        this.descendants[level + 1] = result.data;\r\n        },\r\n        err => console.log('помилка завантаження категорій', err)\r\n      );\r\n  }\r\n\r\n  onCatalogFormSubmit() {\r\n    console.log('onCatalogFormSubmit');\r\n  }\r\n\r\n  addCategory() {\r\n    const control = <FormArray>this.catalogForm.get('categories');\r\n    control.push(this.initCategories());\r\n  }\r\n\r\n  removeCategory(i: number) {\r\n    const control = <FormArray>this.catalogForm.get('categories');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initCategories() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n}\r\n\r\n\r\n","<mat-card>\r\n  <mat-card-header></mat-card-header>\r\n  <mat-card-title></mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <h2 class=\"mat-h3\">{{design._id}}</h2>\r\n    <div class=\"product-cl-image-wrapper-outer\">\r\n      <div class=\"product-cl-image-wrapper-inner\">\r\n        <img src=\"{{config.imgPath + config.cloudinary.cloud_name + '/c_fill,h_180,w_180/' + design.image + '.jpg'}}\"\r\n             alt=\"design picture\" class=\"product-cl-image\">\r\n\r\n        <!--<cl-image class=\"product-cl-image\"-->\r\n          <!--public-id=\"{{design.image || config.defaultProductImgPath}}\"-->\r\n          <!--secure=\"true\">-->\r\n        <!--<cl-transformation-->\r\n        <!--quality=\"auto\" fetch_format=\"auto\" crop=\"thumb\">-->\r\n        <!--&lt;!&ndash;radius=\"20\">&ndash;&gt;-->\r\n        <!--</cl-transformation>-->\r\n        <!--&lt;!&ndash;<cl-transformation overlay=\"cloudinary_icon\" gravity=\"south_east\" x=\"5\" y=\"5\" width=\"50\" opacity=\"60\" effect=\"brightness:200\">&ndash;&gt;-->\r\n        <!--&lt;!&ndash;</cl-transformation>&ndash;&gt;-->\r\n        <!--&lt;!&ndash;<cl-transformation angle=\"10\">&ndash;&gt;-->\r\n        <!--&lt;!&ndash;</cl-transformation>&ndash;&gt;-->\r\n        <!--</cl-image>-->\r\n      </div>\r\n    </div>\r\n      <!--<div class=\"info-block-row-wrapper\">-->\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"info-block-row\">\r\n        <!--<mat-icon class=\"muted\">edit</mat-icon>-->\r\n        <div class=\"info-block-row-title mat-subheading-1\" fxFlex=\"40%\">Структура</div>\r\n        <div class=\"mat-subheading-1 muted\" fxFlex=\"60%\">{{design.structure}}</div>\r\n        <!--<mat-icon *ngIf=\"processing !== 'email'\" fxFlex=\"30px\"-->\r\n                  <!--(click)=\"openDialog(makeEmailObject())\" class=\"muted\">edit</mat-icon>-->\r\n        <!--<mat-spinner *ngIf=\"processing === 'email'\" fxFlex=\"30px\" [diameter]=\"24\"></mat-spinner>-->\r\n      <!--</div>-->\r\n      </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <div fxFlex></div>\r\n    <div fxFlex *ngIf=\"user && user?.role === 'manager' || user?.role === 'admin'\">\r\n      <a mat-icon-button\r\n      [routerLink]=\"['/dashboard/designs_editor_edit', design._id]\"\r\n      [routerLinkActive]=\"['accent-background']\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n        <mat-icon>edit</mat-icon>\r\n      </a>\r\n      <a mat-icon-button color=\"primary\"\r\n         (click)=\"openDialog({message: 'Видалити дизайн ' + design._id, data: design._id})\">\r\n        <mat-icon>delete_forever</mat-icon>\r\n      </a>\r\n    </div>\r\n\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { config } from '../../../app.config';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { IUser } from '../../../interfaces/user-interface';\r\nimport { IDesign } from '../../../interfaces/interface';\r\nimport { ConfirmPopupComponent } from '../confirm-popup/confirm-popup.component';\r\nimport { DesignService } from '../../../services/design.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs/index';\r\nimport { SharedService } from '../../../services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-design-item',\r\n  templateUrl: './design-item.component.html',\r\n  styleUrls: ['./design-item.component.scss']\r\n})\r\nexport class DesignItemComponent implements OnInit {\r\n  @Input() design: IDesign;\r\n  config = config;\r\n  edited_id: string;\r\n  user: IUser;\r\n\r\n\r\n  constructor(\r\n    private matSnackBar: MatSnackBar,\r\n    private userService: UserService,\r\n    private designService: DesignService,\r\n    public dialog: MatDialog,\r\n    private sharedService: SharedService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUserLocal()\r\n      .subscribe(\r\n        user => this.user = user\r\n      );\r\n  }\r\n\r\n  openDialog(confirmPopupData): void {\r\n\r\n    const dialogRef = this.dialog.open(ConfirmPopupComponent, {\r\n      width: '400px',\r\n      data: confirmPopupData,\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      mergeMap(result => {\r\n        if (!result || !result.data.choice){\r\n          return of(null);\r\n        }\r\n        return this.designService.designDelete(result.data._id);\r\n      }))\r\n        .subscribe(result => {\r\n          this.sharedService.sharingEvent(['updateDesigns']);\r\n          console.log('result delete', result);\r\n          },\r\n          err => console.log('err delete', err)\r\n        );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { IResponse } from '../interfaces/server-response-interface';\r\nimport { UserService } from './user.service';\r\nimport { Observable } from 'rxjs/index';\r\nimport { IProduct } from '../interfaces/product-interface';\r\nimport { IDesign } from '../interfaces/interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DesignService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService,\r\n  ) { }\r\n\r\n  getDesigns() {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/design/get-designs',\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  getDesignById(_id) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      }),\r\n    };\r\n    return this.http.get<IResponse>(\r\n      'api/design/get-design-by-id/' + _id,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  designAddImage(file, design_id): Observable<IResponse> {\r\n    console.log('file', file);\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n    formData.append('design_id', design_id);\r\n\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.post<IResponse>(\r\n      'api/design/add-image',\r\n      formData,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  designUpsert(design: IDesign): Observable<IResponse> {\r\n    console.log('desUpsert', design);\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.post<IResponse>(\r\n      'api/design/upsert',\r\n      design,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  designDelete(_id): Observable<IResponse> {\r\n    const token = this.userService.userLocalGetToken('token');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': token\r\n      })\r\n    };\r\n    return this.http.delete<IResponse>(\r\n      'api/design/delete/' + _id,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}